<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2214" onload="init(evt)" viewBox="0 0 1200 2214" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2214" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2197.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2197.00"> </text><svg id="frames" x="10" width="1180" total_samples="514047462"><g><title>[main] (3,247,588 samples, 0.63%)</title><rect x="0.0000%" y="2133" width="0.6318%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3247588"/><text x="0.2500%" y="2143.50"></text></g><g><title>ring_core_0_17_14__sha512_block_data_order_nohw (3,247,588 samples, 0.63%)</title><rect x="0.0000%" y="2117" width="0.6318%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3247588"/><text x="0.2500%" y="2127.50"></text></g><g><title>[unknown] (868,304 samples, 0.17%)</title><rect x="0.6318%" y="2117" width="0.1689%" height="15" fill="rgb(221,193,54)" fg:x="3247588" fg:w="868304"/><text x="0.8818%" y="2127.50"></text></g><g><title>ring::ec::suite_b::ops::p256::p256_scalar_inv_to_mont (868,304 samples, 0.17%)</title><rect x="0.6318%" y="2101" width="0.1689%" height="15" fill="rgb(248,212,6)" fg:x="3247588" fg:w="868304"/><text x="0.8818%" y="2111.50"></text></g><g><title>ring::ec::suite_b::ops::p256::p256_scalar_inv_to_mont::sqr_mul_acc (868,304 samples, 0.17%)</title><rect x="0.6318%" y="2085" width="0.1689%" height="15" fill="rgb(208,68,35)" fg:x="3247588" fg:w="868304"/><text x="0.8818%" y="2095.50"></text></g><g><title>ring_core_0_17_14__p256_scalar_sqr_rep_mont (868,304 samples, 0.17%)</title><rect x="0.6318%" y="2069" width="0.1689%" height="15" fill="rgb(232,128,0)" fg:x="3247588" fg:w="868304"/><text x="0.8818%" y="2079.50"></text></g><g><title>__GI___clock_gettime (1,531,375 samples, 0.30%)</title><rect x="0.8007%" y="2117" width="0.2979%" height="15" fill="rgb(207,160,47)" fg:x="4115892" fg:w="1531375"/><text x="1.0507%" y="2127.50"></text></g><g><title>__kernel_clock_gettime (1,531,375 samples, 0.30%)</title><rect x="0.8007%" y="2101" width="0.2979%" height="15" fill="rgb(228,23,34)" fg:x="4115892" fg:w="1531375"/><text x="1.0507%" y="2111.50"></text></g><g><title>[[vdso]] (1,087,598 samples, 0.21%)</title><rect x="0.8870%" y="2085" width="0.2116%" height="15" fill="rgb(218,30,26)" fg:x="4559669" fg:w="1087598"/><text x="1.1370%" y="2095.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,549,230 samples, 0.30%)</title><rect x="1.0986%" y="2117" width="0.3014%" height="15" fill="rgb(220,122,19)" fg:x="5647267" fg:w="1549230"/><text x="1.3486%" y="2127.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,549,230 samples, 0.30%)</title><rect x="1.0986%" y="2101" width="0.3014%" height="15" fill="rgb(250,228,42)" fg:x="5647267" fg:w="1549230"/><text x="1.3486%" y="2111.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,549,230 samples, 0.30%)</title><rect x="1.0986%" y="2085" width="0.3014%" height="15" fill="rgb(240,193,28)" fg:x="5647267" fg:w="1549230"/><text x="1.3486%" y="2095.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,549,230 samples, 0.30%)</title><rect x="1.0986%" y="2069" width="0.3014%" height="15" fill="rgb(216,20,37)" fg:x="5647267" fg:w="1549230"/><text x="1.3486%" y="2079.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,549,230 samples, 0.30%)</title><rect x="1.0986%" y="2053" width="0.3014%" height="15" fill="rgb(206,188,39)" fg:x="5647267" fg:w="1549230"/><text x="1.3486%" y="2063.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,549,230 samples, 0.30%)</title><rect x="1.0986%" y="2037" width="0.3014%" height="15" fill="rgb(217,207,13)" fg:x="5647267" fg:w="1549230"/><text x="1.3486%" y="2047.50"></text></g><g><title>ring::aead::aes_gcm::open (579,364 samples, 0.11%)</title><rect x="1.4000%" y="2117" width="0.1127%" height="15" fill="rgb(231,73,38)" fg:x="7196497" fg:w="579364"/><text x="1.6500%" y="2127.50"></text></g><g><title>ring::aead::aes_gcm::open_whole_partial (579,364 samples, 0.11%)</title><rect x="1.4000%" y="2101" width="0.1127%" height="15" fill="rgb(225,20,46)" fg:x="7196497" fg:w="579364"/><text x="1.6500%" y="2111.50"></text></g><g><title>ring::aead::gcm::Context&lt;K&gt;::new (579,364 samples, 0.11%)</title><rect x="1.4000%" y="2085" width="0.1127%" height="15" fill="rgb(210,31,41)" fg:x="7196497" fg:w="579364"/><text x="1.6500%" y="2095.50"></text></g><g><title>ring::polyfill::sliceutil::overwrite_at_start (579,364 samples, 0.11%)</title><rect x="1.4000%" y="2069" width="0.1127%" height="15" fill="rgb(221,200,47)" fg:x="7196497" fg:w="579364"/><text x="1.6500%" y="2079.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (579,364 samples, 0.11%)</title><rect x="1.4000%" y="2053" width="0.1127%" height="15" fill="rgb(226,26,5)" fg:x="7196497" fg:w="579364"/><text x="1.6500%" y="2063.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (579,364 samples, 0.11%)</title><rect x="1.4000%" y="2037" width="0.1127%" height="15" fill="rgb(249,33,26)" fg:x="7196497" fg:w="579364"/><text x="1.6500%" y="2047.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (579,364 samples, 0.11%)</title><rect x="1.4000%" y="2021" width="0.1127%" height="15" fill="rgb(235,183,28)" fg:x="7196497" fg:w="579364"/><text x="1.6500%" y="2031.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (579,364 samples, 0.11%)</title><rect x="1.4000%" y="2005" width="0.1127%" height="15" fill="rgb(221,5,38)" fg:x="7196497" fg:w="579364"/><text x="1.6500%" y="2015.50"></text></g><g><title>ring::polyfill::sliceutil::overwrite_at_start::{{closure}} (579,364 samples, 0.11%)</title><rect x="1.4000%" y="1989" width="0.1127%" height="15" fill="rgb(247,18,42)" fg:x="7196497" fg:w="579364"/><text x="1.6500%" y="1999.50"></text></g><g><title>memcpy@plt (579,364 samples, 0.11%)</title><rect x="1.4000%" y="1973" width="0.1127%" height="15" fill="rgb(241,131,45)" fg:x="7196497" fg:w="579364"/><text x="1.6500%" y="1983.50"></text></g><g><title>[unknown] (4,977,888 samples, 0.97%)</title><rect x="0.6318%" y="2133" width="0.9684%" height="15" fill="rgb(249,31,29)" fg:x="3247588" fg:w="4977888"/><text x="0.8818%" y="2143.50"></text></g><g><title>ring::aead::aes_gcm::seal (449,615 samples, 0.09%)</title><rect x="1.5127%" y="2117" width="0.0875%" height="15" fill="rgb(225,111,53)" fg:x="7775861" fg:w="449615"/><text x="1.7627%" y="2127.50"></text></g><g><title>ring::aead::aes_gcm::seal_whole_partial (449,615 samples, 0.09%)</title><rect x="1.5127%" y="2101" width="0.0875%" height="15" fill="rgb(238,160,17)" fg:x="7775861" fg:w="449615"/><text x="1.7627%" y="2111.50"></text></g><g><title>core::ops::function::FnOnce::call_once (449,615 samples, 0.09%)</title><rect x="1.5127%" y="2085" width="0.0875%" height="15" fill="rgb(214,148,48)" fg:x="7775861" fg:w="449615"/><text x="1.7627%" y="2095.50"></text></g><g><title>ring::aead::aes_gcm::aarch64::seal_whole (449,615 samples, 0.09%)</title><rect x="1.5127%" y="2069" width="0.0875%" height="15" fill="rgb(232,36,49)" fg:x="7775861" fg:w="449615"/><text x="1.7627%" y="2079.50"></text></g><g><title>ring_core_0_17_14__aes_gcm_enc_kernel (449,615 samples, 0.09%)</title><rect x="1.5127%" y="2053" width="0.0875%" height="15" fill="rgb(209,103,24)" fg:x="7775861" fg:w="449615"/><text x="1.7627%" y="2063.50"></text></g><g><title>__GI___clock_gettime (500,610 samples, 0.10%)</title><rect x="1.6001%" y="2133" width="0.0974%" height="15" fill="rgb(229,88,8)" fg:x="8225476" fg:w="500610"/><text x="1.8501%" y="2143.50"></text></g><g><title>__kernel_clock_gettime (500,610 samples, 0.10%)</title><rect x="1.6001%" y="2117" width="0.0974%" height="15" fill="rgb(213,181,19)" fg:x="8225476" fg:w="500610"/><text x="1.8501%" y="2127.50"></text></g><g><title>[[vdso]] (500,610 samples, 0.10%)</title><rect x="1.6001%" y="2101" width="0.0974%" height="15" fill="rgb(254,191,54)" fg:x="8225476" fg:w="500610"/><text x="1.8501%" y="2111.50"></text></g><g><title>__libc_start_main_alias_2 (610,859 samples, 0.12%)</title><rect x="1.6975%" y="2133" width="0.1188%" height="15" fill="rgb(241,83,37)" fg:x="8726086" fg:w="610859"/><text x="1.9475%" y="2143.50"></text></g><g><title>sys_siglist@GLIBC_2.17 (610,859 samples, 0.12%)</title><rect x="1.6975%" y="2117" width="0.1188%" height="15" fill="rgb(233,36,39)" fg:x="8726086" fg:w="610859"/><text x="1.9475%" y="2127.50"></text></g><g><title>sys_siglist@GLIBC_2.17 (610,859 samples, 0.12%)</title><rect x="1.6975%" y="2101" width="0.1188%" height="15" fill="rgb(226,3,54)" fg:x="8726086" fg:w="610859"/><text x="1.9475%" y="2111.50"></text></g><g><title>main (610,859 samples, 0.12%)</title><rect x="1.6975%" y="2085" width="0.1188%" height="15" fill="rgb(245,192,40)" fg:x="8726086" fg:w="610859"/><text x="1.9475%" y="2095.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (610,859 samples, 0.12%)</title><rect x="1.6975%" y="2069" width="0.1188%" height="15" fill="rgb(238,167,29)" fg:x="8726086" fg:w="610859"/><text x="1.9475%" y="2079.50"></text></g><g><title>clock_gettime@plt (610,859 samples, 0.12%)</title><rect x="1.6975%" y="2053" width="0.1188%" height="15" fill="rgb(232,182,51)" fg:x="8726086" fg:w="610859"/><text x="1.9475%" y="2063.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (814,415 samples, 0.16%)</title><rect x="2.2347%" y="1573" width="0.1584%" height="15" fill="rgb(231,60,39)" fg:x="11487416" fg:w="814415"/><text x="2.4847%" y="1583.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (814,415 samples, 0.16%)</title><rect x="2.2347%" y="1557" width="0.1584%" height="15" fill="rgb(208,69,12)" fg:x="11487416" fg:w="814415"/><text x="2.4847%" y="1567.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (814,415 samples, 0.16%)</title><rect x="2.2347%" y="1541" width="0.1584%" height="15" fill="rgb(235,93,37)" fg:x="11487416" fg:w="814415"/><text x="2.4847%" y="1551.50"></text></g><g><title>core::cell::BorrowRefMut::new (814,415 samples, 0.16%)</title><rect x="2.2347%" y="1525" width="0.1584%" height="15" fill="rgb(213,116,39)" fg:x="11487416" fg:w="814415"/><text x="2.4847%" y="1535.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (814,415 samples, 0.16%)</title><rect x="2.2347%" y="1509" width="0.1584%" height="15" fill="rgb(222,207,29)" fg:x="11487416" fg:w="814415"/><text x="2.4847%" y="1519.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (511,816 samples, 0.10%)</title><rect x="2.3931%" y="1557" width="0.0996%" height="15" fill="rgb(206,96,30)" fg:x="12301831" fg:w="511816"/><text x="2.6431%" y="1567.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock (511,816 samples, 0.10%)</title><rect x="2.3931%" y="1541" width="0.0996%" height="15" fill="rgb(218,138,4)" fg:x="12301831" fg:w="511816"/><text x="2.6431%" y="1551.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::try_lock (511,816 samples, 0.10%)</title><rect x="2.3931%" y="1525" width="0.0996%" height="15" fill="rgb(250,191,14)" fg:x="12301831" fg:w="511816"/><text x="2.6431%" y="1535.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::try_lock (511,816 samples, 0.10%)</title><rect x="2.3931%" y="1509" width="0.0996%" height="15" fill="rgb(239,60,40)" fg:x="12301831" fg:w="511816"/><text x="2.6431%" y="1519.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (511,816 samples, 0.10%)</title><rect x="2.3931%" y="1493" width="0.0996%" height="15" fill="rgb(206,27,48)" fg:x="12301831" fg:w="511816"/><text x="2.6431%" y="1503.50"></text></g><g><title>core::sync::atomic::atomic_load (511,816 samples, 0.10%)</title><rect x="2.3931%" y="1477" width="0.0996%" height="15" fill="rgb(225,35,8)" fg:x="12301831" fg:w="511816"/><text x="2.6431%" y="1487.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (824,653 samples, 0.16%)</title><rect x="2.4927%" y="1541" width="0.1604%" height="15" fill="rgb(250,213,24)" fg:x="12813647" fg:w="824653"/><text x="2.7427%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (824,653 samples, 0.16%)</title><rect x="2.4927%" y="1525" width="0.1604%" height="15" fill="rgb(247,123,22)" fg:x="12813647" fg:w="824653"/><text x="2.7427%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (824,653 samples, 0.16%)</title><rect x="2.4927%" y="1509" width="0.1604%" height="15" fill="rgb(231,138,38)" fg:x="12813647" fg:w="824653"/><text x="2.7427%" y="1519.50"></text></g><g><title>__GI___pthread_disable_asynccancel (1,045,765 samples, 0.20%)</title><rect x="3.3131%" y="1493" width="0.2034%" height="15" fill="rgb(231,145,46)" fg:x="17031103" fg:w="1045765"/><text x="3.5631%" y="1503.50"></text></g><g><title>__arm64_sys_epoll_pwait (1,145,992 samples, 0.22%)</title><rect x="3.5166%" y="1429" width="0.2229%" height="15" fill="rgb(251,118,11)" fg:x="18076868" fg:w="1145992"/><text x="3.7666%" y="1439.50"></text></g><g><title>ep_send_events (1,454,279 samples, 0.28%)</title><rect x="3.9470%" y="1349" width="0.2829%" height="15" fill="rgb(217,147,25)" fg:x="20289220" fg:w="1454279"/><text x="4.1970%" y="1359.50"></text></g><g><title>ep_item_poll.isra.0 (1,454,279 samples, 0.28%)</title><rect x="3.9470%" y="1333" width="0.2829%" height="15" fill="rgb(247,81,37)" fg:x="20289220" fg:w="1454279"/><text x="4.1970%" y="1343.50"></text></g><g><title>sock_poll (870,416 samples, 0.17%)</title><rect x="4.0605%" y="1317" width="0.1693%" height="15" fill="rgb(209,12,38)" fg:x="20873083" fg:w="870416"/><text x="4.3105%" y="1327.50"></text></g><g><title>__schedule (491,244 samples, 0.10%)</title><rect x="4.2299%" y="1317" width="0.0956%" height="15" fill="rgb(227,1,9)" fg:x="21743499" fg:w="491244"/><text x="4.4799%" y="1327.50"></text></g><g><title>hrtimer_start_range_ns (614,298 samples, 0.12%)</title><rect x="4.3254%" y="1317" width="0.1195%" height="15" fill="rgb(248,47,43)" fg:x="22234743" fg:w="614298"/><text x="4.5754%" y="1327.50"></text></g><g><title>ena_clean_tx_irq (560,538 samples, 0.11%)</title><rect x="5.3645%" y="1061" width="0.1090%" height="15" fill="rgb(221,10,30)" fg:x="27575829" fg:w="560538"/><text x="5.6145%" y="1071.50"></text></g><g><title>arch_local_irq_enable (5,749,064 samples, 1.12%)</title><rect x="4.4449%" y="1285" width="1.1184%" height="15" fill="rgb(210,229,1)" fg:x="22849041" fg:w="5749064"/><text x="4.6949%" y="1295.50"></text></g><g><title>el1h_64_irq (1,534,957 samples, 0.30%)</title><rect x="5.2647%" y="1269" width="0.2986%" height="15" fill="rgb(222,148,37)" fg:x="27063148" fg:w="1534957"/><text x="5.5147%" y="1279.50"></text></g><g><title>el1h_64_irq_handler (1,534,957 samples, 0.30%)</title><rect x="5.2647%" y="1253" width="0.2986%" height="15" fill="rgb(234,67,33)" fg:x="27063148" fg:w="1534957"/><text x="5.5147%" y="1263.50"></text></g><g><title>el1_interrupt (1,534,957 samples, 0.30%)</title><rect x="5.2647%" y="1237" width="0.2986%" height="15" fill="rgb(247,98,35)" fg:x="27063148" fg:w="1534957"/><text x="5.5147%" y="1247.50"></text></g><g><title>irq_exit_rcu (1,534,957 samples, 0.30%)</title><rect x="5.2647%" y="1221" width="0.2986%" height="15" fill="rgb(247,138,52)" fg:x="27063148" fg:w="1534957"/><text x="5.5147%" y="1231.50"></text></g><g><title>__irq_exit_rcu (1,534,957 samples, 0.30%)</title><rect x="5.2647%" y="1205" width="0.2986%" height="15" fill="rgb(213,79,30)" fg:x="27063148" fg:w="1534957"/><text x="5.5147%" y="1215.50"></text></g><g><title>do_softirq_own_stack (1,534,957 samples, 0.30%)</title><rect x="5.2647%" y="1189" width="0.2986%" height="15" fill="rgb(246,177,23)" fg:x="27063148" fg:w="1534957"/><text x="5.5147%" y="1199.50"></text></g><g><title>call_on_irq_stack (1,534,957 samples, 0.30%)</title><rect x="5.2647%" y="1173" width="0.2986%" height="15" fill="rgb(230,62,27)" fg:x="27063148" fg:w="1534957"/><text x="5.5147%" y="1183.50"></text></g><g><title>____do_softirq (1,534,957 samples, 0.30%)</title><rect x="5.2647%" y="1157" width="0.2986%" height="15" fill="rgb(216,154,8)" fg:x="27063148" fg:w="1534957"/><text x="5.5147%" y="1167.50"></text></g><g><title>__softirqentry_text_start (1,534,957 samples, 0.30%)</title><rect x="5.2647%" y="1141" width="0.2986%" height="15" fill="rgb(244,35,45)" fg:x="27063148" fg:w="1534957"/><text x="5.5147%" y="1151.50"></text></g><g><title>handle_softirqs (1,534,957 samples, 0.30%)</title><rect x="5.2647%" y="1125" width="0.2986%" height="15" fill="rgb(251,115,12)" fg:x="27063148" fg:w="1534957"/><text x="5.5147%" y="1135.50"></text></g><g><title>net_rx_action (1,022,276 samples, 0.20%)</title><rect x="5.3645%" y="1109" width="0.1989%" height="15" fill="rgb(240,54,50)" fg:x="27575829" fg:w="1022276"/><text x="5.6145%" y="1119.50"></text></g><g><title>__napi_poll (1,022,276 samples, 0.20%)</title><rect x="5.3645%" y="1093" width="0.1989%" height="15" fill="rgb(233,84,52)" fg:x="27575829" fg:w="1022276"/><text x="5.6145%" y="1103.50"></text></g><g><title>ena_io_poll (1,022,276 samples, 0.20%)</title><rect x="5.3645%" y="1077" width="0.1989%" height="15" fill="rgb(207,117,47)" fg:x="27575829" fg:w="1022276"/><text x="5.6145%" y="1087.50"></text></g><g><title>napi_complete_done (461,738 samples, 0.09%)</title><rect x="5.4735%" y="1061" width="0.0898%" height="15" fill="rgb(249,43,39)" fg:x="28136367" fg:w="461738"/><text x="5.7235%" y="1071.50"></text></g><g><title>netif_receive_skb_list_internal (461,738 samples, 0.09%)</title><rect x="5.4735%" y="1045" width="0.0898%" height="15" fill="rgb(209,38,44)" fg:x="28136367" fg:w="461738"/><text x="5.7235%" y="1055.50"></text></g><g><title>__netif_receive_skb_list_core (461,738 samples, 0.09%)</title><rect x="5.4735%" y="1029" width="0.0898%" height="15" fill="rgb(236,212,23)" fg:x="28136367" fg:w="461738"/><text x="5.7235%" y="1039.50"></text></g><g><title>ip_list_rcv (461,738 samples, 0.09%)</title><rect x="5.4735%" y="1013" width="0.0898%" height="15" fill="rgb(242,79,21)" fg:x="28136367" fg:w="461738"/><text x="5.7235%" y="1023.50"></text></g><g><title>ip_sublist_rcv (461,738 samples, 0.09%)</title><rect x="5.4735%" y="997" width="0.0898%" height="15" fill="rgb(211,96,35)" fg:x="28136367" fg:w="461738"/><text x="5.7235%" y="1007.50"></text></g><g><title>ip_sublist_rcv_finish (461,738 samples, 0.09%)</title><rect x="5.4735%" y="981" width="0.0898%" height="15" fill="rgb(253,215,40)" fg:x="28136367" fg:w="461738"/><text x="5.7235%" y="991.50"></text></g><g><title>ip_local_deliver (461,738 samples, 0.09%)</title><rect x="5.4735%" y="965" width="0.0898%" height="15" fill="rgb(211,81,21)" fg:x="28136367" fg:w="461738"/><text x="5.7235%" y="975.50"></text></g><g><title>ip_local_deliver_finish (461,738 samples, 0.09%)</title><rect x="5.4735%" y="949" width="0.0898%" height="15" fill="rgb(208,190,38)" fg:x="28136367" fg:w="461738"/><text x="5.7235%" y="959.50"></text></g><g><title>ip_protocol_deliver_rcu (461,738 samples, 0.09%)</title><rect x="5.4735%" y="933" width="0.0898%" height="15" fill="rgb(235,213,38)" fg:x="28136367" fg:w="461738"/><text x="5.7235%" y="943.50"></text></g><g><title>tcp_v4_rcv (461,738 samples, 0.09%)</title><rect x="5.4735%" y="917" width="0.0898%" height="15" fill="rgb(237,122,38)" fg:x="28136367" fg:w="461738"/><text x="5.7235%" y="927.50"></text></g><g><title>tcp_v4_do_rcv (461,738 samples, 0.09%)</title><rect x="5.4735%" y="901" width="0.0898%" height="15" fill="rgb(244,218,35)" fg:x="28136367" fg:w="461738"/><text x="5.7235%" y="911.50"></text></g><g><title>tcp_rcv_established (461,738 samples, 0.09%)</title><rect x="5.4735%" y="885" width="0.0898%" height="15" fill="rgb(240,68,47)" fg:x="28136367" fg:w="461738"/><text x="5.7235%" y="895.50"></text></g><g><title>__tcp_push_pending_frames (461,738 samples, 0.09%)</title><rect x="5.4735%" y="869" width="0.0898%" height="15" fill="rgb(210,16,53)" fg:x="28136367" fg:w="461738"/><text x="5.7235%" y="879.50"></text></g><g><title>tcp_write_xmit (461,738 samples, 0.09%)</title><rect x="5.4735%" y="853" width="0.0898%" height="15" fill="rgb(235,124,12)" fg:x="28136367" fg:w="461738"/><text x="5.7235%" y="863.50"></text></g><g><title>skb_clone (461,738 samples, 0.09%)</title><rect x="5.4735%" y="837" width="0.0898%" height="15" fill="rgb(224,169,11)" fg:x="28136367" fg:w="461738"/><text x="5.7235%" y="847.50"></text></g><g><title>ep_poll (8,970,186 samples, 1.75%)</title><rect x="3.9470%" y="1365" width="1.7450%" height="15" fill="rgb(250,166,2)" fg:x="20289220" fg:w="8970186"/><text x="4.1970%" y="1375.50"></text></g><g><title>schedule_hrtimeout_range (7,515,907 samples, 1.46%)</title><rect x="4.2299%" y="1349" width="1.4621%" height="15" fill="rgb(242,216,29)" fg:x="21743499" fg:w="7515907"/><text x="4.4799%" y="1359.50"></text></g><g><title>schedule_hrtimeout_range_clock (7,515,907 samples, 1.46%)</title><rect x="4.2299%" y="1333" width="1.4621%" height="15" fill="rgb(230,116,27)" fg:x="21743499" fg:w="7515907"/><text x="4.4799%" y="1343.50"></text></g><g><title>schedule (6,410,365 samples, 1.25%)</title><rect x="4.4449%" y="1317" width="1.2470%" height="15" fill="rgb(228,99,48)" fg:x="22849041" fg:w="6410365"/><text x="4.6949%" y="1327.50"></text></g><g><title>__schedule (6,410,365 samples, 1.25%)</title><rect x="4.4449%" y="1301" width="1.2470%" height="15" fill="rgb(253,11,6)" fg:x="22849041" fg:w="6410365"/><text x="4.6949%" y="1311.50"></text></g><g><title>schedule_debug.constprop.0 (661,301 samples, 0.13%)</title><rect x="5.5633%" y="1285" width="0.1286%" height="15" fill="rgb(247,143,39)" fg:x="28598105" fg:w="661301"/><text x="5.8133%" y="1295.50"></text></g><g><title>__arm64_sys_epoll_pwait (10,621,312 samples, 2.07%)</title><rect x="3.7395%" y="1413" width="2.0662%" height="15" fill="rgb(236,97,10)" fg:x="19222860" fg:w="10621312"/><text x="3.9895%" y="1423.50">_..</text></g><g><title>do_epoll_pwait.part.0 (10,621,312 samples, 2.07%)</title><rect x="3.7395%" y="1397" width="2.0662%" height="15" fill="rgb(233,208,19)" fg:x="19222860" fg:w="10621312"/><text x="3.9895%" y="1407.50">d..</text></g><g><title>do_epoll_wait (10,163,433 samples, 1.98%)</title><rect x="3.8286%" y="1381" width="1.9771%" height="15" fill="rgb(216,164,2)" fg:x="19680739" fg:w="10163433"/><text x="4.0786%" y="1391.50">d..</text></g><g><title>schedule_hrtimeout_range (584,766 samples, 0.11%)</title><rect x="5.6920%" y="1365" width="0.1138%" height="15" fill="rgb(220,129,5)" fg:x="29259406" fg:w="584766"/><text x="5.9420%" y="1375.50"></text></g><g><title>do_el0_svc (12,255,155 samples, 2.38%)</title><rect x="3.5166%" y="1461" width="2.3841%" height="15" fill="rgb(242,17,10)" fg:x="18076868" fg:w="12255155"/><text x="3.7666%" y="1471.50">do..</text></g><g><title>el0_svc_common.constprop.0 (12,255,155 samples, 2.38%)</title><rect x="3.5166%" y="1445" width="2.3841%" height="15" fill="rgb(242,107,0)" fg:x="18076868" fg:w="12255155"/><text x="3.7666%" y="1455.50">el..</text></g><g><title>invoke_syscall (11,109,163 samples, 2.16%)</title><rect x="3.7395%" y="1429" width="2.1611%" height="15" fill="rgb(251,28,31)" fg:x="19222860" fg:w="11109163"/><text x="3.9895%" y="1439.50">i..</text></g><g><title>timespec64_add_safe (487,851 samples, 0.09%)</title><rect x="5.8057%" y="1413" width="0.0949%" height="15" fill="rgb(233,223,10)" fg:x="29844172" fg:w="487851"/><text x="6.0557%" y="1423.50"></text></g><g><title>clear_rseq_cs.isra.0 (1,284,710 samples, 0.25%)</title><rect x="6.2473%" y="1429" width="0.2499%" height="15" fill="rgb(215,21,27)" fg:x="32114122" fg:w="1284710"/><text x="6.4973%" y="1439.50"></text></g><g><title>mio::poll::Poll::poll (24,552,392 samples, 4.78%)</title><rect x="2.6531%" y="1541" width="4.7763%" height="15" fill="rgb(232,23,21)" fg:x="13638300" fg:w="24552392"/><text x="2.9031%" y="1551.50">mio::p..</text></g><g><title>mio::sys::unix::selector::Selector::select (24,552,392 samples, 4.78%)</title><rect x="2.6531%" y="1525" width="4.7763%" height="15" fill="rgb(244,5,23)" fg:x="13638300" fg:w="24552392"/><text x="2.9031%" y="1535.50">mio::s..</text></g><g><title>__GI_epoll_pwait (22,493,912 samples, 4.38%)</title><rect x="3.0536%" y="1509" width="4.3758%" height="15" fill="rgb(226,81,46)" fg:x="15696780" fg:w="22493912"/><text x="3.3036%" y="1519.50">__GI_..</text></g><g><title>el0t_64_sync_handler (20,113,824 samples, 3.91%)</title><rect x="3.5166%" y="1493" width="3.9128%" height="15" fill="rgb(247,70,30)" fg:x="18076868" fg:w="20113824"/><text x="3.7666%" y="1503.50">el0t..</text></g><g><title>el0_svc (20,113,824 samples, 3.91%)</title><rect x="3.5166%" y="1477" width="3.9128%" height="15" fill="rgb(212,68,19)" fg:x="18076868" fg:w="20113824"/><text x="3.7666%" y="1487.50">el0_..</text></g><g><title>do_notify_resume (7,858,669 samples, 1.53%)</title><rect x="5.9006%" y="1461" width="1.5288%" height="15" fill="rgb(240,187,13)" fg:x="30332023" fg:w="7858669"/><text x="6.1506%" y="1471.50"></text></g><g><title>__rseq_handle_notify_resume (6,076,570 samples, 1.18%)</title><rect x="6.2473%" y="1445" width="1.1821%" height="15" fill="rgb(223,113,26)" fg:x="32114122" fg:w="6076570"/><text x="6.4973%" y="1455.50"></text></g><g><title>rseq_get_rseq_cs.isra.0 (4,791,860 samples, 0.93%)</title><rect x="6.4972%" y="1429" width="0.9322%" height="15" fill="rgb(206,192,2)" fg:x="33398832" fg:w="4791860"/><text x="6.7472%" y="1439.50"></text></g><g><title>el1h_64_irq (1,862,891 samples, 0.36%)</title><rect x="7.0670%" y="1413" width="0.3624%" height="15" fill="rgb(241,108,4)" fg:x="36327801" fg:w="1862891"/><text x="7.3170%" y="1423.50"></text></g><g><title>el1h_64_irq_handler (1,862,891 samples, 0.36%)</title><rect x="7.0670%" y="1397" width="0.3624%" height="15" fill="rgb(247,173,49)" fg:x="36327801" fg:w="1862891"/><text x="7.3170%" y="1407.50"></text></g><g><title>el1_interrupt (1,862,891 samples, 0.36%)</title><rect x="7.0670%" y="1381" width="0.3624%" height="15" fill="rgb(224,114,35)" fg:x="36327801" fg:w="1862891"/><text x="7.3170%" y="1391.50"></text></g><g><title>irq_exit_rcu (1,862,891 samples, 0.36%)</title><rect x="7.0670%" y="1365" width="0.3624%" height="15" fill="rgb(245,159,27)" fg:x="36327801" fg:w="1862891"/><text x="7.3170%" y="1375.50"></text></g><g><title>__irq_exit_rcu (1,862,891 samples, 0.36%)</title><rect x="7.0670%" y="1349" width="0.3624%" height="15" fill="rgb(245,172,44)" fg:x="36327801" fg:w="1862891"/><text x="7.3170%" y="1359.50"></text></g><g><title>do_softirq_own_stack (1,862,891 samples, 0.36%)</title><rect x="7.0670%" y="1333" width="0.3624%" height="15" fill="rgb(236,23,11)" fg:x="36327801" fg:w="1862891"/><text x="7.3170%" y="1343.50"></text></g><g><title>call_on_irq_stack (1,862,891 samples, 0.36%)</title><rect x="7.0670%" y="1317" width="0.3624%" height="15" fill="rgb(205,117,38)" fg:x="36327801" fg:w="1862891"/><text x="7.3170%" y="1327.50"></text></g><g><title>____do_softirq (1,862,891 samples, 0.36%)</title><rect x="7.0670%" y="1301" width="0.3624%" height="15" fill="rgb(237,72,25)" fg:x="36327801" fg:w="1862891"/><text x="7.3170%" y="1311.50"></text></g><g><title>__softirqentry_text_start (1,862,891 samples, 0.36%)</title><rect x="7.0670%" y="1285" width="0.3624%" height="15" fill="rgb(244,70,9)" fg:x="36327801" fg:w="1862891"/><text x="7.3170%" y="1295.50"></text></g><g><title>handle_softirqs (1,862,891 samples, 0.36%)</title><rect x="7.0670%" y="1269" width="0.3624%" height="15" fill="rgb(217,125,39)" fg:x="36327801" fg:w="1862891"/><text x="7.3170%" y="1279.50"></text></g><g><title>tokio::io::ready::Ready::from_mio (494,330 samples, 0.10%)</title><rect x="7.4294%" y="1541" width="0.0962%" height="15" fill="rgb(235,36,10)" fg:x="38190692" fg:w="494330"/><text x="7.6794%" y="1551.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (590,841 samples, 0.11%)</title><rect x="7.5256%" y="1541" width="0.1149%" height="15" fill="rgb(251,123,47)" fg:x="38685022" fg:w="590841"/><text x="7.7756%" y="1551.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_update (590,841 samples, 0.11%)</title><rect x="7.5256%" y="1525" width="0.1149%" height="15" fill="rgb(221,13,13)" fg:x="38685022" fg:w="590841"/><text x="7.7756%" y="1535.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (590,841 samples, 0.11%)</title><rect x="7.5256%" y="1509" width="0.1149%" height="15" fill="rgb(238,131,9)" fg:x="38685022" fg:w="590841"/><text x="7.7756%" y="1519.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (590,841 samples, 0.11%)</title><rect x="7.5256%" y="1493" width="0.1149%" height="15" fill="rgb(211,50,8)" fg:x="38685022" fg:w="590841"/><text x="7.7756%" y="1503.50"></text></g><g><title>__aarch64_cas8_acq_rel (590,841 samples, 0.11%)</title><rect x="7.5256%" y="1477" width="0.1149%" height="15" fill="rgb(245,182,24)" fg:x="38685022" fg:w="590841"/><text x="7.7756%" y="1487.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (855,018 samples, 0.17%)</title><rect x="7.6405%" y="1461" width="0.1663%" height="15" fill="rgb(242,14,37)" fg:x="39275863" fg:w="855018"/><text x="7.8905%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule (855,018 samples, 0.17%)</title><rect x="7.6405%" y="1445" width="0.1663%" height="15" fill="rgb(246,228,12)" fg:x="39275863" fg:w="855018"/><text x="7.8905%" y="1455.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (27,839,162 samples, 5.42%)</title><rect x="2.4927%" y="1557" width="5.4157%" height="15" fill="rgb(213,55,15)" fg:x="12813647" fg:w="27839162"/><text x="2.7427%" y="1567.50">tokio::..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (1,376,946 samples, 0.27%)</title><rect x="7.6405%" y="1541" width="0.2679%" height="15" fill="rgb(209,9,3)" fg:x="39275863" fg:w="1376946"/><text x="7.8905%" y="1551.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (1,376,946 samples, 0.27%)</title><rect x="7.6405%" y="1525" width="0.2679%" height="15" fill="rgb(230,59,30)" fg:x="39275863" fg:w="1376946"/><text x="7.8905%" y="1535.50"></text></g><g><title>core::task::wake::Waker::wake (1,376,946 samples, 0.27%)</title><rect x="7.6405%" y="1509" width="0.2679%" height="15" fill="rgb(209,121,21)" fg:x="39275863" fg:w="1376946"/><text x="7.8905%" y="1519.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1,376,946 samples, 0.27%)</title><rect x="7.6405%" y="1493" width="0.2679%" height="15" fill="rgb(220,109,13)" fg:x="39275863" fg:w="1376946"/><text x="7.8905%" y="1503.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (1,376,946 samples, 0.27%)</title><rect x="7.6405%" y="1477" width="0.2679%" height="15" fill="rgb(232,18,1)" fg:x="39275863" fg:w="1376946"/><text x="7.8905%" y="1487.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (521,928 samples, 0.10%)</title><rect x="7.8068%" y="1461" width="0.1015%" height="15" fill="rgb(215,41,42)" fg:x="40130881" fg:w="521928"/><text x="8.0568%" y="1471.50"></text></g><g><title>tokio::runtime::signal::Driver::process (493,821 samples, 0.10%)</title><rect x="7.9084%" y="1557" width="0.0961%" height="15" fill="rgb(224,123,36)" fg:x="40652809" fg:w="493821"/><text x="8.1584%" y="1567.50"></text></g><g><title>tokio::runtime::time::Inner::lock (348,569 samples, 0.07%)</title><rect x="8.0044%" y="1525" width="0.0678%" height="15" fill="rgb(240,125,3)" fg:x="41146630" fg:w="348569"/><text x="8.2544%" y="1535.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (348,569 samples, 0.07%)</title><rect x="8.0044%" y="1509" width="0.0678%" height="15" fill="rgb(205,98,50)" fg:x="41146630" fg:w="348569"/><text x="8.2544%" y="1519.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (348,569 samples, 0.07%)</title><rect x="8.0044%" y="1493" width="0.0678%" height="15" fill="rgb(205,185,37)" fg:x="41146630" fg:w="348569"/><text x="8.2544%" y="1503.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (348,569 samples, 0.07%)</title><rect x="8.0044%" y="1477" width="0.0678%" height="15" fill="rgb(238,207,15)" fg:x="41146630" fg:w="348569"/><text x="8.2544%" y="1487.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (348,569 samples, 0.07%)</title><rect x="8.0044%" y="1461" width="0.0678%" height="15" fill="rgb(213,199,42)" fg:x="41146630" fg:w="348569"/><text x="8.2544%" y="1471.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (348,569 samples, 0.07%)</title><rect x="8.0044%" y="1445" width="0.0678%" height="15" fill="rgb(235,201,11)" fg:x="41146630" fg:w="348569"/><text x="8.2544%" y="1455.50"></text></g><g><title>__aarch64_cas1_acq (348,569 samples, 0.07%)</title><rect x="8.0044%" y="1429" width="0.0678%" height="15" fill="rgb(207,46,11)" fg:x="41146630" fg:w="348569"/><text x="8.2544%" y="1439.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (417,656 samples, 0.08%)</title><rect x="8.0044%" y="1541" width="0.0812%" height="15" fill="rgb(241,35,35)" fg:x="41146630" fg:w="417656"/><text x="8.2544%" y="1551.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (69,087 samples, 0.01%)</title><rect x="8.0723%" y="1525" width="0.0134%" height="15" fill="rgb(243,32,47)" fg:x="41495199" fg:w="69087"/><text x="8.3223%" y="1535.50"></text></g><g><title>core::task::wake::Waker::wake (69,087 samples, 0.01%)</title><rect x="8.0723%" y="1509" width="0.0134%" height="15" fill="rgb(247,202,23)" fg:x="41495199" fg:w="69087"/><text x="8.3223%" y="1519.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (69,087 samples, 0.01%)</title><rect x="8.0723%" y="1493" width="0.0134%" height="15" fill="rgb(219,102,11)" fg:x="41495199" fg:w="69087"/><text x="8.3223%" y="1503.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (69,087 samples, 0.01%)</title><rect x="8.0723%" y="1477" width="0.0134%" height="15" fill="rgb(243,110,44)" fg:x="41495199" fg:w="69087"/><text x="8.3223%" y="1487.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (69,087 samples, 0.01%)</title><rect x="8.0723%" y="1461" width="0.0134%" height="15" fill="rgb(222,74,54)" fg:x="41495199" fg:w="69087"/><text x="8.3223%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park (31,653,427 samples, 6.16%)</title><rect x="2.0088%" y="1621" width="6.1577%" height="15" fill="rgb(216,99,12)" fg:x="10326064" fg:w="31653427"/><text x="2.2588%" y="1631.50">tokio::r..</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (30,492,075 samples, 5.93%)</title><rect x="2.2347%" y="1605" width="5.9318%" height="15" fill="rgb(226,22,26)" fg:x="11487416" fg:w="30492075"/><text x="2.4847%" y="1615.50">tokio::r..</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park::{{closure}} (30,492,075 samples, 5.93%)</title><rect x="2.2347%" y="1589" width="5.9318%" height="15" fill="rgb(217,163,10)" fg:x="11487416" fg:w="30492075"/><text x="2.4847%" y="1599.50">tokio::r..</text></g><g><title>tokio::runtime::time::Driver::park_internal (29,677,660 samples, 5.77%)</title><rect x="2.3931%" y="1573" width="5.7733%" height="15" fill="rgb(213,25,53)" fg:x="12301831" fg:w="29677660"/><text x="2.6431%" y="1583.50">tokio::..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (832,861 samples, 0.16%)</title><rect x="8.0044%" y="1557" width="0.1620%" height="15" fill="rgb(252,105,26)" fg:x="41146630" fg:w="832861"/><text x="8.2544%" y="1567.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (415,205 samples, 0.08%)</title><rect x="8.0857%" y="1541" width="0.0808%" height="15" fill="rgb(220,39,43)" fg:x="41564286" fg:w="415205"/><text x="8.3357%" y="1551.50"></text></g><g><title>tokio::time::clock::Clock::now (415,205 samples, 0.08%)</title><rect x="8.0857%" y="1525" width="0.0808%" height="15" fill="rgb(229,68,48)" fg:x="41564286" fg:w="415205"/><text x="8.3357%" y="1535.50"></text></g><g><title>tokio::time::clock::now (415,205 samples, 0.08%)</title><rect x="8.0857%" y="1509" width="0.0808%" height="15" fill="rgb(252,8,32)" fg:x="41564286" fg:w="415205"/><text x="8.3357%" y="1519.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (415,205 samples, 0.08%)</title><rect x="8.0857%" y="1493" width="0.0808%" height="15" fill="rgb(223,20,43)" fg:x="41564286" fg:w="415205"/><text x="8.3357%" y="1503.50"></text></g><g><title>__GI___clock_gettime (415,205 samples, 0.08%)</title><rect x="8.0857%" y="1477" width="0.0808%" height="15" fill="rgb(229,81,49)" fg:x="41564286" fg:w="415205"/><text x="8.3357%" y="1487.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::end_poll (647,770 samples, 0.13%)</title><rect x="8.1665%" y="1605" width="0.1260%" height="15" fill="rgb(236,28,36)" fg:x="41979491" fg:w="647770"/><text x="8.4165%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::task::coop::with_budget::ResetGuard,std::thread::local::AccessError&gt;&gt; (390,035 samples, 0.08%)</title><rect x="8.2925%" y="1541" width="0.0759%" height="15" fill="rgb(249,185,26)" fg:x="42627261" fg:w="390035"/><text x="8.5425%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::task::coop::with_budget::ResetGuard&gt; (390,035 samples, 0.08%)</title><rect x="8.2925%" y="1525" width="0.0759%" height="15" fill="rgb(249,174,33)" fg:x="42627261" fg:w="390035"/><text x="8.5425%" y="1535.50"></text></g><g><title>&lt;tokio::task::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (390,035 samples, 0.08%)</title><rect x="8.2925%" y="1509" width="0.0759%" height="15" fill="rgb(233,201,37)" fg:x="42627261" fg:w="390035"/><text x="8.5425%" y="1519.50"></text></g><g><title>tokio::runtime::context::budget (390,035 samples, 0.08%)</title><rect x="8.2925%" y="1493" width="0.0759%" height="15" fill="rgb(221,78,26)" fg:x="42627261" fg:w="390035"/><text x="8.5425%" y="1503.50"></text></g><g><title>tokio::runtime::task::Schedule::yield_now (1,862,891 samples, 0.36%)</title><rect x="8.4584%" y="1493" width="0.3624%" height="15" fill="rgb(250,127,30)" fg:x="43480101" fg:w="1862891"/><text x="8.7084%" y="1503.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule (1,862,891 samples, 0.36%)</title><rect x="8.4584%" y="1477" width="0.3624%" height="15" fill="rgb(230,49,44)" fg:x="43480101" fg:w="1862891"/><text x="8.7084%" y="1487.50"></text></g><g><title>tokio::runtime::context::with_scheduler (1,862,891 samples, 0.36%)</title><rect x="8.4584%" y="1461" width="0.3624%" height="15" fill="rgb(229,67,23)" fg:x="43480101" fg:w="1862891"/><text x="8.7084%" y="1471.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,862,891 samples, 0.36%)</title><rect x="8.4584%" y="1445" width="0.3624%" height="15" fill="rgb(249,83,47)" fg:x="43480101" fg:w="1862891"/><text x="8.7084%" y="1455.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (1,862,891 samples, 0.36%)</title><rect x="8.4584%" y="1429" width="0.3624%" height="15" fill="rgb(215,43,3)" fg:x="43480101" fg:w="1862891"/><text x="8.7084%" y="1439.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (1,862,891 samples, 0.36%)</title><rect x="8.4584%" y="1413" width="0.3624%" height="15" fill="rgb(238,154,13)" fg:x="43480101" fg:w="1862891"/><text x="8.7084%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule::{{closure}} (1,862,891 samples, 0.36%)</title><rect x="8.4584%" y="1397" width="0.3624%" height="15" fill="rgb(219,56,2)" fg:x="43480101" fg:w="1862891"/><text x="8.7084%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Core::push_task (1,862,891 samples, 0.36%)</title><rect x="8.4584%" y="1381" width="0.3624%" height="15" fill="rgb(233,0,4)" fg:x="43480101" fg:w="1862891"/><text x="8.7084%" y="1391.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (507,015 samples, 0.10%)</title><rect x="8.8208%" y="1477" width="0.0986%" height="15" fill="rgb(235,30,7)" fg:x="45342992" fg:w="507015"/><text x="9.0708%" y="1487.50"></text></g><g><title>core::mem::drop (507,015 samples, 0.10%)</title><rect x="8.8208%" y="1461" width="0.0986%" height="15" fill="rgb(250,79,13)" fg:x="45342992" fg:w="507015"/><text x="9.0708%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;tracing::instrument::Instrumented&lt;rmcp::service::serve_inner&lt;rmcp::service::server::RoleServer,keipes_ai_mcp::server::mcp::NexusServer,rmcp::transport::worker::WorkerTransport&lt;rmcp::transport::streamable_http_server::session::local::LocalSessionWorker&gt;&gt;::{{closure}}::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;&gt;&gt; (507,015 samples, 0.10%)</title><rect x="8.8208%" y="1445" width="0.0986%" height="15" fill="rgb(211,146,34)" fg:x="45342992" fg:w="507015"/><text x="9.0708%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;tracing::instrument::Instrumented&lt;rmcp::service::serve_inner&lt;rmcp::service::server::RoleServer,keipes_ai_mcp::server::mcp::NexusServer,rmcp::transport::worker::WorkerTransport&lt;rmcp::transport::streamable_http_server::session::local::LocalSessionWorker&gt;&gt;::{{closure}}::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;&gt; (507,015 samples, 0.10%)</title><rect x="8.8208%" y="1429" width="0.0986%" height="15" fill="rgb(228,22,38)" fg:x="45342992" fg:w="507015"/><text x="9.0708%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;tracing::instrument::Instrumented&lt;rmcp::service::serve_inner&lt;rmcp::service::server::RoleServer,keipes_ai_mcp::server::mcp::NexusServer,rmcp::transport::worker::WorkerTransport&lt;rmcp::transport::streamable_http_server::session::local::LocalSessionWorker&gt;&gt;::{{closure}}::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;&gt; (507,015 samples, 0.10%)</title><rect x="8.8208%" y="1413" width="0.0986%" height="15" fill="rgb(235,168,5)" fg:x="45342992" fg:w="507015"/><text x="9.0708%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::CoreStage&lt;tracing::instrument::Instrumented&lt;rmcp::service::serve_inner&lt;rmcp::service::server::RoleServer,keipes_ai_mcp::server::mcp::NexusServer,rmcp::transport::worker::WorkerTransport&lt;rmcp::transport::streamable_http_server::session::local::LocalSessionWorker&gt;&gt;::{{closure}}::{{closure}}&gt;&gt;&gt; (507,015 samples, 0.10%)</title><rect x="8.8208%" y="1397" width="0.0986%" height="15" fill="rgb(221,155,16)" fg:x="45342992" fg:w="507015"/><text x="9.0708%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;tokio::runtime::task::core::Stage&lt;tracing::instrument::Instrumented&lt;rmcp::service::serve_inner&lt;rmcp::service::server::RoleServer,keipes_ai_mcp::server::mcp::NexusServer,rmcp::transport::worker::WorkerTransport&lt;rmcp::transport::streamable_http_server::session::local::LocalSessionWorker&gt;&gt;::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (507,015 samples, 0.10%)</title><rect x="8.8208%" y="1381" width="0.0986%" height="15" fill="rgb(215,215,53)" fg:x="45342992" fg:w="507015"/><text x="9.0708%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;tokio::runtime::task::core::Stage&lt;tracing::instrument::Instrumented&lt;rmcp::service::serve_inner&lt;rmcp::service::server::RoleServer,keipes_ai_mcp::server::mcp::NexusServer,rmcp::transport::worker::WorkerTransport&lt;rmcp::transport::streamable_http_server::session::local::LocalSessionWorker&gt;&gt;::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (507,015 samples, 0.10%)</title><rect x="8.8208%" y="1365" width="0.0986%" height="15" fill="rgb(223,4,10)" fg:x="45342992" fg:w="507015"/><text x="9.0708%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;tracing::instrument::Instrumented&lt;rmcp::service::serve_inner&lt;rmcp::service::server::RoleServer,keipes_ai_mcp::server::mcp::NexusServer,rmcp::transport::worker::WorkerTransport&lt;rmcp::transport::streamable_http_server::session::local::LocalSessionWorker&gt;&gt;::{{closure}}::{{closure}}&gt;&gt;&gt; (507,015 samples, 0.10%)</title><rect x="8.8208%" y="1349" width="0.0986%" height="15" fill="rgb(234,103,6)" fg:x="45342992" fg:w="507015"/><text x="9.0708%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (1,195,992 samples, 0.23%)</title><rect x="8.8208%" y="1493" width="0.2327%" height="15" fill="rgb(227,97,0)" fg:x="45342992" fg:w="1195992"/><text x="9.0708%" y="1503.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::release (688,977 samples, 0.13%)</title><rect x="8.9194%" y="1477" width="0.1340%" height="15" fill="rgb(234,150,53)" fg:x="45850007" fg:w="688977"/><text x="9.1694%" y="1487.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (688,977 samples, 0.13%)</title><rect x="8.9194%" y="1461" width="0.1340%" height="15" fill="rgb(228,201,54)" fg:x="45850007" fg:w="688977"/><text x="9.1694%" y="1471.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (841,900 samples, 0.16%)</title><rect x="9.3414%" y="1205" width="0.1638%" height="15" fill="rgb(222,22,37)" fg:x="48019214" fg:w="841900"/><text x="9.5914%" y="1215.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (841,900 samples, 0.16%)</title><rect x="9.3414%" y="1189" width="0.1638%" height="15" fill="rgb(237,53,32)" fg:x="48019214" fg:w="841900"/><text x="9.5914%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (841,900 samples, 0.16%)</title><rect x="9.3414%" y="1173" width="0.1638%" height="15" fill="rgb(233,25,53)" fg:x="48019214" fg:w="841900"/><text x="9.5914%" y="1183.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close::{{closure}} (841,900 samples, 0.16%)</title><rect x="9.3414%" y="1157" width="0.1638%" height="15" fill="rgb(210,40,34)" fg:x="48019214" fg:w="841900"/><text x="9.5914%" y="1167.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::start_close (841,900 samples, 0.16%)</title><rect x="9.3414%" y="1141" width="0.1638%" height="15" fill="rgb(241,220,44)" fg:x="48019214" fg:w="841900"/><text x="9.5914%" y="1151.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_inner (712,732 samples, 0.14%)</title><rect x="9.5052%" y="1189" width="0.1387%" height="15" fill="rgb(235,28,35)" fg:x="48861114" fg:w="712732"/><text x="9.7552%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1,985,537 samples, 0.39%)</title><rect x="9.3414%" y="1269" width="0.3863%" height="15" fill="rgb(210,56,17)" fg:x="48019214" fg:w="1985537"/><text x="9.5914%" y="1279.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1,985,537 samples, 0.39%)</title><rect x="9.3414%" y="1253" width="0.3863%" height="15" fill="rgb(224,130,29)" fg:x="48019214" fg:w="1985537"/><text x="9.5914%" y="1263.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1,985,537 samples, 0.39%)</title><rect x="9.3414%" y="1237" width="0.3863%" height="15" fill="rgb(235,212,8)" fg:x="48019214" fg:w="1985537"/><text x="9.5914%" y="1247.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (1,985,537 samples, 0.39%)</title><rect x="9.3414%" y="1221" width="0.3863%" height="15" fill="rgb(223,33,50)" fg:x="48019214" fg:w="1985537"/><text x="9.5914%" y="1231.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (1,143,637 samples, 0.22%)</title><rect x="9.5052%" y="1205" width="0.2225%" height="15" fill="rgb(219,149,13)" fg:x="48861114" fg:w="1143637"/><text x="9.7552%" y="1215.50"></text></g><g><title>thread_local::thread_id::get (430,905 samples, 0.08%)</title><rect x="9.6438%" y="1189" width="0.0838%" height="15" fill="rgb(250,156,29)" fg:x="49573846" fg:w="430905"/><text x="9.8938%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (430,905 samples, 0.08%)</title><rect x="9.6438%" y="1173" width="0.0838%" height="15" fill="rgb(216,193,19)" fg:x="49573846" fg:w="430905"/><text x="9.8938%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (430,905 samples, 0.08%)</title><rect x="9.6438%" y="1157" width="0.0838%" height="15" fill="rgb(216,135,14)" fg:x="49573846" fg:w="430905"/><text x="9.8938%" y="1167.50"></text></g><g><title>thread_local::thread_id::get::{{closure}} (430,905 samples, 0.08%)</title><rect x="9.6438%" y="1141" width="0.0838%" height="15" fill="rgb(241,47,5)" fg:x="49573846" fg:w="430905"/><text x="9.8938%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (2,467,839 samples, 0.48%)</title><rect x="9.3414%" y="1317" width="0.4801%" height="15" fill="rgb(233,42,35)" fg:x="48019214" fg:w="2467839"/><text x="9.5914%" y="1327.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (2,467,839 samples, 0.48%)</title><rect x="9.3414%" y="1301" width="0.4801%" height="15" fill="rgb(231,13,6)" fg:x="48019214" fg:w="2467839"/><text x="9.5914%" y="1311.50"></text></g><g><title>tracing::span::Span::do_exit (2,467,839 samples, 0.48%)</title><rect x="9.3414%" y="1285" width="0.4801%" height="15" fill="rgb(207,181,40)" fg:x="48019214" fg:w="2467839"/><text x="9.5914%" y="1295.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (482,302 samples, 0.09%)</title><rect x="9.7277%" y="1269" width="0.0938%" height="15" fill="rgb(254,173,49)" fg:x="50004751" fg:w="482302"/><text x="9.9777%" y="1279.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::subscriber (482,302 samples, 0.09%)</title><rect x="9.7277%" y="1253" width="0.0938%" height="15" fill="rgb(221,1,38)" fg:x="50004751" fg:w="482302"/><text x="9.9777%" y="1263.50"></text></g><g><title>el0t_64_irq_handler (482,302 samples, 0.09%)</title><rect x="9.7277%" y="1237" width="0.0938%" height="15" fill="rgb(206,124,46)" fg:x="50004751" fg:w="482302"/><text x="9.9777%" y="1247.50"></text></g><g><title>__el0_irq_handler_common (482,302 samples, 0.09%)</title><rect x="9.7277%" y="1221" width="0.0938%" height="15" fill="rgb(249,21,11)" fg:x="50004751" fg:w="482302"/><text x="9.9777%" y="1231.50"></text></g><g><title>el0_interrupt (482,302 samples, 0.09%)</title><rect x="9.7277%" y="1205" width="0.0938%" height="15" fill="rgb(222,201,40)" fg:x="50004751" fg:w="482302"/><text x="9.9777%" y="1215.50"></text></g><g><title>irq_exit_rcu (482,302 samples, 0.09%)</title><rect x="9.7277%" y="1189" width="0.0938%" height="15" fill="rgb(235,61,29)" fg:x="50004751" fg:w="482302"/><text x="9.9777%" y="1199.50"></text></g><g><title>__irq_exit_rcu (482,302 samples, 0.09%)</title><rect x="9.7277%" y="1173" width="0.0938%" height="15" fill="rgb(219,207,3)" fg:x="50004751" fg:w="482302"/><text x="9.9777%" y="1183.50"></text></g><g><title>do_softirq_own_stack (482,302 samples, 0.09%)</title><rect x="9.7277%" y="1157" width="0.0938%" height="15" fill="rgb(222,56,46)" fg:x="50004751" fg:w="482302"/><text x="9.9777%" y="1167.50"></text></g><g><title>call_on_irq_stack (482,302 samples, 0.09%)</title><rect x="9.7277%" y="1141" width="0.0938%" height="15" fill="rgb(239,76,54)" fg:x="50004751" fg:w="482302"/><text x="9.9777%" y="1151.50"></text></g><g><title>____do_softirq (482,302 samples, 0.09%)</title><rect x="9.7277%" y="1125" width="0.0938%" height="15" fill="rgb(231,124,27)" fg:x="50004751" fg:w="482302"/><text x="9.9777%" y="1135.50"></text></g><g><title>__softirqentry_text_start (482,302 samples, 0.09%)</title><rect x="9.7277%" y="1109" width="0.0938%" height="15" fill="rgb(249,195,6)" fg:x="50004751" fg:w="482302"/><text x="9.9777%" y="1119.50"></text></g><g><title>handle_softirqs (482,302 samples, 0.09%)</title><rect x="9.7277%" y="1093" width="0.0938%" height="15" fill="rgb(237,174,47)" fg:x="50004751" fg:w="482302"/><text x="9.9777%" y="1103.50"></text></g><g><title>rmcp::service::serve_inner::{{closure}} (2,862,837 samples, 0.56%)</title><rect x="9.8215%" y="1317" width="0.5569%" height="15" fill="rgb(206,201,31)" fg:x="50487053" fg:w="2862837"/><text x="10.0715%" y="1327.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (506,763 samples, 0.10%)</title><rect x="10.5002%" y="1285" width="0.0986%" height="15" fill="rgb(231,57,52)" fg:x="53975944" fg:w="506763"/><text x="10.7502%" y="1295.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (506,763 samples, 0.10%)</title><rect x="10.5002%" y="1269" width="0.0986%" height="15" fill="rgb(248,177,22)" fg:x="53975944" fg:w="506763"/><text x="10.7502%" y="1279.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task (506,763 samples, 0.10%)</title><rect x="10.5002%" y="1253" width="0.0986%" height="15" fill="rgb(215,211,37)" fg:x="53975944" fg:w="506763"/><text x="10.7502%" y="1263.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (506,763 samples, 0.10%)</title><rect x="10.5002%" y="1237" width="0.0986%" height="15" fill="rgb(241,128,51)" fg:x="53975944" fg:w="506763"/><text x="10.7502%" y="1247.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task::{{closure}} (506,763 samples, 0.10%)</title><rect x="10.5002%" y="1221" width="0.0986%" height="15" fill="rgb(227,165,31)" fg:x="53975944" fg:w="506763"/><text x="10.7502%" y="1231.50"></text></g><g><title>core::task::wake::Context::waker (506,763 samples, 0.10%)</title><rect x="10.5002%" y="1205" width="0.0986%" height="15" fill="rgb(228,167,24)" fg:x="53975944" fg:w="506763"/><text x="10.7502%" y="1215.50"></text></g><g><title>&lt;rmcp::transport::worker::WorkerTransport&lt;W&gt; as rmcp::transport::Transport&lt;&lt;W as rmcp::transport::worker::Worker&gt;::Role&gt;&gt;::send::{{closure}} (1,252,561 samples, 0.24%)</title><rect x="10.5002%" y="1301" width="0.2437%" height="15" fill="rgb(228,143,12)" fg:x="53975944" fg:w="1252561"/><text x="10.7502%" y="1311.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::{{closure}} (745,798 samples, 0.15%)</title><rect x="10.5988%" y="1285" width="0.1451%" height="15" fill="rgb(249,149,8)" fg:x="54482707" fg:w="745798"/><text x="10.8488%" y="1295.50"></text></g><g><title>tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (745,798 samples, 0.15%)</title><rect x="10.5988%" y="1269" width="0.1451%" height="15" fill="rgb(243,35,44)" fg:x="54482707" fg:w="745798"/><text x="10.8488%" y="1279.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (745,798 samples, 0.15%)</title><rect x="10.5988%" y="1253" width="0.1451%" height="15" fill="rgb(246,89,9)" fg:x="54482707" fg:w="745798"/><text x="10.8488%" y="1263.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (745,798 samples, 0.15%)</title><rect x="10.5988%" y="1237" width="0.1451%" height="15" fill="rgb(233,213,13)" fg:x="54482707" fg:w="745798"/><text x="10.8488%" y="1247.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (745,798 samples, 0.15%)</title><rect x="10.5988%" y="1221" width="0.1451%" height="15" fill="rgb(233,141,41)" fg:x="54482707" fg:w="745798"/><text x="10.8488%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (745,798 samples, 0.15%)</title><rect x="10.5988%" y="1205" width="0.1451%" height="15" fill="rgb(239,167,4)" fg:x="54482707" fg:w="745798"/><text x="10.8488%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (745,798 samples, 0.15%)</title><rect x="10.5988%" y="1189" width="0.1451%" height="15" fill="rgb(209,217,16)" fg:x="54482707" fg:w="745798"/><text x="10.8488%" y="1199.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (745,798 samples, 0.15%)</title><rect x="10.5988%" y="1173" width="0.1451%" height="15" fill="rgb(219,88,35)" fg:x="54482707" fg:w="745798"/><text x="10.8488%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (745,798 samples, 0.15%)</title><rect x="10.5988%" y="1157" width="0.1451%" height="15" fill="rgb(220,193,23)" fg:x="54482707" fg:w="745798"/><text x="10.8488%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_sub (745,798 samples, 0.15%)</title><rect x="10.5988%" y="1141" width="0.1451%" height="15" fill="rgb(230,90,52)" fg:x="54482707" fg:w="745798"/><text x="10.8488%" y="1151.50"></text></g><g><title>__aarch64_ldadd8_acq_rel (745,798 samples, 0.15%)</title><rect x="10.5988%" y="1125" width="0.1451%" height="15" fill="rgb(252,106,19)" fg:x="54482707" fg:w="745798"/><text x="10.8488%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;keipes_ai_mcp::server::mcp::NexusServer&gt;&gt; (539,574 samples, 0.10%)</title><rect x="10.7439%" y="1301" width="0.1050%" height="15" fill="rgb(206,74,20)" fg:x="55228505" fg:w="539574"/><text x="10.9939%" y="1311.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (539,574 samples, 0.10%)</title><rect x="10.7439%" y="1285" width="0.1050%" height="15" fill="rgb(230,138,44)" fg:x="55228505" fg:w="539574"/><text x="10.9939%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (539,574 samples, 0.10%)</title><rect x="10.7439%" y="1269" width="0.1050%" height="15" fill="rgb(235,182,43)" fg:x="55228505" fg:w="539574"/><text x="10.9939%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_sub (539,574 samples, 0.10%)</title><rect x="10.7439%" y="1253" width="0.1050%" height="15" fill="rgb(242,16,51)" fg:x="55228505" fg:w="539574"/><text x="10.9939%" y="1263.50"></text></g><g><title>__aarch64_ldadd8_rel (539,574 samples, 0.10%)</title><rect x="10.7439%" y="1237" width="0.1050%" height="15" fill="rgb(248,9,4)" fg:x="55228505" fg:w="539574"/><text x="10.9939%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;rmcp::handler::server::&lt;impl rmcp::service::Service&lt;rmcp::service::server::RoleServer&gt; for keipes_ai_mcp::server::mcp::NexusServer&gt;::handle_request::{{closure}}&gt; (335,613 samples, 0.07%)</title><rect x="10.8488%" y="1301" width="0.0653%" height="15" fill="rgb(210,31,22)" fg:x="55768079" fg:w="335613"/><text x="11.0988%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::bounded::Sender&lt;rmcp::model::JsonRpcMessage&lt;rmcp::model::ServerRequest,rmcp::model::ServerResult,rmcp::model::ServerNotification&gt;&gt;::send::{{closure}}&gt; (535,664 samples, 0.10%)</title><rect x="10.9141%" y="1301" width="0.1042%" height="15" fill="rgb(239,54,39)" fg:x="56103692" fg:w="535664"/><text x="11.1641%" y="1311.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (556,398 samples, 0.11%)</title><rect x="11.6396%" y="1253" width="0.1082%" height="15" fill="rgb(230,99,41)" fg:x="59833314" fg:w="556398"/><text x="11.8896%" y="1263.50"></text></g><g><title>el0t_64_irq_handler (556,398 samples, 0.11%)</title><rect x="11.6396%" y="1237" width="0.1082%" height="15" fill="rgb(253,106,12)" fg:x="59833314" fg:w="556398"/><text x="11.8896%" y="1247.50"></text></g><g><title>__el0_irq_handler_common (556,398 samples, 0.11%)</title><rect x="11.6396%" y="1221" width="0.1082%" height="15" fill="rgb(213,46,41)" fg:x="59833314" fg:w="556398"/><text x="11.8896%" y="1231.50"></text></g><g><title>el0_interrupt (556,398 samples, 0.11%)</title><rect x="11.6396%" y="1205" width="0.1082%" height="15" fill="rgb(215,133,35)" fg:x="59833314" fg:w="556398"/><text x="11.8896%" y="1215.50"></text></g><g><title>irq_exit_rcu (556,398 samples, 0.11%)</title><rect x="11.6396%" y="1189" width="0.1082%" height="15" fill="rgb(213,28,5)" fg:x="59833314" fg:w="556398"/><text x="11.8896%" y="1199.50"></text></g><g><title>__irq_exit_rcu (556,398 samples, 0.11%)</title><rect x="11.6396%" y="1173" width="0.1082%" height="15" fill="rgb(215,77,49)" fg:x="59833314" fg:w="556398"/><text x="11.8896%" y="1183.50"></text></g><g><title>do_softirq_own_stack (556,398 samples, 0.11%)</title><rect x="11.6396%" y="1157" width="0.1082%" height="15" fill="rgb(248,100,22)" fg:x="59833314" fg:w="556398"/><text x="11.8896%" y="1167.50"></text></g><g><title>call_on_irq_stack (556,398 samples, 0.11%)</title><rect x="11.6396%" y="1141" width="0.1082%" height="15" fill="rgb(208,67,9)" fg:x="59833314" fg:w="556398"/><text x="11.8896%" y="1151.50"></text></g><g><title>____do_softirq (556,398 samples, 0.11%)</title><rect x="11.6396%" y="1125" width="0.1082%" height="15" fill="rgb(219,133,21)" fg:x="59833314" fg:w="556398"/><text x="11.8896%" y="1135.50"></text></g><g><title>__softirqentry_text_start (556,398 samples, 0.11%)</title><rect x="11.6396%" y="1109" width="0.1082%" height="15" fill="rgb(246,46,29)" fg:x="59833314" fg:w="556398"/><text x="11.8896%" y="1119.50"></text></g><g><title>handle_softirqs (556,398 samples, 0.11%)</title><rect x="11.6396%" y="1093" width="0.1082%" height="15" fill="rgb(246,185,52)" fg:x="59833314" fg:w="556398"/><text x="11.8896%" y="1103.50"></text></g><g><title>alloc::fmt::format (1,425,444 samples, 0.28%)</title><rect x="12.0000%" y="1189" width="0.2773%" height="15" fill="rgb(252,136,11)" fg:x="61685749" fg:w="1425444"/><text x="12.2500%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1,425,444 samples, 0.28%)</title><rect x="12.0000%" y="1173" width="0.2773%" height="15" fill="rgb(219,138,53)" fg:x="61685749" fg:w="1425444"/><text x="12.2500%" y="1183.50"></text></g><g><title>alloc::fmt::format::{{closure}} (1,425,444 samples, 0.28%)</title><rect x="12.0000%" y="1157" width="0.2773%" height="15" fill="rgb(211,51,23)" fg:x="61685749" fg:w="1425444"/><text x="12.2500%" y="1167.50"></text></g><g><title>alloc::fmt::format::format_inner (1,425,444 samples, 0.28%)</title><rect x="12.0000%" y="1141" width="0.2773%" height="15" fill="rgb(247,221,28)" fg:x="61685749" fg:w="1425444"/><text x="12.2500%" y="1151.50"></text></g><g><title>core::fmt::Write::write_fmt (1,425,444 samples, 0.28%)</title><rect x="12.0000%" y="1125" width="0.2773%" height="15" fill="rgb(251,222,45)" fg:x="61685749" fg:w="1425444"/><text x="12.2500%" y="1135.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1,425,444 samples, 0.28%)</title><rect x="12.0000%" y="1109" width="0.2773%" height="15" fill="rgb(217,162,53)" fg:x="61685749" fg:w="1425444"/><text x="12.2500%" y="1119.50"></text></g><g><title>core::fmt::write (1,425,444 samples, 0.28%)</title><rect x="12.0000%" y="1093" width="0.2773%" height="15" fill="rgb(229,93,14)" fg:x="61685749" fg:w="1425444"/><text x="12.2500%" y="1103.50"></text></g><g><title>core::fmt::rt::Argument::fmt (977,636 samples, 0.19%)</title><rect x="12.0871%" y="1077" width="0.1902%" height="15" fill="rgb(209,67,49)" fg:x="62133557" fg:w="977636"/><text x="12.3371%" y="1087.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (977,636 samples, 0.19%)</title><rect x="12.0871%" y="1061" width="0.1902%" height="15" fill="rgb(213,87,29)" fg:x="62133557" fg:w="977636"/><text x="12.3371%" y="1071.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (977,636 samples, 0.19%)</title><rect x="12.0871%" y="1045" width="0.1902%" height="15" fill="rgb(205,151,52)" fg:x="62133557" fg:w="977636"/><text x="12.3371%" y="1055.50"></text></g><g><title>&lt;F as rmcp::handler::server::tool::CallToolHandler&lt;S,rmcp::handler::server::tool::AsyncMethodAdapter&lt;(),R&gt;&gt;&gt;::call::{{closure}} (2,508,540 samples, 0.49%)</title><rect x="11.8848%" y="1237" width="0.4880%" height="15" fill="rgb(253,215,39)" fg:x="61093721" fg:w="2508540"/><text x="12.1348%" y="1247.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,508,540 samples, 0.49%)</title><rect x="11.8848%" y="1221" width="0.4880%" height="15" fill="rgb(221,220,41)" fg:x="61093721" fg:w="2508540"/><text x="12.1348%" y="1231.50"></text></g><g><title>keipes_ai_mcp::server::mcp::NexusServer::increment::{{closure}} (2,508,540 samples, 0.49%)</title><rect x="11.8848%" y="1205" width="0.4880%" height="15" fill="rgb(218,133,21)" fg:x="61093721" fg:w="2508540"/><text x="12.1348%" y="1215.50"></text></g><g><title>tokio::sync::mutex::Mutex&lt;T&gt;::lock::{{closure}} (491,068 samples, 0.10%)</title><rect x="12.2773%" y="1189" width="0.0955%" height="15" fill="rgb(221,193,43)" fg:x="63111193" fg:w="491068"/><text x="12.5273%" y="1199.50"></text></g><g><title>tokio::sync::mutex::Mutex&lt;T&gt;::lock::{{closure}}::{{closure}} (491,068 samples, 0.10%)</title><rect x="12.2773%" y="1173" width="0.0955%" height="15" fill="rgb(240,128,52)" fg:x="63111193" fg:w="491068"/><text x="12.5273%" y="1183.50"></text></g><g><title>tokio::sync::mutex::Mutex&lt;T&gt;::acquire::{{closure}} (491,068 samples, 0.10%)</title><rect x="12.2773%" y="1157" width="0.0955%" height="15" fill="rgb(253,114,12)" fg:x="63111193" fg:w="491068"/><text x="12.5273%" y="1167.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (491,068 samples, 0.10%)</title><rect x="12.2773%" y="1141" width="0.0955%" height="15" fill="rgb(215,223,47)" fg:x="63111193" fg:w="491068"/><text x="12.5273%" y="1151.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (491,068 samples, 0.10%)</title><rect x="12.2773%" y="1125" width="0.0955%" height="15" fill="rgb(248,225,23)" fg:x="63111193" fg:w="491068"/><text x="12.5273%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (491,068 samples, 0.10%)</title><rect x="12.2773%" y="1109" width="0.0955%" height="15" fill="rgb(250,108,0)" fg:x="63111193" fg:w="491068"/><text x="12.5273%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (491,068 samples, 0.10%)</title><rect x="12.2773%" y="1093" width="0.0955%" height="15" fill="rgb(228,208,7)" fg:x="63111193" fg:w="491068"/><text x="12.5273%" y="1103.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,542,466 samples, 0.69%)</title><rect x="11.7479%" y="1253" width="0.6891%" height="15" fill="rgb(244,45,10)" fg:x="60389712" fg:w="3542466"/><text x="11.9979%" y="1263.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (329,917 samples, 0.06%)</title><rect x="12.3728%" y="1237" width="0.0642%" height="15" fill="rgb(207,125,25)" fg:x="63602261" fg:w="329917"/><text x="12.6228%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;rmcp::model::CallToolResult,rmcp::model::ErrorData&gt;+core::marker::Send&gt;&gt;&gt; (626,588 samples, 0.12%)</title><rect x="12.4370%" y="1253" width="0.1219%" height="15" fill="rgb(210,195,18)" fg:x="63932178" fg:w="626588"/><text x="12.6870%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;rmcp::model::CallToolResult,rmcp::model::ErrorData&gt;+core::marker::Send&gt;&gt; (626,588 samples, 0.12%)</title><rect x="12.4370%" y="1237" width="0.1219%" height="15" fill="rgb(249,80,12)" fg:x="63932178" fg:w="626588"/><text x="12.6870%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;rmcp::model::CallToolResult,rmcp::model::ErrorData&gt;+core::marker::Send&gt;&gt;&gt; (626,588 samples, 0.12%)</title><rect x="12.4370%" y="1221" width="0.1219%" height="15" fill="rgb(221,65,9)" fg:x="63932178" fg:w="626588"/><text x="12.6870%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;rmcp::model::CallToolResult,rmcp::model::ErrorData&gt;+core::marker::Send&gt;&gt; (626,588 samples, 0.12%)</title><rect x="12.4370%" y="1205" width="0.1219%" height="15" fill="rgb(235,49,36)" fg:x="63932178" fg:w="626588"/><text x="12.6870%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;keipes_ai_mcp::server::mcp::NexusServer::increment as rmcp::handler::server::tool::CallToolHandler&lt;keipes_ai_mcp::server::mcp::NexusServer,rmcp::handler::server::tool::AsyncMethodAdapter&lt;(),core::result::Result&lt;rmcp::model::CallToolResult,rmcp::model::ErrorData&gt;&gt;&gt;&gt;::call::{{closure}}&gt; (626,588 samples, 0.12%)</title><rect x="12.4370%" y="1189" width="0.1219%" height="15" fill="rgb(225,32,20)" fg:x="63932178" fg:w="626588"/><text x="12.6870%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (614,985 samples, 0.12%)</title><rect x="12.6810%" y="741" width="0.1196%" height="15" fill="rgb(215,141,46)" fg:x="65186307" fg:w="614985"/><text x="12.9310%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (614,985 samples, 0.12%)</title><rect x="12.6810%" y="725" width="0.1196%" height="15" fill="rgb(250,160,47)" fg:x="65186307" fg:w="614985"/><text x="12.9310%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (614,985 samples, 0.12%)</title><rect x="12.6810%" y="709" width="0.1196%" height="15" fill="rgb(216,222,40)" fg:x="65186307" fg:w="614985"/><text x="12.9310%" y="719.50"></text></g><g><title>__free (614,985 samples, 0.12%)</title><rect x="12.6810%" y="693" width="0.1196%" height="15" fill="rgb(234,217,39)" fg:x="65186307" fg:w="614985"/><text x="12.9310%" y="703.50"></text></g><g><title>_int_free (614,985 samples, 0.12%)</title><rect x="12.6810%" y="677" width="0.1196%" height="15" fill="rgb(207,178,40)" fg:x="65186307" fg:w="614985"/><text x="12.9310%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::url_params::UrlParams&gt; (379,854 samples, 0.07%)</title><rect x="12.8006%" y="741" width="0.0739%" height="15" fill="rgb(221,136,13)" fg:x="65801292" fg:w="379854"/><text x="13.0506%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::sync::Arc&lt;str&gt;,axum::util::PercentDecodedStr)&gt;&gt; (379,854 samples, 0.07%)</title><rect x="12.8006%" y="725" width="0.0739%" height="15" fill="rgb(249,199,10)" fg:x="65801292" fg:w="379854"/><text x="13.0506%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (379,854 samples, 0.07%)</title><rect x="12.8006%" y="709" width="0.0739%" height="15" fill="rgb(249,222,13)" fg:x="65801292" fg:w="379854"/><text x="13.0506%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,134,875 samples, 0.42%)</title><rect x="12.6810%" y="805" width="0.4153%" height="15" fill="rgb(244,185,38)" fg:x="65186307" fg:w="2134875"/><text x="12.9310%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,134,875 samples, 0.42%)</title><rect x="12.6810%" y="789" width="0.4153%" height="15" fill="rgb(236,202,9)" fg:x="65186307" fg:w="2134875"/><text x="12.9310%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;)&gt; (2,134,875 samples, 0.42%)</title><rect x="12.6810%" y="773" width="0.4153%" height="15" fill="rgb(250,229,37)" fg:x="65186307" fg:w="2134875"/><text x="12.9310%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;&gt; (2,134,875 samples, 0.42%)</title><rect x="12.6810%" y="757" width="0.4153%" height="15" fill="rgb(206,174,23)" fg:x="65186307" fg:w="2134875"/><text x="12.9310%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (1,140,036 samples, 0.22%)</title><rect x="12.8745%" y="741" width="0.2218%" height="15" fill="rgb(211,33,43)" fg:x="66181146" fg:w="1140036"/><text x="13.1245%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::authority::Authority&gt; (411,795 samples, 0.08%)</title><rect x="13.0162%" y="725" width="0.0801%" height="15" fill="rgb(245,58,50)" fg:x="66909387" fg:w="411795"/><text x="13.2662%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (411,795 samples, 0.08%)</title><rect x="13.0162%" y="709" width="0.0801%" height="15" fill="rgb(244,68,36)" fg:x="66909387" fg:w="411795"/><text x="13.2662%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (411,795 samples, 0.08%)</title><rect x="13.0162%" y="693" width="0.0801%" height="15" fill="rgb(232,229,15)" fg:x="66909387" fg:w="411795"/><text x="13.2662%" y="703.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (411,795 samples, 0.08%)</title><rect x="13.0162%" y="677" width="0.0801%" height="15" fill="rgb(254,30,23)" fg:x="66909387" fg:w="411795"/><text x="13.2662%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::extensions::Extensions&gt; (3,278,082 samples, 0.64%)</title><rect x="12.5589%" y="949" width="0.6377%" height="15" fill="rgb(235,160,14)" fg:x="64558766" fg:w="3278082"/><text x="12.8089%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt;&gt; (3,278,082 samples, 0.64%)</title><rect x="12.5589%" y="933" width="0.6377%" height="15" fill="rgb(212,155,44)" fg:x="64558766" fg:w="3278082"/><text x="12.8089%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt; (3,278,082 samples, 0.64%)</title><rect x="12.5589%" y="917" width="0.6377%" height="15" fill="rgb(226,2,50)" fg:x="64558766" fg:w="3278082"/><text x="12.8089%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (3,278,082 samples, 0.64%)</title><rect x="12.5589%" y="901" width="0.6377%" height="15" fill="rgb(234,177,6)" fg:x="64558766" fg:w="3278082"/><text x="12.8089%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (3,278,082 samples, 0.64%)</title><rect x="12.5589%" y="885" width="0.6377%" height="15" fill="rgb(217,24,9)" fg:x="64558766" fg:w="3278082"/><text x="12.8089%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;)&gt;&gt; (3,278,082 samples, 0.64%)</title><rect x="12.5589%" y="869" width="0.6377%" height="15" fill="rgb(220,13,46)" fg:x="64558766" fg:w="3278082"/><text x="12.8089%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,278,082 samples, 0.64%)</title><rect x="12.5589%" y="853" width="0.6377%" height="15" fill="rgb(239,221,27)" fg:x="64558766" fg:w="3278082"/><text x="12.8089%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,278,082 samples, 0.64%)</title><rect x="12.5589%" y="837" width="0.6377%" height="15" fill="rgb(222,198,25)" fg:x="64558766" fg:w="3278082"/><text x="12.8089%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,278,082 samples, 0.64%)</title><rect x="12.5589%" y="821" width="0.6377%" height="15" fill="rgb(211,99,13)" fg:x="64558766" fg:w="3278082"/><text x="12.8089%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (515,666 samples, 0.10%)</title><rect x="13.0963%" y="805" width="0.1003%" height="15" fill="rgb(232,111,31)" fg:x="67321182" fg:w="515666"/><text x="13.3463%" y="815.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (515,666 samples, 0.10%)</title><rect x="13.0963%" y="789" width="0.1003%" height="15" fill="rgb(245,82,37)" fg:x="67321182" fg:w="515666"/><text x="13.3463%" y="799.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_full (515,666 samples, 0.10%)</title><rect x="13.0963%" y="773" width="0.1003%" height="15" fill="rgb(227,149,46)" fg:x="67321182" fg:w="515666"/><text x="13.3463%" y="783.50"></text></g><g><title>core::core_arch::aarch64::neon::generated::vcgez_s8 (515,666 samples, 0.10%)</title><rect x="13.0963%" y="757" width="0.1003%" height="15" fill="rgb(218,36,50)" fg:x="67321182" fg:w="515666"/><text x="13.3463%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::HeaderName&gt; (688,173 samples, 0.13%)</title><rect x="13.1966%" y="869" width="0.1339%" height="15" fill="rgb(226,80,48)" fg:x="67836848" fg:w="688173"/><text x="13.4466%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::Repr&lt;http::header::name::Custom&gt;&gt; (688,173 samples, 0.13%)</title><rect x="13.1966%" y="853" width="0.1339%" height="15" fill="rgb(238,224,15)" fg:x="67836848" fg:w="688173"/><text x="13.4466%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::Custom&gt; (688,173 samples, 0.13%)</title><rect x="13.1966%" y="837" width="0.1339%" height="15" fill="rgb(241,136,10)" fg:x="67836848" fg:w="688173"/><text x="13.4466%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (688,173 samples, 0.13%)</title><rect x="13.1966%" y="821" width="0.1339%" height="15" fill="rgb(208,32,45)" fg:x="67836848" fg:w="688173"/><text x="13.4466%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (688,173 samples, 0.13%)</title><rect x="13.1966%" y="805" width="0.1339%" height="15" fill="rgb(207,135,9)" fg:x="67836848" fg:w="688173"/><text x="13.4466%" y="815.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (688,173 samples, 0.13%)</title><rect x="13.1966%" y="789" width="0.1339%" height="15" fill="rgb(206,86,44)" fg:x="67836848" fg:w="688173"/><text x="13.4466%" y="799.50"></text></g><g><title>__free (688,173 samples, 0.13%)</title><rect x="13.1966%" y="773" width="0.1339%" height="15" fill="rgb(245,177,15)" fg:x="67836848" fg:w="688173"/><text x="13.4466%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (1,414,611 samples, 0.28%)</title><rect x="13.1966%" y="949" width="0.2752%" height="15" fill="rgb(206,64,50)" fg:x="67836848" fg:w="1414611"/><text x="13.4466%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (1,414,611 samples, 0.28%)</title><rect x="13.1966%" y="933" width="0.2752%" height="15" fill="rgb(234,36,40)" fg:x="67836848" fg:w="1414611"/><text x="13.4466%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,414,611 samples, 0.28%)</title><rect x="13.1966%" y="917" width="0.2752%" height="15" fill="rgb(213,64,8)" fg:x="67836848" fg:w="1414611"/><text x="13.4466%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;]&gt; (1,414,611 samples, 0.28%)</title><rect x="13.1966%" y="901" width="0.2752%" height="15" fill="rgb(210,75,36)" fg:x="67836848" fg:w="1414611"/><text x="13.4466%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt; (1,414,611 samples, 0.28%)</title><rect x="13.1966%" y="885" width="0.2752%" height="15" fill="rgb(229,88,21)" fg:x="67836848" fg:w="1414611"/><text x="13.4466%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::value::HeaderValue&gt; (726,438 samples, 0.14%)</title><rect x="13.3305%" y="869" width="0.1413%" height="15" fill="rgb(252,204,47)" fg:x="68525021" fg:w="726438"/><text x="13.5805%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (726,438 samples, 0.14%)</title><rect x="13.3305%" y="853" width="0.1413%" height="15" fill="rgb(208,77,27)" fg:x="68525021" fg:w="726438"/><text x="13.5805%" y="863.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (726,438 samples, 0.14%)</title><rect x="13.3305%" y="837" width="0.1413%" height="15" fill="rgb(221,76,26)" fg:x="68525021" fg:w="726438"/><text x="13.5805%" y="847.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (726,438 samples, 0.14%)</title><rect x="13.3305%" y="821" width="0.1413%" height="15" fill="rgb(225,139,18)" fg:x="68525021" fg:w="726438"/><text x="13.5805%" y="831.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (726,438 samples, 0.14%)</title><rect x="13.3305%" y="805" width="0.1413%" height="15" fill="rgb(230,137,11)" fg:x="68525021" fg:w="726438"/><text x="13.5805%" y="815.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::{{closure}} (726,438 samples, 0.14%)</title><rect x="13.3305%" y="789" width="0.1413%" height="15" fill="rgb(212,28,1)" fg:x="68525021" fg:w="726438"/><text x="13.5805%" y="799.50"></text></g><g><title>bytes::bytes_mut::release_shared (726,438 samples, 0.14%)</title><rect x="13.3305%" y="773" width="0.1413%" height="15" fill="rgb(248,164,17)" fg:x="68525021" fg:w="726438"/><text x="13.5805%" y="783.50"></text></g><g><title>core::mem::drop (726,438 samples, 0.14%)</title><rect x="13.3305%" y="757" width="0.1413%" height="15" fill="rgb(222,171,42)" fg:x="68525021" fg:w="726438"/><text x="13.5805%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (726,438 samples, 0.14%)</title><rect x="13.3305%" y="741" width="0.1413%" height="15" fill="rgb(243,84,45)" fg:x="68525021" fg:w="726438"/><text x="13.5805%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (726,438 samples, 0.14%)</title><rect x="13.3305%" y="725" width="0.1413%" height="15" fill="rgb(252,49,23)" fg:x="68525021" fg:w="726438"/><text x="13.5805%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (726,438 samples, 0.14%)</title><rect x="13.3305%" y="709" width="0.1413%" height="15" fill="rgb(215,19,7)" fg:x="68525021" fg:w="726438"/><text x="13.5805%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (726,438 samples, 0.14%)</title><rect x="13.3305%" y="693" width="0.1413%" height="15" fill="rgb(238,81,41)" fg:x="68525021" fg:w="726438"/><text x="13.5805%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (726,438 samples, 0.14%)</title><rect x="13.3305%" y="677" width="0.1413%" height="15" fill="rgb(210,199,37)" fg:x="68525021" fg:w="726438"/><text x="13.5805%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (726,438 samples, 0.14%)</title><rect x="13.3305%" y="661" width="0.1413%" height="15" fill="rgb(244,192,49)" fg:x="68525021" fg:w="726438"/><text x="13.5805%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (726,438 samples, 0.14%)</title><rect x="13.3305%" y="645" width="0.1413%" height="15" fill="rgb(226,211,11)" fg:x="68525021" fg:w="726438"/><text x="13.5805%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (726,438 samples, 0.14%)</title><rect x="13.3305%" y="629" width="0.1413%" height="15" fill="rgb(236,162,54)" fg:x="68525021" fg:w="726438"/><text x="13.5805%" y="639.50"></text></g><g><title>__free (726,438 samples, 0.14%)</title><rect x="13.3305%" y="613" width="0.1413%" height="15" fill="rgb(220,229,9)" fg:x="68525021" fg:w="726438"/><text x="13.5805%" y="623.50"></text></g><g><title>_int_free (726,438 samples, 0.14%)</title><rect x="13.3305%" y="597" width="0.1413%" height="15" fill="rgb(250,87,22)" fg:x="68525021" fg:w="726438"/><text x="13.5805%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::authority::Authority&gt; (453,730 samples, 0.09%)</title><rect x="13.4718%" y="933" width="0.0883%" height="15" fill="rgb(239,43,17)" fg:x="69251459" fg:w="453730"/><text x="13.7218%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (453,730 samples, 0.09%)</title><rect x="13.4718%" y="917" width="0.0883%" height="15" fill="rgb(231,177,25)" fg:x="69251459" fg:w="453730"/><text x="13.7218%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (453,730 samples, 0.09%)</title><rect x="13.4718%" y="901" width="0.0883%" height="15" fill="rgb(219,179,1)" fg:x="69251459" fg:w="453730"/><text x="13.7218%" y="911.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (453,730 samples, 0.09%)</title><rect x="13.4718%" y="885" width="0.0883%" height="15" fill="rgb(238,219,53)" fg:x="69251459" fg:w="453730"/><text x="13.7218%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::request::Parts&gt; (5,682,359 samples, 1.11%)</title><rect x="12.5589%" y="965" width="1.1054%" height="15" fill="rgb(232,167,36)" fg:x="64558766" fg:w="5682359"/><text x="12.8089%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (989,666 samples, 0.19%)</title><rect x="13.4718%" y="949" width="0.1925%" height="15" fill="rgb(244,19,51)" fg:x="69251459" fg:w="989666"/><text x="13.7218%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::scheme::Scheme&gt; (535,936 samples, 0.10%)</title><rect x="13.5601%" y="933" width="0.1043%" height="15" fill="rgb(224,6,22)" fg:x="69705189" fg:w="535936"/><text x="13.8101%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::scheme::Scheme2&gt; (535,936 samples, 0.10%)</title><rect x="13.5601%" y="917" width="0.1043%" height="15" fill="rgb(224,145,5)" fg:x="69705189" fg:w="535936"/><text x="13.8101%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;rmcp::model::extension::Extensions&gt; (7,255,688 samples, 1.41%)</title><rect x="12.5589%" y="1173" width="1.4115%" height="15" fill="rgb(234,130,49)" fg:x="64558766" fg:w="7255688"/><text x="12.8089%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn rmcp::model::extension::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;rmcp::model::extension::IdHasher&gt;&gt;&gt;&gt;&gt; (7,255,688 samples, 1.41%)</title><rect x="12.5589%" y="1157" width="1.4115%" height="15" fill="rgb(254,6,2)" fg:x="64558766" fg:w="7255688"/><text x="12.8089%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn rmcp::model::extension::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;rmcp::model::extension::IdHasher&gt;&gt;&gt;&gt; (7,255,688 samples, 1.41%)</title><rect x="12.5589%" y="1141" width="1.4115%" height="15" fill="rgb(208,96,46)" fg:x="64558766" fg:w="7255688"/><text x="12.8089%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn rmcp::model::extension::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;rmcp::model::extension::IdHasher&gt;&gt;&gt; (7,255,688 samples, 1.41%)</title><rect x="12.5589%" y="1125" width="1.4115%" height="15" fill="rgb(239,3,39)" fg:x="64558766" fg:w="7255688"/><text x="12.8089%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn rmcp::model::extension::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;rmcp::model::extension::IdHasher&gt;&gt;&gt; (7,255,688 samples, 1.41%)</title><rect x="12.5589%" y="1109" width="1.4115%" height="15" fill="rgb(233,210,1)" fg:x="64558766" fg:w="7255688"/><text x="12.8089%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn rmcp::model::extension::AnyClone+core::marker::Send+core::marker::Sync&gt;)&gt;&gt; (7,255,688 samples, 1.41%)</title><rect x="12.5589%" y="1093" width="1.4115%" height="15" fill="rgb(244,137,37)" fg:x="64558766" fg:w="7255688"/><text x="12.8089%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,255,688 samples, 1.41%)</title><rect x="12.5589%" y="1077" width="1.4115%" height="15" fill="rgb(240,136,2)" fg:x="64558766" fg:w="7255688"/><text x="12.8089%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (7,255,688 samples, 1.41%)</title><rect x="12.5589%" y="1061" width="1.4115%" height="15" fill="rgb(239,18,37)" fg:x="64558766" fg:w="7255688"/><text x="12.8089%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (7,255,688 samples, 1.41%)</title><rect x="12.5589%" y="1045" width="1.4115%" height="15" fill="rgb(218,185,22)" fg:x="64558766" fg:w="7255688"/><text x="12.8089%" y="1055.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (7,255,688 samples, 1.41%)</title><rect x="12.5589%" y="1029" width="1.4115%" height="15" fill="rgb(225,218,4)" fg:x="64558766" fg:w="7255688"/><text x="12.8089%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (7,255,688 samples, 1.41%)</title><rect x="12.5589%" y="1013" width="1.4115%" height="15" fill="rgb(230,182,32)" fg:x="64558766" fg:w="7255688"/><text x="12.8089%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn rmcp::model::extension::AnyClone+core::marker::Send+core::marker::Sync&gt;)&gt; (7,255,688 samples, 1.41%)</title><rect x="12.5589%" y="997" width="1.4115%" height="15" fill="rgb(242,56,43)" fg:x="64558766" fg:w="7255688"/><text x="12.8089%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn rmcp::model::extension::AnyClone+core::marker::Send+core::marker::Sync&gt;&gt; (7,255,688 samples, 1.41%)</title><rect x="12.5589%" y="981" width="1.4115%" height="15" fill="rgb(233,99,24)" fg:x="64558766" fg:w="7255688"/><text x="12.8089%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;rmcp::model::meta::Meta&gt; (1,573,329 samples, 0.31%)</title><rect x="13.6643%" y="965" width="0.3061%" height="15" fill="rgb(234,209,42)" fg:x="70241125" fg:w="1573329"/><text x="13.9143%" y="975.50"></text></g><g><title>el0t_64_irq_handler (527,750 samples, 0.10%)</title><rect x="13.8677%" y="949" width="0.1027%" height="15" fill="rgb(227,7,12)" fg:x="71286704" fg:w="527750"/><text x="14.1177%" y="959.50"></text></g><g><title>__el0_irq_handler_common (527,750 samples, 0.10%)</title><rect x="13.8677%" y="933" width="0.1027%" height="15" fill="rgb(245,203,43)" fg:x="71286704" fg:w="527750"/><text x="14.1177%" y="943.50"></text></g><g><title>el0_interrupt (527,750 samples, 0.10%)</title><rect x="13.8677%" y="917" width="0.1027%" height="15" fill="rgb(238,205,33)" fg:x="71286704" fg:w="527750"/><text x="14.1177%" y="927.50"></text></g><g><title>irq_exit_rcu (527,750 samples, 0.10%)</title><rect x="13.8677%" y="901" width="0.1027%" height="15" fill="rgb(231,56,7)" fg:x="71286704" fg:w="527750"/><text x="14.1177%" y="911.50"></text></g><g><title>__irq_exit_rcu (527,750 samples, 0.10%)</title><rect x="13.8677%" y="885" width="0.1027%" height="15" fill="rgb(244,186,29)" fg:x="71286704" fg:w="527750"/><text x="14.1177%" y="895.50"></text></g><g><title>do_softirq_own_stack (527,750 samples, 0.10%)</title><rect x="13.8677%" y="869" width="0.1027%" height="15" fill="rgb(234,111,31)" fg:x="71286704" fg:w="527750"/><text x="14.1177%" y="879.50"></text></g><g><title>call_on_irq_stack (527,750 samples, 0.10%)</title><rect x="13.8677%" y="853" width="0.1027%" height="15" fill="rgb(241,149,10)" fg:x="71286704" fg:w="527750"/><text x="14.1177%" y="863.50"></text></g><g><title>____do_softirq (527,750 samples, 0.10%)</title><rect x="13.8677%" y="837" width="0.1027%" height="15" fill="rgb(249,206,44)" fg:x="71286704" fg:w="527750"/><text x="14.1177%" y="847.50"></text></g><g><title>__softirqentry_text_start (527,750 samples, 0.10%)</title><rect x="13.8677%" y="821" width="0.1027%" height="15" fill="rgb(251,153,30)" fg:x="71286704" fg:w="527750"/><text x="14.1177%" y="831.50"></text></g><g><title>handle_softirqs (527,750 samples, 0.10%)</title><rect x="13.8677%" y="805" width="0.1027%" height="15" fill="rgb(239,152,38)" fg:x="71286704" fg:w="527750"/><text x="14.1177%" y="815.50"></text></g><g><title>net_rx_action (527,750 samples, 0.10%)</title><rect x="13.8677%" y="789" width="0.1027%" height="15" fill="rgb(249,139,47)" fg:x="71286704" fg:w="527750"/><text x="14.1177%" y="799.50"></text></g><g><title>__napi_poll (527,750 samples, 0.10%)</title><rect x="13.8677%" y="773" width="0.1027%" height="15" fill="rgb(244,64,35)" fg:x="71286704" fg:w="527750"/><text x="14.1177%" y="783.50"></text></g><g><title>ena_io_poll (527,750 samples, 0.10%)</title><rect x="13.8677%" y="757" width="0.1027%" height="15" fill="rgb(216,46,15)" fg:x="71286704" fg:w="527750"/><text x="14.1177%" y="767.50"></text></g><g><title>ena_clean_tx_irq (527,750 samples, 0.10%)</title><rect x="13.8677%" y="741" width="0.1027%" height="15" fill="rgb(250,74,19)" fg:x="71286704" fg:w="527750"/><text x="14.1177%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2,272,704 samples, 0.44%)</title><rect x="13.9704%" y="1061" width="0.4421%" height="15" fill="rgb(249,42,33)" fg:x="71814454" fg:w="2272704"/><text x="14.2204%" y="1071.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (1,738,366 samples, 0.34%)</title><rect x="14.0743%" y="1045" width="0.3382%" height="15" fill="rgb(242,149,17)" fg:x="72348792" fg:w="1738366"/><text x="14.3243%" y="1055.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1,738,366 samples, 0.34%)</title><rect x="14.0743%" y="1029" width="0.3382%" height="15" fill="rgb(244,29,21)" fg:x="72348792" fg:w="1738366"/><text x="14.3243%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1,738,366 samples, 0.34%)</title><rect x="14.0743%" y="1013" width="0.3382%" height="15" fill="rgb(220,130,37)" fg:x="72348792" fg:w="1738366"/><text x="14.3243%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,738,366 samples, 0.34%)</title><rect x="14.0743%" y="997" width="0.3382%" height="15" fill="rgb(211,67,2)" fg:x="72348792" fg:w="1738366"/><text x="14.3243%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (1,738,366 samples, 0.34%)</title><rect x="14.0743%" y="981" width="0.3382%" height="15" fill="rgb(235,68,52)" fg:x="72348792" fg:w="1738366"/><text x="14.3243%" y="991.50"></text></g><g><title>__free (1,738,366 samples, 0.34%)</title><rect x="14.0743%" y="965" width="0.3382%" height="15" fill="rgb(246,142,3)" fg:x="72348792" fg:w="1738366"/><text x="14.3243%" y="975.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (933,694 samples, 0.18%)</title><rect x="14.4125%" y="1045" width="0.1816%" height="15" fill="rgb(241,25,7)" fg:x="74087158" fg:w="933694"/><text x="14.6625%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (933,694 samples, 0.18%)</title><rect x="14.4125%" y="1029" width="0.1816%" height="15" fill="rgb(242,119,39)" fg:x="74087158" fg:w="933694"/><text x="14.6625%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (933,694 samples, 0.18%)</title><rect x="14.4125%" y="1013" width="0.1816%" height="15" fill="rgb(241,98,45)" fg:x="74087158" fg:w="933694"/><text x="14.6625%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (933,694 samples, 0.18%)</title><rect x="14.4125%" y="997" width="0.1816%" height="15" fill="rgb(254,28,30)" fg:x="74087158" fg:w="933694"/><text x="14.6625%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (933,694 samples, 0.18%)</title><rect x="14.4125%" y="981" width="0.1816%" height="15" fill="rgb(241,142,54)" fg:x="74087158" fg:w="933694"/><text x="14.6625%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (933,694 samples, 0.18%)</title><rect x="14.4125%" y="965" width="0.1816%" height="15" fill="rgb(222,85,15)" fg:x="74087158" fg:w="933694"/><text x="14.6625%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (933,694 samples, 0.18%)</title><rect x="14.4125%" y="949" width="0.1816%" height="15" fill="rgb(210,85,47)" fg:x="74087158" fg:w="933694"/><text x="14.6625%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;rmcp::model::meta::Meta&gt; (3,888,844 samples, 0.76%)</title><rect x="13.9704%" y="1173" width="0.7565%" height="15" fill="rgb(224,206,25)" fg:x="71814454" fg:w="3888844"/><text x="14.2204%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,888,844 samples, 0.76%)</title><rect x="13.9704%" y="1157" width="0.7565%" height="15" fill="rgb(243,201,19)" fg:x="71814454" fg:w="3888844"/><text x="14.2204%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,888,844 samples, 0.76%)</title><rect x="13.9704%" y="1141" width="0.7565%" height="15" fill="rgb(236,59,4)" fg:x="71814454" fg:w="3888844"/><text x="14.2204%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,888,844 samples, 0.76%)</title><rect x="13.9704%" y="1125" width="0.7565%" height="15" fill="rgb(254,179,45)" fg:x="71814454" fg:w="3888844"/><text x="14.2204%" y="1135.50"></text></g><g><title>core::mem::drop (3,888,844 samples, 0.76%)</title><rect x="13.9704%" y="1109" width="0.7565%" height="15" fill="rgb(226,14,10)" fg:x="71814454" fg:w="3888844"/><text x="14.2204%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,888,844 samples, 0.76%)</title><rect x="13.9704%" y="1093" width="0.7565%" height="15" fill="rgb(244,27,41)" fg:x="71814454" fg:w="3888844"/><text x="14.2204%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,888,844 samples, 0.76%)</title><rect x="13.9704%" y="1077" width="0.7565%" height="15" fill="rgb(235,35,32)" fg:x="71814454" fg:w="3888844"/><text x="14.2204%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,616,140 samples, 0.31%)</title><rect x="14.4125%" y="1061" width="0.3144%" height="15" fill="rgb(218,68,31)" fg:x="74087158" fg:w="1616140"/><text x="14.6625%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (682,446 samples, 0.13%)</title><rect x="14.5941%" y="1045" width="0.1328%" height="15" fill="rgb(207,120,37)" fg:x="75020852" fg:w="682446"/><text x="14.8441%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (682,446 samples, 0.13%)</title><rect x="14.5941%" y="1029" width="0.1328%" height="15" fill="rgb(227,98,0)" fg:x="75020852" fg:w="682446"/><text x="14.8441%" y="1039.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (682,446 samples, 0.13%)</title><rect x="14.5941%" y="1013" width="0.1328%" height="15" fill="rgb(207,7,3)" fg:x="75020852" fg:w="682446"/><text x="14.8441%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (682,446 samples, 0.13%)</title><rect x="14.5941%" y="997" width="0.1328%" height="15" fill="rgb(206,98,19)" fg:x="75020852" fg:w="682446"/><text x="14.8441%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio_util::sync::cancellation_token::tree_node::TreeNode&gt;&gt; (549,861 samples, 0.11%)</title><rect x="14.7269%" y="1157" width="0.1070%" height="15" fill="rgb(217,5,26)" fg:x="75703298" fg:w="549861"/><text x="14.9769%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (549,861 samples, 0.11%)</title><rect x="14.7269%" y="1141" width="0.1070%" height="15" fill="rgb(235,190,38)" fg:x="75703298" fg:w="549861"/><text x="14.9769%" y="1151.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (549,861 samples, 0.11%)</title><rect x="14.7269%" y="1125" width="0.1070%" height="15" fill="rgb(247,86,24)" fg:x="75703298" fg:w="549861"/><text x="14.9769%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;tokio_util::sync::cancellation_token::tree_node::TreeNode,&amp;alloc::alloc::Global&gt;&gt; (549,861 samples, 0.11%)</title><rect x="14.7269%" y="1109" width="0.1070%" height="15" fill="rgb(205,101,16)" fg:x="75703298" fg:w="549861"/><text x="14.9769%" y="1119.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (549,861 samples, 0.11%)</title><rect x="14.7269%" y="1093" width="0.1070%" height="15" fill="rgb(246,168,33)" fg:x="75703298" fg:w="549861"/><text x="14.9769%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (549,861 samples, 0.11%)</title><rect x="14.7269%" y="1077" width="0.1070%" height="15" fill="rgb(231,114,1)" fg:x="75703298" fg:w="549861"/><text x="14.9769%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_sub (549,861 samples, 0.11%)</title><rect x="14.7269%" y="1061" width="0.1070%" height="15" fill="rgb(207,184,53)" fg:x="75703298" fg:w="549861"/><text x="14.9769%" y="1071.50"></text></g><g><title>__aarch64_ldadd8_rel (549,861 samples, 0.11%)</title><rect x="14.7269%" y="1045" width="0.1070%" height="15" fill="rgb(224,95,51)" fg:x="75703298" fg:w="549861"/><text x="14.9769%" y="1055.50"></text></g><g><title>tokio_util::sync::cancellation_token::tree_node::move_children_to_parent (516,288 samples, 0.10%)</title><rect x="14.9274%" y="1109" width="0.1004%" height="15" fill="rgb(212,188,45)" fg:x="76733755" fg:w="516288"/><text x="15.1774%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::sync::Arc&lt;tokio_util::sync::cancellation_token::tree_node::TreeNode&gt;&gt;&gt; (516,288 samples, 0.10%)</title><rect x="14.9274%" y="1093" width="0.1004%" height="15" fill="rgb(223,154,38)" fg:x="76733755" fg:w="516288"/><text x="15.1774%" y="1103.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (516,288 samples, 0.10%)</title><rect x="14.9274%" y="1077" width="0.1004%" height="15" fill="rgb(251,22,52)" fg:x="76733755" fg:w="516288"/><text x="15.1774%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;rmcp::handler::server::tool::ToolCallContext&lt;keipes_ai_mcp::server::mcp::NexusServer&gt;&gt; (13,183,091 samples, 2.56%)</title><rect x="12.5589%" y="1205" width="2.5646%" height="15" fill="rgb(229,209,22)" fg:x="64558766" fg:w="13183091"/><text x="12.8089%" y="1215.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;rmcp::service::RequestContext&lt;rmcp::service::server::RoleServer&gt;&gt; (13,183,091 samples, 2.56%)</title><rect x="12.5589%" y="1189" width="2.5646%" height="15" fill="rgb(234,138,34)" fg:x="64558766" fg:w="13183091"/><text x="12.8089%" y="1199.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;tokio_util::sync::cancellation_token::CancellationToken&gt; (2,038,559 samples, 0.40%)</title><rect x="14.7269%" y="1173" width="0.3966%" height="15" fill="rgb(212,95,11)" fg:x="75703298" fg:w="2038559"/><text x="14.9769%" y="1183.50"></text></g><g><title>tokio_util::sync::cancellation_token::tree_node::decrease_handle_refcount (1,488,698 samples, 0.29%)</title><rect x="14.8339%" y="1157" width="0.2896%" height="15" fill="rgb(240,179,47)" fg:x="76253159" fg:w="1488698"/><text x="15.0839%" y="1167.50"></text></g><g><title>tokio_util::sync::cancellation_token::tree_node::with_locked_node_and_parent (1,488,698 samples, 0.29%)</title><rect x="14.8339%" y="1141" width="0.2896%" height="15" fill="rgb(240,163,11)" fg:x="76253159" fg:w="1488698"/><text x="15.0839%" y="1151.50"></text></g><g><title>tokio_util::sync::cancellation_token::tree_node::decrease_handle_refcount::{{closure}} (1,488,698 samples, 0.29%)</title><rect x="14.8339%" y="1125" width="0.2896%" height="15" fill="rgb(236,37,12)" fg:x="76253159" fg:w="1488698"/><text x="15.0839%" y="1135.50"></text></g><g><title>tokio_util::sync::cancellation_token::tree_node::remove_child (491,814 samples, 0.10%)</title><rect x="15.0278%" y="1109" width="0.0957%" height="15" fill="rgb(232,164,16)" fg:x="77250043" fg:w="491814"/><text x="15.2778%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to (491,814 samples, 0.10%)</title><rect x="15.0278%" y="1093" width="0.0957%" height="15" fill="rgb(244,205,15)" fg:x="77250043" fg:w="491814"/><text x="15.2778%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (491,814 samples, 0.10%)</title><rect x="15.0278%" y="1077" width="0.0957%" height="15" fill="rgb(223,117,47)" fg:x="77250043" fg:w="491814"/><text x="15.2778%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::shrink_to_fit (491,814 samples, 0.10%)</title><rect x="15.0278%" y="1061" width="0.0957%" height="15" fill="rgb(244,107,35)" fg:x="77250043" fg:w="491814"/><text x="15.2778%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::shrink (491,814 samples, 0.10%)</title><rect x="15.0278%" y="1045" width="0.0957%" height="15" fill="rgb(205,140,8)" fg:x="77250043" fg:w="491814"/><text x="15.2778%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::shrink_unchecked (491,814 samples, 0.10%)</title><rect x="15.0278%" y="1029" width="0.0957%" height="15" fill="rgb(228,84,46)" fg:x="77250043" fg:w="491814"/><text x="15.2778%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (491,814 samples, 0.10%)</title><rect x="15.0278%" y="1013" width="0.0957%" height="15" fill="rgb(254,188,9)" fg:x="77250043" fg:w="491814"/><text x="15.2778%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (491,814 samples, 0.10%)</title><rect x="15.0278%" y="997" width="0.0957%" height="15" fill="rgb(206,112,54)" fg:x="77250043" fg:w="491814"/><text x="15.2778%" y="1007.50"></text></g><g><title>rmcp::handler::server::router::tool::ToolRoute&lt;S&gt;::new::{{closure}} (13,816,240 samples, 2.69%)</title><rect x="12.5589%" y="1253" width="2.6877%" height="15" fill="rgb(216,84,49)" fg:x="64558766" fg:w="13816240"/><text x="12.8089%" y="1263.50">rm..</text></g><g><title>rmcp::handler::server::tool::ToolCallContext&lt;S&gt;::invoke (13,816,240 samples, 2.69%)</title><rect x="12.5589%" y="1237" width="2.6877%" height="15" fill="rgb(214,194,35)" fg:x="64558766" fg:w="13816240"/><text x="12.8089%" y="1247.50">rm..</text></g><g><title>&lt;F as rmcp::handler::server::tool::CallToolHandler&lt;S,rmcp::handler::server::tool::AsyncMethodAdapter&lt;(),R&gt;&gt;&gt;::call (13,816,240 samples, 2.69%)</title><rect x="12.5589%" y="1221" width="2.6877%" height="15" fill="rgb(249,28,3)" fg:x="64558766" fg:w="13816240"/><text x="12.8089%" y="1231.50">&lt;F..</text></g><g><title>futures_util::future::future::FutureExt::boxed (633,149 samples, 0.12%)</title><rect x="15.1235%" y="1205" width="0.1232%" height="15" fill="rgb(222,56,52)" fg:x="77741857" fg:w="633149"/><text x="15.3735%" y="1215.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (633,149 samples, 0.12%)</title><rect x="15.1235%" y="1189" width="0.1232%" height="15" fill="rgb(245,217,50)" fg:x="77741857" fg:w="633149"/><text x="15.3735%" y="1199.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (633,149 samples, 0.12%)</title><rect x="15.1235%" y="1173" width="0.1232%" height="15" fill="rgb(213,201,24)" fg:x="77741857" fg:w="633149"/><text x="15.3735%" y="1183.50"></text></g><g><title>alloc::alloc::exchange_malloc (633,149 samples, 0.12%)</title><rect x="15.1235%" y="1157" width="0.1232%" height="15" fill="rgb(248,116,28)" fg:x="77741857" fg:w="633149"/><text x="15.3735%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (633,149 samples, 0.12%)</title><rect x="15.1235%" y="1141" width="0.1232%" height="15" fill="rgb(219,72,43)" fg:x="77741857" fg:w="633149"/><text x="15.3735%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (633,149 samples, 0.12%)</title><rect x="15.1235%" y="1125" width="0.1232%" height="15" fill="rgb(209,138,14)" fg:x="77741857" fg:w="633149"/><text x="15.3735%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (633,149 samples, 0.12%)</title><rect x="15.1235%" y="1109" width="0.1232%" height="15" fill="rgb(222,18,33)" fg:x="77741857" fg:w="633149"/><text x="15.3735%" y="1119.50"></text></g><g><title>__GI___libc_malloc (633,149 samples, 0.12%)</title><rect x="15.1235%" y="1093" width="0.1232%" height="15" fill="rgb(213,199,7)" fg:x="77741857" fg:w="633149"/><text x="15.3735%" y="1103.50"></text></g><g><title>_int_malloc (633,149 samples, 0.12%)</title><rect x="15.1235%" y="1077" width="0.1232%" height="15" fill="rgb(250,110,10)" fg:x="77741857" fg:w="633149"/><text x="15.3735%" y="1087.50"></text></g><g><title>&lt;keipes_ai_mcp::server::mcp::NexusServer as rmcp::handler::server::ServerHandler&gt;::call_tool::{{closure}} (21,496,245 samples, 4.18%)</title><rect x="11.2212%" y="1285" width="4.1818%" height="15" fill="rgb(248,123,6)" fg:x="57682370" fg:w="21496245"/><text x="11.4712%" y="1295.50">&lt;keip..</text></g><g><title>rmcp::handler::server::router::tool::ToolRouter&lt;S&gt;::call::{{closure}} (21,496,245 samples, 4.18%)</title><rect x="11.2212%" y="1269" width="4.1818%" height="15" fill="rgb(206,91,31)" fg:x="57682370" fg:w="21496245"/><text x="11.4712%" y="1279.50">rmcp:..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (803,609 samples, 0.16%)</title><rect x="15.2466%" y="1253" width="0.1563%" height="15" fill="rgb(211,154,13)" fg:x="78375006" fg:w="803609"/><text x="15.4966%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (803,609 samples, 0.16%)</title><rect x="15.2466%" y="1237" width="0.1563%" height="15" fill="rgb(225,148,7)" fg:x="78375006" fg:w="803609"/><text x="15.4966%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (803,609 samples, 0.16%)</title><rect x="15.2466%" y="1221" width="0.1563%" height="15" fill="rgb(220,160,43)" fg:x="78375006" fg:w="803609"/><text x="15.4966%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (803,609 samples, 0.16%)</title><rect x="15.2466%" y="1205" width="0.1563%" height="15" fill="rgb(213,52,39)" fg:x="78375006" fg:w="803609"/><text x="15.4966%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (803,609 samples, 0.16%)</title><rect x="15.2466%" y="1189" width="0.1563%" height="15" fill="rgb(243,137,7)" fg:x="78375006" fg:w="803609"/><text x="15.4966%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (803,609 samples, 0.16%)</title><rect x="15.2466%" y="1173" width="0.1563%" height="15" fill="rgb(230,79,13)" fg:x="78375006" fg:w="803609"/><text x="15.4966%" y="1183.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (803,609 samples, 0.16%)</title><rect x="15.2466%" y="1157" width="0.1563%" height="15" fill="rgb(247,105,23)" fg:x="78375006" fg:w="803609"/><text x="15.4966%" y="1167.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (803,609 samples, 0.16%)</title><rect x="15.2466%" y="1141" width="0.1563%" height="15" fill="rgb(223,179,41)" fg:x="78375006" fg:w="803609"/><text x="15.4966%" y="1151.50"></text></g><g><title>rmcp::handler::server::&lt;impl rmcp::service::Service&lt;rmcp::service::server::RoleServer&gt; for H&gt;::handle_request::{{closure}} (23,363,329 samples, 4.54%)</title><rect x="11.0183%" y="1301" width="4.5450%" height="15" fill="rgb(218,9,34)" fg:x="56639356" fg:w="23363329"/><text x="11.2683%" y="1311.50">rmcp:..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;keipes_ai_mcp::server::mcp::NexusServer as rmcp::handler::server::ServerHandler&gt;::call_tool::{{closure}}&gt; (824,070 samples, 0.16%)</title><rect x="15.4030%" y="1285" width="0.1603%" height="15" fill="rgb(222,106,8)" fg:x="79178615" fg:w="824070"/><text x="15.6530%" y="1295.50"></text></g><g><title>rmcp::service::serve_inner::{{closure}}::{{closure}} (27,251,948 samples, 5.30%)</title><rect x="10.3784%" y="1317" width="5.3014%" height="15" fill="rgb(211,220,0)" fg:x="53349890" fg:w="27251948"/><text x="10.6284%" y="1327.50">rmcp::..</text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::{{closure}} (599,153 samples, 0.12%)</title><rect x="15.5633%" y="1301" width="0.1166%" height="15" fill="rgb(229,52,16)" fg:x="80002685" fg:w="599153"/><text x="15.8133%" y="1311.50"></text></g><g><title>tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (599,153 samples, 0.12%)</title><rect x="15.5633%" y="1285" width="0.1166%" height="15" fill="rgb(212,155,18)" fg:x="80002685" fg:w="599153"/><text x="15.8133%" y="1295.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (599,153 samples, 0.12%)</title><rect x="15.5633%" y="1269" width="0.1166%" height="15" fill="rgb(242,21,14)" fg:x="80002685" fg:w="599153"/><text x="15.8133%" y="1279.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (599,153 samples, 0.12%)</title><rect x="15.5633%" y="1253" width="0.1166%" height="15" fill="rgb(222,19,48)" fg:x="80002685" fg:w="599153"/><text x="15.8133%" y="1263.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (599,153 samples, 0.12%)</title><rect x="15.5633%" y="1237" width="0.1166%" height="15" fill="rgb(232,45,27)" fg:x="80002685" fg:w="599153"/><text x="15.8133%" y="1247.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::write (599,153 samples, 0.12%)</title><rect x="15.5633%" y="1221" width="0.1166%" height="15" fill="rgb(249,103,42)" fg:x="80002685" fg:w="599153"/><text x="15.8133%" y="1231.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::set_ready (599,153 samples, 0.12%)</title><rect x="15.5633%" y="1205" width="0.1166%" height="15" fill="rgb(246,81,33)" fg:x="80002685" fg:w="599153"/><text x="15.8133%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (599,153 samples, 0.12%)</title><rect x="15.5633%" y="1189" width="0.1166%" height="15" fill="rgb(252,33,42)" fg:x="80002685" fg:w="599153"/><text x="15.8133%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_or (599,153 samples, 0.12%)</title><rect x="15.5633%" y="1173" width="0.1166%" height="15" fill="rgb(209,212,41)" fg:x="80002685" fg:w="599153"/><text x="15.8133%" y="1183.50"></text></g><g><title>__aarch64_ldset8_rel (599,153 samples, 0.12%)</title><rect x="15.5633%" y="1157" width="0.1166%" height="15" fill="rgb(207,154,6)" fg:x="80002685" fg:w="599153"/><text x="15.8133%" y="1167.50"></text></g><g><title>&lt;rmcp::transport::worker::WorkerTransport&lt;W&gt; as rmcp::transport::Transport&lt;&lt;W as rmcp::transport::worker::Worker&gt;::Role&gt;&gt;::receive::{{closure}} (2,815,710 samples, 0.55%)</title><rect x="15.6798%" y="1269" width="0.5478%" height="15" fill="rgb(223,64,47)" fg:x="80601838" fg:w="2815710"/><text x="15.9298%" y="1279.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::{{closure}} (2,815,710 samples, 0.55%)</title><rect x="15.6798%" y="1253" width="0.5478%" height="15" fill="rgb(211,161,38)" fg:x="80601838" fg:w="2815710"/><text x="15.9298%" y="1263.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2,815,710 samples, 0.55%)</title><rect x="15.6798%" y="1237" width="0.5478%" height="15" fill="rgb(219,138,40)" fg:x="80601838" fg:w="2815710"/><text x="15.9298%" y="1247.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::{{closure}}::{{closure}} (2,815,710 samples, 0.55%)</title><rect x="15.6798%" y="1221" width="0.5478%" height="15" fill="rgb(241,228,46)" fg:x="80601838" fg:w="2815710"/><text x="15.9298%" y="1231.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (2,815,710 samples, 0.55%)</title><rect x="15.6798%" y="1205" width="0.5478%" height="15" fill="rgb(223,209,38)" fg:x="80601838" fg:w="2815710"/><text x="15.9298%" y="1215.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2,815,710 samples, 0.55%)</title><rect x="15.6798%" y="1189" width="0.5478%" height="15" fill="rgb(236,164,45)" fg:x="80601838" fg:w="2815710"/><text x="15.9298%" y="1199.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::{{closure}} (2,815,710 samples, 0.55%)</title><rect x="15.6798%" y="1173" width="0.5478%" height="15" fill="rgb(231,15,5)" fg:x="80601838" fg:w="2815710"/><text x="15.9298%" y="1183.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (2,312,072 samples, 0.45%)</title><rect x="15.7778%" y="1157" width="0.4498%" height="15" fill="rgb(252,35,15)" fg:x="81105476" fg:w="2312072"/><text x="16.0278%" y="1167.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::try_advancing_head (2,312,072 samples, 0.45%)</title><rect x="15.7778%" y="1141" width="0.4498%" height="15" fill="rgb(248,181,18)" fg:x="81105476" fg:w="2312072"/><text x="16.0278%" y="1151.50"></text></g><g><title>tokio::sync::mpsc::block::start_index (461,401 samples, 0.09%)</title><rect x="16.1378%" y="1125" width="0.0898%" height="15" fill="rgb(233,39,42)" fg:x="82956147" fg:w="461401"/><text x="16.3878%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::task::coop::RestoreOnPending&gt; (564,477 samples, 0.11%)</title><rect x="16.3338%" y="1205" width="0.1098%" height="15" fill="rgb(238,110,33)" fg:x="83963293" fg:w="564477"/><text x="16.5838%" y="1215.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (639,528 samples, 0.12%)</title><rect x="16.4436%" y="1173" width="0.1244%" height="15" fill="rgb(233,195,10)" fg:x="84527770" fg:w="639528"/><text x="16.6936%" y="1183.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (639,528 samples, 0.12%)</title><rect x="16.4436%" y="1157" width="0.1244%" height="15" fill="rgb(254,105,3)" fg:x="84527770" fg:w="639528"/><text x="16.6936%" y="1167.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (639,528 samples, 0.12%)</title><rect x="16.4436%" y="1141" width="0.1244%" height="15" fill="rgb(221,225,9)" fg:x="84527770" fg:w="639528"/><text x="16.6936%" y="1151.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (639,528 samples, 0.12%)</title><rect x="16.4436%" y="1125" width="0.1244%" height="15" fill="rgb(224,227,45)" fg:x="84527770" fg:w="639528"/><text x="16.6936%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (639,528 samples, 0.12%)</title><rect x="16.4436%" y="1109" width="0.1244%" height="15" fill="rgb(229,198,43)" fg:x="84527770" fg:w="639528"/><text x="16.6936%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (639,528 samples, 0.12%)</title><rect x="16.4436%" y="1093" width="0.1244%" height="15" fill="rgb(206,209,35)" fg:x="84527770" fg:w="639528"/><text x="16.6936%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (639,528 samples, 0.12%)</title><rect x="16.4436%" y="1077" width="0.1244%" height="15" fill="rgb(245,195,53)" fg:x="84527770" fg:w="639528"/><text x="16.6936%" y="1087.50"></text></g><g><title>__aarch64_cas1_acq (639,528 samples, 0.12%)</title><rect x="16.4436%" y="1061" width="0.1244%" height="15" fill="rgb(240,92,26)" fg:x="84527770" fg:w="639528"/><text x="16.6936%" y="1071.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1,346,581 samples, 0.26%)</title><rect x="16.5680%" y="1173" width="0.2620%" height="15" fill="rgb(207,40,23)" fg:x="85167298" fg:w="1346581"/><text x="16.8180%" y="1183.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::try_advancing_head (1,346,581 samples, 0.26%)</title><rect x="16.5680%" y="1157" width="0.2620%" height="15" fill="rgb(223,111,35)" fg:x="85167298" fg:w="1346581"/><text x="16.8180%" y="1167.50"></text></g><g><title>tokio::sync::mpsc::block::start_index (552,070 samples, 0.11%)</title><rect x="16.7225%" y="1141" width="0.1074%" height="15" fill="rgb(229,147,28)" fg:x="85961809" fg:w="552070"/><text x="16.9725%" y="1151.50"></text></g><g><title>el0t_64_irq_handler (552,070 samples, 0.11%)</title><rect x="16.7225%" y="1125" width="0.1074%" height="15" fill="rgb(211,29,28)" fg:x="85961809" fg:w="552070"/><text x="16.9725%" y="1135.50"></text></g><g><title>__el0_irq_handler_common (552,070 samples, 0.11%)</title><rect x="16.7225%" y="1109" width="0.1074%" height="15" fill="rgb(228,72,33)" fg:x="85961809" fg:w="552070"/><text x="16.9725%" y="1119.50"></text></g><g><title>el0_interrupt (552,070 samples, 0.11%)</title><rect x="16.7225%" y="1093" width="0.1074%" height="15" fill="rgb(205,214,31)" fg:x="85961809" fg:w="552070"/><text x="16.9725%" y="1103.50"></text></g><g><title>irq_exit_rcu (552,070 samples, 0.11%)</title><rect x="16.7225%" y="1077" width="0.1074%" height="15" fill="rgb(224,111,15)" fg:x="85961809" fg:w="552070"/><text x="16.9725%" y="1087.50"></text></g><g><title>__irq_exit_rcu (552,070 samples, 0.11%)</title><rect x="16.7225%" y="1061" width="0.1074%" height="15" fill="rgb(253,21,26)" fg:x="85961809" fg:w="552070"/><text x="16.9725%" y="1071.50"></text></g><g><title>do_softirq_own_stack (552,070 samples, 0.11%)</title><rect x="16.7225%" y="1045" width="0.1074%" height="15" fill="rgb(245,139,43)" fg:x="85961809" fg:w="552070"/><text x="16.9725%" y="1055.50"></text></g><g><title>call_on_irq_stack (552,070 samples, 0.11%)</title><rect x="16.7225%" y="1029" width="0.1074%" height="15" fill="rgb(252,170,7)" fg:x="85961809" fg:w="552070"/><text x="16.9725%" y="1039.50"></text></g><g><title>____do_softirq (552,070 samples, 0.11%)</title><rect x="16.7225%" y="1013" width="0.1074%" height="15" fill="rgb(231,118,14)" fg:x="85961809" fg:w="552070"/><text x="16.9725%" y="1023.50"></text></g><g><title>__softirqentry_text_start (552,070 samples, 0.11%)</title><rect x="16.7225%" y="997" width="0.1074%" height="15" fill="rgb(238,83,0)" fg:x="85961809" fg:w="552070"/><text x="16.9725%" y="1007.50"></text></g><g><title>handle_softirqs (552,070 samples, 0.11%)</title><rect x="16.7225%" y="981" width="0.1074%" height="15" fill="rgb(221,39,39)" fg:x="85961809" fg:w="552070"/><text x="16.9725%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (510,392 samples, 0.10%)</title><rect x="16.8299%" y="1141" width="0.0993%" height="15" fill="rgb(222,119,46)" fg:x="86513879" fg:w="510392"/><text x="17.0799%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (510,392 samples, 0.10%)</title><rect x="16.8299%" y="1125" width="0.0993%" height="15" fill="rgb(222,165,49)" fg:x="86513879" fg:w="510392"/><text x="17.0799%" y="1135.50"></text></g><g><title>__aarch64_cas8_acq_rel (510,392 samples, 0.10%)</title><rect x="16.8299%" y="1109" width="0.0993%" height="15" fill="rgb(219,113,52)" fg:x="86513879" fg:w="510392"/><text x="17.0799%" y="1119.50"></text></g><g><title>el0t_64_irq_handler (510,392 samples, 0.10%)</title><rect x="16.8299%" y="1093" width="0.0993%" height="15" fill="rgb(214,7,15)" fg:x="86513879" fg:w="510392"/><text x="17.0799%" y="1103.50"></text></g><g><title>__el0_irq_handler_common (510,392 samples, 0.10%)</title><rect x="16.8299%" y="1077" width="0.0993%" height="15" fill="rgb(235,32,4)" fg:x="86513879" fg:w="510392"/><text x="17.0799%" y="1087.50"></text></g><g><title>el0_interrupt (510,392 samples, 0.10%)</title><rect x="16.8299%" y="1061" width="0.0993%" height="15" fill="rgb(238,90,54)" fg:x="86513879" fg:w="510392"/><text x="17.0799%" y="1071.50"></text></g><g><title>irq_exit_rcu (510,392 samples, 0.10%)</title><rect x="16.8299%" y="1045" width="0.0993%" height="15" fill="rgb(213,208,19)" fg:x="86513879" fg:w="510392"/><text x="17.0799%" y="1055.50"></text></g><g><title>__irq_exit_rcu (510,392 samples, 0.10%)</title><rect x="16.8299%" y="1029" width="0.0993%" height="15" fill="rgb(233,156,4)" fg:x="86513879" fg:w="510392"/><text x="17.0799%" y="1039.50"></text></g><g><title>do_softirq_own_stack (510,392 samples, 0.10%)</title><rect x="16.8299%" y="1013" width="0.0993%" height="15" fill="rgb(207,194,5)" fg:x="86513879" fg:w="510392"/><text x="17.0799%" y="1023.50"></text></g><g><title>call_on_irq_stack (510,392 samples, 0.10%)</title><rect x="16.8299%" y="997" width="0.0993%" height="15" fill="rgb(206,111,30)" fg:x="86513879" fg:w="510392"/><text x="17.0799%" y="1007.50"></text></g><g><title>____do_softirq (510,392 samples, 0.10%)</title><rect x="16.8299%" y="981" width="0.0993%" height="15" fill="rgb(243,70,54)" fg:x="86513879" fg:w="510392"/><text x="17.0799%" y="991.50"></text></g><g><title>__softirqentry_text_start (510,392 samples, 0.10%)</title><rect x="16.8299%" y="965" width="0.0993%" height="15" fill="rgb(242,28,8)" fg:x="86513879" fg:w="510392"/><text x="17.0799%" y="975.50"></text></g><g><title>handle_softirqs (510,392 samples, 0.10%)</title><rect x="16.8299%" y="949" width="0.0993%" height="15" fill="rgb(219,106,18)" fg:x="86513879" fg:w="510392"/><text x="17.0799%" y="959.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2,891,372 samples, 0.56%)</title><rect x="16.4436%" y="1205" width="0.5625%" height="15" fill="rgb(244,222,10)" fg:x="84527770" fg:w="2891372"/><text x="16.6936%" y="1215.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::{{closure}} (2,891,372 samples, 0.56%)</title><rect x="16.4436%" y="1189" width="0.5625%" height="15" fill="rgb(236,179,52)" fg:x="84527770" fg:w="2891372"/><text x="16.6936%" y="1199.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (905,263 samples, 0.18%)</title><rect x="16.8299%" y="1173" width="0.1761%" height="15" fill="rgb(213,23,39)" fg:x="86513879" fg:w="905263"/><text x="17.0799%" y="1183.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (905,263 samples, 0.18%)</title><rect x="16.8299%" y="1157" width="0.1761%" height="15" fill="rgb(238,48,10)" fg:x="86513879" fg:w="905263"/><text x="17.0799%" y="1167.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::catch_unwind (394,871 samples, 0.08%)</title><rect x="16.9292%" y="1141" width="0.0768%" height="15" fill="rgb(251,196,23)" fg:x="87024271" fg:w="394871"/><text x="17.1792%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (394,871 samples, 0.08%)</title><rect x="16.9292%" y="1125" width="0.0768%" height="15" fill="rgb(250,152,24)" fg:x="87024271" fg:w="394871"/><text x="17.1792%" y="1135.50"></text></g><g><title>std::panicking::try (394,871 samples, 0.08%)</title><rect x="16.9292%" y="1109" width="0.0768%" height="15" fill="rgb(209,150,17)" fg:x="87024271" fg:w="394871"/><text x="17.1792%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (394,871 samples, 0.08%)</title><rect x="16.9292%" y="1093" width="0.0768%" height="15" fill="rgb(234,202,34)" fg:x="87024271" fg:w="394871"/><text x="17.1792%" y="1103.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (394,871 samples, 0.08%)</title><rect x="16.9292%" y="1077" width="0.0768%" height="15" fill="rgb(253,148,53)" fg:x="87024271" fg:w="394871"/><text x="17.1792%" y="1087.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (394,871 samples, 0.08%)</title><rect x="16.9292%" y="1061" width="0.0768%" height="15" fill="rgb(218,129,16)" fg:x="87024271" fg:w="394871"/><text x="17.1792%" y="1071.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (394,871 samples, 0.08%)</title><rect x="16.9292%" y="1045" width="0.0768%" height="15" fill="rgb(216,85,19)" fg:x="87024271" fg:w="394871"/><text x="17.1792%" y="1055.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (394,871 samples, 0.08%)</title><rect x="16.9292%" y="1029" width="0.0768%" height="15" fill="rgb(235,228,7)" fg:x="87024271" fg:w="394871"/><text x="17.1792%" y="1039.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (394,871 samples, 0.08%)</title><rect x="16.9292%" y="1013" width="0.0768%" height="15" fill="rgb(245,175,0)" fg:x="87024271" fg:w="394871"/><text x="17.1792%" y="1023.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (394,871 samples, 0.08%)</title><rect x="16.9292%" y="997" width="0.0768%" height="15" fill="rgb(208,168,36)" fg:x="87024271" fg:w="394871"/><text x="17.1792%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (394,871 samples, 0.08%)</title><rect x="16.9292%" y="981" width="0.0768%" height="15" fill="rgb(246,171,24)" fg:x="87024271" fg:w="394871"/><text x="17.1792%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_add (394,871 samples, 0.08%)</title><rect x="16.9292%" y="965" width="0.0768%" height="15" fill="rgb(215,142,24)" fg:x="87024271" fg:w="394871"/><text x="17.1792%" y="975.50"></text></g><g><title>__aarch64_ldadd8_relax (394,871 samples, 0.08%)</title><rect x="16.9292%" y="949" width="0.0768%" height="15" fill="rgb(250,187,7)" fg:x="87024271" fg:w="394871"/><text x="17.1792%" y="959.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (7,448,939 samples, 1.45%)</title><rect x="15.6798%" y="1301" width="1.4491%" height="15" fill="rgb(228,66,33)" fg:x="80601838" fg:w="7448939"/><text x="15.9298%" y="1311.50"></text></g><g><title>rmcp::service::serve_inner::{{closure}}::{{closure}} (7,448,939 samples, 1.45%)</title><rect x="15.6798%" y="1285" width="1.4491%" height="15" fill="rgb(234,215,21)" fg:x="80601838" fg:w="7448939"/><text x="15.9298%" y="1295.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::{{closure}} (4,633,229 samples, 0.90%)</title><rect x="16.2276%" y="1269" width="0.9013%" height="15" fill="rgb(222,191,20)" fg:x="83417548" fg:w="4633229"/><text x="16.4776%" y="1279.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4,633,229 samples, 0.90%)</title><rect x="16.2276%" y="1253" width="0.9013%" height="15" fill="rgb(245,79,54)" fg:x="83417548" fg:w="4633229"/><text x="16.4776%" y="1263.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::{{closure}}::{{closure}} (4,633,229 samples, 0.90%)</title><rect x="16.2276%" y="1237" width="0.9013%" height="15" fill="rgb(240,10,37)" fg:x="83417548" fg:w="4633229"/><text x="16.4776%" y="1247.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (4,633,229 samples, 0.90%)</title><rect x="16.2276%" y="1221" width="0.9013%" height="15" fill="rgb(214,192,32)" fg:x="83417548" fg:w="4633229"/><text x="16.4776%" y="1231.50"></text></g><g><title>tokio::task::coop::poll_proceed (631,635 samples, 0.12%)</title><rect x="17.0060%" y="1205" width="0.1229%" height="15" fill="rgb(209,36,54)" fg:x="87419142" fg:w="631635"/><text x="17.2560%" y="1215.50"></text></g><g><title>tokio::runtime::context::budget (631,635 samples, 0.12%)</title><rect x="17.0060%" y="1189" width="0.1229%" height="15" fill="rgb(220,10,11)" fg:x="87419142" fg:w="631635"/><text x="17.2560%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (631,635 samples, 0.12%)</title><rect x="17.0060%" y="1173" width="0.1229%" height="15" fill="rgb(221,106,17)" fg:x="87419142" fg:w="631635"/><text x="17.2560%" y="1183.50"></text></g><g><title>core::ops::function::FnOnce::call_once (631,635 samples, 0.12%)</title><rect x="17.0060%" y="1157" width="0.1229%" height="15" fill="rgb(251,142,44)" fg:x="87419142" fg:w="631635"/><text x="17.2560%" y="1167.50"></text></g><g><title>tokio::runtime::context::CONTEXT::{{constant}}::{{closure}} (631,635 samples, 0.12%)</title><rect x="17.0060%" y="1141" width="0.1229%" height="15" fill="rgb(238,13,15)" fg:x="87419142" fg:w="631635"/><text x="17.2560%" y="1151.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (631,635 samples, 0.12%)</title><rect x="17.0060%" y="1125" width="0.1229%" height="15" fill="rgb(208,107,27)" fg:x="87419142" fg:w="631635"/><text x="17.2560%" y="1135.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (491,361 samples, 0.10%)</title><rect x="17.1289%" y="1285" width="0.0956%" height="15" fill="rgb(205,136,37)" fg:x="88050777" fg:w="491361"/><text x="17.3789%" y="1295.50"></text></g><g><title>&lt;tokio::sync::mpsc::chan::Tx&lt;T,S&gt; as core::clone::Clone&gt;::clone (491,361 samples, 0.10%)</title><rect x="17.1289%" y="1269" width="0.0956%" height="15" fill="rgb(250,205,27)" fg:x="88050777" fg:w="491361"/><text x="17.3789%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (491,361 samples, 0.10%)</title><rect x="17.1289%" y="1253" width="0.0956%" height="15" fill="rgb(210,80,43)" fg:x="88050777" fg:w="491361"/><text x="17.3789%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_add (491,361 samples, 0.10%)</title><rect x="17.1289%" y="1237" width="0.0956%" height="15" fill="rgb(247,160,36)" fg:x="88050777" fg:w="491361"/><text x="17.3789%" y="1247.50"></text></g><g><title>__aarch64_ldadd8_relax (491,361 samples, 0.10%)</title><rect x="17.1289%" y="1221" width="0.0956%" height="15" fill="rgb(234,13,49)" fg:x="88050777" fg:w="491361"/><text x="17.3789%" y="1231.50"></text></g><g><title>&lt;rmcp::transport::worker::WorkerTransport&lt;W&gt; as rmcp::transport::Transport&lt;&lt;W as rmcp::transport::worker::Worker&gt;::Role&gt;&gt;::send (1,123,972 samples, 0.22%)</title><rect x="17.1289%" y="1301" width="0.2187%" height="15" fill="rgb(234,122,0)" fg:x="88050777" fg:w="1123972"/><text x="17.3789%" y="1311.50"></text></g><g><title>tokio::sync::oneshot::channel (632,611 samples, 0.12%)</title><rect x="17.2245%" y="1285" width="0.1231%" height="15" fill="rgb(207,146,38)" fg:x="88542138" fg:w="632611"/><text x="17.4745%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (632,611 samples, 0.12%)</title><rect x="17.2245%" y="1269" width="0.1231%" height="15" fill="rgb(207,177,25)" fg:x="88542138" fg:w="632611"/><text x="17.4745%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (632,611 samples, 0.12%)</title><rect x="17.2245%" y="1253" width="0.1231%" height="15" fill="rgb(211,178,42)" fg:x="88542138" fg:w="632611"/><text x="17.4745%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_add (632,611 samples, 0.12%)</title><rect x="17.2245%" y="1237" width="0.1231%" height="15" fill="rgb(230,69,54)" fg:x="88542138" fg:w="632611"/><text x="17.4745%" y="1247.50"></text></g><g><title>__aarch64_ldadd8_relax (632,611 samples, 0.12%)</title><rect x="17.2245%" y="1221" width="0.1231%" height="15" fill="rgb(214,135,41)" fg:x="88542138" fg:w="632611"/><text x="17.4745%" y="1231.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (584,161 samples, 0.11%)</title><rect x="17.3476%" y="1301" width="0.1136%" height="15" fill="rgb(237,67,25)" fg:x="89174749" fg:w="584161"/><text x="17.5976%" y="1311.50"></text></g><g><title>&lt;tokio::sync::mpsc::chan::Tx&lt;T,S&gt; as core::clone::Clone&gt;::clone (584,161 samples, 0.11%)</title><rect x="17.3476%" y="1285" width="0.1136%" height="15" fill="rgb(222,189,50)" fg:x="89174749" fg:w="584161"/><text x="17.5976%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (584,161 samples, 0.11%)</title><rect x="17.3476%" y="1269" width="0.1136%" height="15" fill="rgb(245,148,34)" fg:x="89174749" fg:w="584161"/><text x="17.5976%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (584,161 samples, 0.11%)</title><rect x="17.3476%" y="1253" width="0.1136%" height="15" fill="rgb(222,29,6)" fg:x="89174749" fg:w="584161"/><text x="17.5976%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_add (584,161 samples, 0.11%)</title><rect x="17.3476%" y="1237" width="0.1136%" height="15" fill="rgb(221,189,43)" fg:x="89174749" fg:w="584161"/><text x="17.5976%" y="1247.50"></text></g><g><title>__aarch64_ldadd8_relax (584,161 samples, 0.11%)</title><rect x="17.3476%" y="1221" width="0.1136%" height="15" fill="rgb(207,36,27)" fg:x="89174749" fg:w="584161"/><text x="17.5976%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;(tokio::sync::mpsc::bounded::Receiver&lt;rmcp::model::JsonRpcMessage&lt;rmcp::model::ServerRequest,rmcp::model::ServerResult,rmcp::model::ServerNotification&gt;&gt;::recv::{{closure}},&lt;rmcp::transport::worker::WorkerTransport&lt;rmcp::transport::streamable_http_server::session::local::LocalSessionWorker&gt; as rmcp::transport::Transport&lt;rmcp::service::server::RoleServer&gt;&gt;::receive::{{closure}},tokio::sync::mpsc::bounded::Receiver&lt;rmcp::service::PeerSinkMessage&lt;rmcp::service::server::RoleServer&gt;&gt;::recv::{{closure}},tokio::task::join_set::JoinSet&lt;rmcp::service::serve_inner::{{closure}}::SendTaskResult&gt;::join_next::{{closure}},tokio_util::sync::cancellation_token::WaitForCancellationFuture)&gt; (367,260 samples, 0.07%)</title><rect x="17.4612%" y="1301" width="0.0714%" height="15" fill="rgb(217,90,24)" fg:x="89758910" fg:w="367260"/><text x="17.7112%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio_util::sync::cancellation_token::WaitForCancellationFuture&gt; (367,260 samples, 0.07%)</title><rect x="17.4612%" y="1285" width="0.0714%" height="15" fill="rgb(224,66,35)" fg:x="89758910" fg:w="367260"/><text x="17.7112%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::notify::Notified&gt; (367,260 samples, 0.07%)</title><rect x="17.4612%" y="1269" width="0.0714%" height="15" fill="rgb(221,13,50)" fg:x="89758910" fg:w="367260"/><text x="17.7112%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::notify::Waiter&gt; (367,260 samples, 0.07%)</title><rect x="17.4612%" y="1253" width="0.0714%" height="15" fill="rgb(236,68,49)" fg:x="89758910" fg:w="367260"/><text x="17.7112%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (367,260 samples, 0.07%)</title><rect x="17.4612%" y="1237" width="0.0714%" height="15" fill="rgb(229,146,28)" fg:x="89758910" fg:w="367260"/><text x="17.7112%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (367,260 samples, 0.07%)</title><rect x="17.4612%" y="1221" width="0.0714%" height="15" fill="rgb(225,31,38)" fg:x="89758910" fg:w="367260"/><text x="17.7112%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (367,260 samples, 0.07%)</title><rect x="17.4612%" y="1205" width="0.0714%" height="15" fill="rgb(250,208,3)" fg:x="89758910" fg:w="367260"/><text x="17.7112%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (367,260 samples, 0.07%)</title><rect x="17.4612%" y="1189" width="0.0714%" height="15" fill="rgb(246,54,23)" fg:x="89758910" fg:w="367260"/><text x="17.7112%" y="1199.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (367,260 samples, 0.07%)</title><rect x="17.4612%" y="1173" width="0.0714%" height="15" fill="rgb(243,76,11)" fg:x="89758910" fg:w="367260"/><text x="17.7112%" y="1183.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (367,260 samples, 0.07%)</title><rect x="17.4612%" y="1157" width="0.0714%" height="15" fill="rgb(245,21,50)" fg:x="89758910" fg:w="367260"/><text x="17.7112%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (700,872 samples, 0.14%)</title><rect x="17.5327%" y="1301" width="0.1363%" height="15" fill="rgb(228,9,43)" fg:x="90126170" fg:w="700872"/><text x="17.7827%" y="1311.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (700,872 samples, 0.14%)</title><rect x="17.5327%" y="1285" width="0.1363%" height="15" fill="rgb(208,100,47)" fg:x="90126170" fg:w="700872"/><text x="17.7827%" y="1295.50"></text></g><g><title>el0t_64_irq_handler (623,918 samples, 0.12%)</title><rect x="17.7526%" y="1285" width="0.1214%" height="15" fill="rgb(232,26,8)" fg:x="91256798" fg:w="623918"/><text x="18.0026%" y="1295.50"></text></g><g><title>__el0_irq_handler_common (623,918 samples, 0.12%)</title><rect x="17.7526%" y="1269" width="0.1214%" height="15" fill="rgb(216,166,38)" fg:x="91256798" fg:w="623918"/><text x="18.0026%" y="1279.50"></text></g><g><title>el0_interrupt (623,918 samples, 0.12%)</title><rect x="17.7526%" y="1253" width="0.1214%" height="15" fill="rgb(251,202,51)" fg:x="91256798" fg:w="623918"/><text x="18.0026%" y="1263.50"></text></g><g><title>irq_exit_rcu (623,918 samples, 0.12%)</title><rect x="17.7526%" y="1237" width="0.1214%" height="15" fill="rgb(254,216,34)" fg:x="91256798" fg:w="623918"/><text x="18.0026%" y="1247.50"></text></g><g><title>__irq_exit_rcu (623,918 samples, 0.12%)</title><rect x="17.7526%" y="1221" width="0.1214%" height="15" fill="rgb(251,32,27)" fg:x="91256798" fg:w="623918"/><text x="18.0026%" y="1231.50"></text></g><g><title>do_softirq_own_stack (623,918 samples, 0.12%)</title><rect x="17.7526%" y="1205" width="0.1214%" height="15" fill="rgb(208,127,28)" fg:x="91256798" fg:w="623918"/><text x="18.0026%" y="1215.50"></text></g><g><title>call_on_irq_stack (623,918 samples, 0.12%)</title><rect x="17.7526%" y="1189" width="0.1214%" height="15" fill="rgb(224,137,22)" fg:x="91256798" fg:w="623918"/><text x="18.0026%" y="1199.50"></text></g><g><title>____do_softirq (623,918 samples, 0.12%)</title><rect x="17.7526%" y="1173" width="0.1214%" height="15" fill="rgb(254,70,32)" fg:x="91256798" fg:w="623918"/><text x="18.0026%" y="1183.50"></text></g><g><title>__softirqentry_text_start (623,918 samples, 0.12%)</title><rect x="17.7526%" y="1157" width="0.1214%" height="15" fill="rgb(229,75,37)" fg:x="91256798" fg:w="623918"/><text x="18.0026%" y="1167.50"></text></g><g><title>net_rx_action (623,918 samples, 0.12%)</title><rect x="17.7526%" y="1141" width="0.1214%" height="15" fill="rgb(252,64,23)" fg:x="91256798" fg:w="623918"/><text x="18.0026%" y="1151.50"></text></g><g><title>__GI___memcpy_simd (536,458 samples, 0.10%)</title><rect x="17.8740%" y="1237" width="0.1044%" height="15" fill="rgb(232,162,48)" fg:x="91880716" fg:w="536458"/><text x="18.1240%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::util::sharded_list::ShardGuard&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt; (354,566 samples, 0.07%)</title><rect x="17.9783%" y="1109" width="0.0690%" height="15" fill="rgb(246,160,12)" fg:x="92417174" fg:w="354566"/><text x="18.2283%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (354,566 samples, 0.07%)</title><rect x="17.9783%" y="1093" width="0.0690%" height="15" fill="rgb(247,166,0)" fg:x="92417174" fg:w="354566"/><text x="18.2283%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (354,566 samples, 0.07%)</title><rect x="17.9783%" y="1077" width="0.0690%" height="15" fill="rgb(249,219,21)" fg:x="92417174" fg:w="354566"/><text x="18.2283%" y="1087.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (354,566 samples, 0.07%)</title><rect x="17.9783%" y="1061" width="0.0690%" height="15" fill="rgb(205,209,3)" fg:x="92417174" fg:w="354566"/><text x="18.2283%" y="1071.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (354,566 samples, 0.07%)</title><rect x="17.9783%" y="1045" width="0.0690%" height="15" fill="rgb(243,44,1)" fg:x="92417174" fg:w="354566"/><text x="18.2283%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (354,566 samples, 0.07%)</title><rect x="17.9783%" y="1029" width="0.0690%" height="15" fill="rgb(206,159,16)" fg:x="92417174" fg:w="354566"/><text x="18.2283%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (354,566 samples, 0.07%)</title><rect x="17.9783%" y="1013" width="0.0690%" height="15" fill="rgb(244,77,30)" fg:x="92417174" fg:w="354566"/><text x="18.2283%" y="1023.50"></text></g><g><title>__aarch64_cas1_rel (354,566 samples, 0.07%)</title><rect x="17.9783%" y="997" width="0.0690%" height="15" fill="rgb(218,69,12)" fg:x="92417174" fg:w="354566"/><text x="18.2283%" y="1007.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (907,394 samples, 0.18%)</title><rect x="17.9783%" y="1141" width="0.1765%" height="15" fill="rgb(212,87,7)" fg:x="92417174" fg:w="907394"/><text x="18.2283%" y="1151.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (907,394 samples, 0.18%)</title><rect x="17.9783%" y="1125" width="0.1765%" height="15" fill="rgb(245,114,25)" fg:x="92417174" fg:w="907394"/><text x="18.2283%" y="1135.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (552,828 samples, 0.11%)</title><rect x="18.0473%" y="1109" width="0.1075%" height="15" fill="rgb(210,61,42)" fg:x="92771740" fg:w="552828"/><text x="18.2973%" y="1119.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as tokio::util::linked_list::Link&gt;::pointers (552,828 samples, 0.11%)</title><rect x="18.0473%" y="1093" width="0.1075%" height="15" fill="rgb(211,52,33)" fg:x="92771740" fg:w="552828"/><text x="18.2973%" y="1103.50"></text></g><g><title>tokio::runtime::task::core::Header::get_trailer (552,828 samples, 0.11%)</title><rect x="18.0473%" y="1077" width="0.1075%" height="15" fill="rgb(234,58,33)" fg:x="92771740" fg:w="552828"/><text x="18.2973%" y="1087.50"></text></g><g><title>el0t_64_irq_handler (552,828 samples, 0.11%)</title><rect x="18.0473%" y="1061" width="0.1075%" height="15" fill="rgb(220,115,36)" fg:x="92771740" fg:w="552828"/><text x="18.2973%" y="1071.50"></text></g><g><title>__el0_irq_handler_common (552,828 samples, 0.11%)</title><rect x="18.0473%" y="1045" width="0.1075%" height="15" fill="rgb(243,153,54)" fg:x="92771740" fg:w="552828"/><text x="18.2973%" y="1055.50"></text></g><g><title>el0_interrupt (552,828 samples, 0.11%)</title><rect x="18.0473%" y="1029" width="0.1075%" height="15" fill="rgb(251,47,18)" fg:x="92771740" fg:w="552828"/><text x="18.2973%" y="1039.50"></text></g><g><title>irq_exit_rcu (552,828 samples, 0.11%)</title><rect x="18.0473%" y="1013" width="0.1075%" height="15" fill="rgb(242,102,42)" fg:x="92771740" fg:w="552828"/><text x="18.2973%" y="1023.50"></text></g><g><title>__irq_exit_rcu (552,828 samples, 0.11%)</title><rect x="18.0473%" y="997" width="0.1075%" height="15" fill="rgb(234,31,38)" fg:x="92771740" fg:w="552828"/><text x="18.2973%" y="1007.50"></text></g><g><title>do_softirq_own_stack (552,828 samples, 0.11%)</title><rect x="18.0473%" y="981" width="0.1075%" height="15" fill="rgb(221,117,51)" fg:x="92771740" fg:w="552828"/><text x="18.2973%" y="991.50"></text></g><g><title>call_on_irq_stack (552,828 samples, 0.11%)</title><rect x="18.0473%" y="965" width="0.1075%" height="15" fill="rgb(212,20,18)" fg:x="92771740" fg:w="552828"/><text x="18.2973%" y="975.50"></text></g><g><title>____do_softirq (552,828 samples, 0.11%)</title><rect x="18.0473%" y="949" width="0.1075%" height="15" fill="rgb(245,133,36)" fg:x="92771740" fg:w="552828"/><text x="18.2973%" y="959.50"></text></g><g><title>__softirqentry_text_start (552,828 samples, 0.11%)</title><rect x="18.0473%" y="933" width="0.1075%" height="15" fill="rgb(212,6,19)" fg:x="92771740" fg:w="552828"/><text x="18.2973%" y="943.50"></text></g><g><title>handle_softirqs (552,828 samples, 0.11%)</title><rect x="18.0473%" y="917" width="0.1075%" height="15" fill="rgb(218,1,36)" fg:x="92771740" fg:w="552828"/><text x="18.2973%" y="927.50"></text></g><g><title>__GI___memcpy_simd (383,114 samples, 0.07%)</title><rect x="18.2259%" y="1093" width="0.0745%" height="15" fill="rgb(246,84,54)" fg:x="93689735" fg:w="383114"/><text x="18.4759%" y="1103.50"></text></g><g><title>el0t_64_irq_handler (383,114 samples, 0.07%)</title><rect x="18.2259%" y="1077" width="0.0745%" height="15" fill="rgb(242,110,6)" fg:x="93689735" fg:w="383114"/><text x="18.4759%" y="1087.50"></text></g><g><title>__el0_irq_handler_common (383,114 samples, 0.07%)</title><rect x="18.2259%" y="1061" width="0.0745%" height="15" fill="rgb(214,47,5)" fg:x="93689735" fg:w="383114"/><text x="18.4759%" y="1071.50"></text></g><g><title>el0_interrupt (383,114 samples, 0.07%)</title><rect x="18.2259%" y="1045" width="0.0745%" height="15" fill="rgb(218,159,25)" fg:x="93689735" fg:w="383114"/><text x="18.4759%" y="1055.50"></text></g><g><title>irq_exit_rcu (383,114 samples, 0.07%)</title><rect x="18.2259%" y="1029" width="0.0745%" height="15" fill="rgb(215,211,28)" fg:x="93689735" fg:w="383114"/><text x="18.4759%" y="1039.50"></text></g><g><title>__irq_exit_rcu (383,114 samples, 0.07%)</title><rect x="18.2259%" y="1013" width="0.0745%" height="15" fill="rgb(238,59,32)" fg:x="93689735" fg:w="383114"/><text x="18.4759%" y="1023.50"></text></g><g><title>do_softirq_own_stack (383,114 samples, 0.07%)</title><rect x="18.2259%" y="997" width="0.0745%" height="15" fill="rgb(226,82,3)" fg:x="93689735" fg:w="383114"/><text x="18.4759%" y="1007.50"></text></g><g><title>call_on_irq_stack (383,114 samples, 0.07%)</title><rect x="18.2259%" y="981" width="0.0745%" height="15" fill="rgb(240,164,32)" fg:x="93689735" fg:w="383114"/><text x="18.4759%" y="991.50"></text></g><g><title>____do_softirq (383,114 samples, 0.07%)</title><rect x="18.2259%" y="965" width="0.0745%" height="15" fill="rgb(232,46,7)" fg:x="93689735" fg:w="383114"/><text x="18.4759%" y="975.50"></text></g><g><title>__softirqentry_text_start (383,114 samples, 0.07%)</title><rect x="18.2259%" y="949" width="0.0745%" height="15" fill="rgb(229,129,53)" fg:x="93689735" fg:w="383114"/><text x="18.4759%" y="959.50"></text></g><g><title>handle_softirqs (383,114 samples, 0.07%)</title><rect x="18.2259%" y="933" width="0.0745%" height="15" fill="rgb(234,188,29)" fg:x="93689735" fg:w="383114"/><text x="18.4759%" y="943.50"></text></g><g><title>__GI___memcpy_simd (691,674 samples, 0.13%)</title><rect x="18.3004%" y="1077" width="0.1346%" height="15" fill="rgb(246,141,4)" fg:x="94072849" fg:w="691674"/><text x="18.5504%" y="1087.50"></text></g><g><title>_int_free (710,519 samples, 0.14%)</title><rect x="18.4350%" y="917" width="0.1382%" height="15" fill="rgb(229,23,39)" fg:x="94764523" fg:w="710519"/><text x="18.6850%" y="927.50"></text></g><g><title>malloc_consolidate (1,696,721 samples, 0.33%)</title><rect x="18.5732%" y="901" width="0.3301%" height="15" fill="rgb(206,12,3)" fg:x="95475042" fg:w="1696721"/><text x="18.8232%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3,611,595 samples, 0.70%)</title><rect x="18.3004%" y="1093" width="0.7026%" height="15" fill="rgb(252,226,20)" fg:x="94072849" fg:w="3611595"/><text x="18.5504%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (2,919,921 samples, 0.57%)</title><rect x="18.4350%" y="1077" width="0.5680%" height="15" fill="rgb(216,123,35)" fg:x="94764523" fg:w="2919921"/><text x="18.6850%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,919,921 samples, 0.57%)</title><rect x="18.4350%" y="1061" width="0.5680%" height="15" fill="rgb(212,68,40)" fg:x="94764523" fg:w="2919921"/><text x="18.6850%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,919,921 samples, 0.57%)</title><rect x="18.4350%" y="1045" width="0.5680%" height="15" fill="rgb(254,125,32)" fg:x="94764523" fg:w="2919921"/><text x="18.6850%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (2,919,921 samples, 0.57%)</title><rect x="18.4350%" y="1029" width="0.5680%" height="15" fill="rgb(253,97,22)" fg:x="94764523" fg:w="2919921"/><text x="18.6850%" y="1039.50"></text></g><g><title>__rustc::__rdl_alloc (2,919,921 samples, 0.57%)</title><rect x="18.4350%" y="1013" width="0.5680%" height="15" fill="rgb(241,101,14)" fg:x="94764523" fg:w="2919921"/><text x="18.6850%" y="1023.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,919,921 samples, 0.57%)</title><rect x="18.4350%" y="997" width="0.5680%" height="15" fill="rgb(238,103,29)" fg:x="94764523" fg:w="2919921"/><text x="18.6850%" y="1007.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (2,919,921 samples, 0.57%)</title><rect x="18.4350%" y="981" width="0.5680%" height="15" fill="rgb(233,195,47)" fg:x="94764523" fg:w="2919921"/><text x="18.6850%" y="991.50"></text></g><g><title>__posix_memalign (2,919,921 samples, 0.57%)</title><rect x="18.4350%" y="965" width="0.5680%" height="15" fill="rgb(246,218,30)" fg:x="94764523" fg:w="2919921"/><text x="18.6850%" y="975.50"></text></g><g><title>_mid_memalign.constprop.0 (2,919,921 samples, 0.57%)</title><rect x="18.4350%" y="949" width="0.5680%" height="15" fill="rgb(219,145,47)" fg:x="94764523" fg:w="2919921"/><text x="18.6850%" y="959.50"></text></g><g><title>_int_memalign (2,919,921 samples, 0.57%)</title><rect x="18.4350%" y="933" width="0.5680%" height="15" fill="rgb(243,12,26)" fg:x="94764523" fg:w="2919921"/><text x="18.6850%" y="943.50"></text></g><g><title>_int_malloc (2,209,402 samples, 0.43%)</title><rect x="18.5732%" y="917" width="0.4298%" height="15" fill="rgb(214,87,16)" fg:x="95475042" fg:w="2209402"/><text x="18.8232%" y="927.50"></text></g><g><title>unlink_chunk.constprop.0 (512,681 samples, 0.10%)</title><rect x="18.9033%" y="901" width="0.0997%" height="15" fill="rgb(208,99,42)" fg:x="97171763" fg:w="512681"/><text x="19.1533%" y="911.50"></text></g><g><title>tokio::task::spawn::spawn (7,211,554 samples, 1.40%)</title><rect x="17.6690%" y="1301" width="1.4029%" height="15" fill="rgb(253,99,2)" fg:x="90827042" fg:w="7211554"/><text x="17.9190%" y="1311.50"></text></g><g><title>tokio::task::spawn::spawn_inner (6,157,880 samples, 1.20%)</title><rect x="17.8740%" y="1285" width="1.1979%" height="15" fill="rgb(220,168,23)" fg:x="91880716" fg:w="6157880"/><text x="18.1240%" y="1295.50"></text></g><g><title>tokio::runtime::context::current::with_current (6,157,880 samples, 1.20%)</title><rect x="17.8740%" y="1269" width="1.1979%" height="15" fill="rgb(242,38,24)" fg:x="91880716" fg:w="6157880"/><text x="18.1240%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,157,880 samples, 1.20%)</title><rect x="17.8740%" y="1253" width="1.1979%" height="15" fill="rgb(225,182,9)" fg:x="91880716" fg:w="6157880"/><text x="18.1240%" y="1263.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (5,621,422 samples, 1.09%)</title><rect x="17.9783%" y="1237" width="1.0936%" height="15" fill="rgb(243,178,37)" fg:x="92417174" fg:w="5621422"/><text x="18.2283%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5,621,422 samples, 1.09%)</title><rect x="17.9783%" y="1221" width="1.0936%" height="15" fill="rgb(232,139,19)" fg:x="92417174" fg:w="5621422"/><text x="18.2283%" y="1231.50"></text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} (5,621,422 samples, 1.09%)</title><rect x="17.9783%" y="1205" width="1.0936%" height="15" fill="rgb(225,201,24)" fg:x="92417174" fg:w="5621422"/><text x="18.2283%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (5,621,422 samples, 1.09%)</title><rect x="17.9783%" y="1189" width="1.0936%" height="15" fill="rgb(221,47,46)" fg:x="92417174" fg:w="5621422"/><text x="18.2283%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Handle::spawn (5,621,422 samples, 1.09%)</title><rect x="17.9783%" y="1173" width="1.0936%" height="15" fill="rgb(249,23,13)" fg:x="92417174" fg:w="5621422"/><text x="18.2283%" y="1183.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (5,621,422 samples, 1.09%)</title><rect x="17.9783%" y="1157" width="1.0936%" height="15" fill="rgb(219,9,5)" fg:x="92417174" fg:w="5621422"/><text x="18.2283%" y="1167.50"></text></g><g><title>tokio::runtime::task::new_task (4,714,028 samples, 0.92%)</title><rect x="18.1549%" y="1141" width="0.9170%" height="15" fill="rgb(254,171,16)" fg:x="93324568" fg:w="4714028"/><text x="18.4049%" y="1151.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (4,714,028 samples, 0.92%)</title><rect x="18.1549%" y="1125" width="0.9170%" height="15" fill="rgb(230,171,20)" fg:x="93324568" fg:w="4714028"/><text x="18.4049%" y="1135.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (4,714,028 samples, 0.92%)</title><rect x="18.1549%" y="1109" width="0.9170%" height="15" fill="rgb(210,71,41)" fg:x="93324568" fg:w="4714028"/><text x="18.4049%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::hooks (354,152 samples, 0.07%)</title><rect x="19.0030%" y="1093" width="0.0689%" height="15" fill="rgb(206,173,20)" fg:x="97684444" fg:w="354152"/><text x="19.2530%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;tokio_util::sync::cancellation_token::tree_node::TreeNode&gt;&gt;&gt; (455,358 samples, 0.09%)</title><rect x="19.0719%" y="1285" width="0.0886%" height="15" fill="rgb(233,88,34)" fg:x="98038596" fg:w="455358"/><text x="19.3219%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;tokio_util::sync::cancellation_token::tree_node::TreeNode&gt;&gt;&gt; (455,358 samples, 0.09%)</title><rect x="19.0719%" y="1269" width="0.0886%" height="15" fill="rgb(223,209,46)" fg:x="98038596" fg:w="455358"/><text x="19.3219%" y="1279.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (455,358 samples, 0.09%)</title><rect x="19.0719%" y="1253" width="0.0886%" height="15" fill="rgb(250,43,18)" fg:x="98038596" fg:w="455358"/><text x="19.3219%" y="1263.50"></text></g><g><title>tokio_util::sync::cancellation_token::tree_node::cancel (2,318,249 samples, 0.45%)</title><rect x="19.0719%" y="1301" width="0.4510%" height="15" fill="rgb(208,13,10)" fg:x="98038596" fg:w="2318249"/><text x="19.3219%" y="1311.50"></text></g><g><title>tokio::sync::notify::Notify::notify_waiters (1,862,891 samples, 0.36%)</title><rect x="19.1605%" y="1285" width="0.3624%" height="15" fill="rgb(212,200,36)" fg:x="98493954" fg:w="1862891"/><text x="19.4105%" y="1295.50"></text></g><g><title>tracing_core::callsite::DefaultCallsite::interest (1,186,746 samples, 0.23%)</title><rect x="19.5229%" y="1301" width="0.2309%" height="15" fill="rgb(225,90,30)" fg:x="100356845" fg:w="1186746"/><text x="19.7729%" y="1311.50"></text></g><g><title>el0t_64_irq_handler (1,186,746 samples, 0.23%)</title><rect x="19.5229%" y="1285" width="0.2309%" height="15" fill="rgb(236,182,39)" fg:x="100356845" fg:w="1186746"/><text x="19.7729%" y="1295.50"></text></g><g><title>__el0_irq_handler_common (1,186,746 samples, 0.23%)</title><rect x="19.5229%" y="1269" width="0.2309%" height="15" fill="rgb(212,144,35)" fg:x="100356845" fg:w="1186746"/><text x="19.7729%" y="1279.50"></text></g><g><title>el0_interrupt (1,186,746 samples, 0.23%)</title><rect x="19.5229%" y="1253" width="0.2309%" height="15" fill="rgb(228,63,44)" fg:x="100356845" fg:w="1186746"/><text x="19.7729%" y="1263.50"></text></g><g><title>irq_exit_rcu (1,186,746 samples, 0.23%)</title><rect x="19.5229%" y="1237" width="0.2309%" height="15" fill="rgb(228,109,6)" fg:x="100356845" fg:w="1186746"/><text x="19.7729%" y="1247.50"></text></g><g><title>__irq_exit_rcu (1,186,746 samples, 0.23%)</title><rect x="19.5229%" y="1221" width="0.2309%" height="15" fill="rgb(238,117,24)" fg:x="100356845" fg:w="1186746"/><text x="19.7729%" y="1231.50"></text></g><g><title>do_softirq_own_stack (1,186,746 samples, 0.23%)</title><rect x="19.5229%" y="1205" width="0.2309%" height="15" fill="rgb(242,26,26)" fg:x="100356845" fg:w="1186746"/><text x="19.7729%" y="1215.50"></text></g><g><title>call_on_irq_stack (1,186,746 samples, 0.23%)</title><rect x="19.5229%" y="1189" width="0.2309%" height="15" fill="rgb(221,92,48)" fg:x="100356845" fg:w="1186746"/><text x="19.7729%" y="1199.50"></text></g><g><title>____do_softirq (1,186,746 samples, 0.23%)</title><rect x="19.5229%" y="1173" width="0.2309%" height="15" fill="rgb(209,209,32)" fg:x="100356845" fg:w="1186746"/><text x="19.7729%" y="1183.50"></text></g><g><title>__softirqentry_text_start (1,186,746 samples, 0.23%)</title><rect x="19.5229%" y="1157" width="0.2309%" height="15" fill="rgb(221,70,22)" fg:x="100356845" fg:w="1186746"/><text x="19.7729%" y="1167.50"></text></g><g><title>handle_softirqs (1,186,746 samples, 0.23%)</title><rect x="19.5229%" y="1141" width="0.2309%" height="15" fill="rgb(248,145,5)" fg:x="100356845" fg:w="1186746"/><text x="19.7729%" y="1151.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (642,352 samples, 0.12%)</title><rect x="19.7537%" y="1253" width="0.1250%" height="15" fill="rgb(226,116,26)" fg:x="101543591" fg:w="642352"/><text x="20.0037%" y="1263.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (642,352 samples, 0.12%)</title><rect x="19.7537%" y="1237" width="0.1250%" height="15" fill="rgb(244,5,17)" fg:x="101543591" fg:w="642352"/><text x="20.0037%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (723,468 samples, 0.14%)</title><rect x="19.8787%" y="1237" width="0.1407%" height="15" fill="rgb(252,159,33)" fg:x="102185943" fg:w="723468"/><text x="20.1287%" y="1247.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span::{{closure}} (723,468 samples, 0.14%)</title><rect x="19.8787%" y="1221" width="0.1407%" height="15" fill="rgb(206,71,0)" fg:x="102185943" fg:w="723468"/><text x="20.1287%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (723,468 samples, 0.14%)</title><rect x="19.8787%" y="1205" width="0.1407%" height="15" fill="rgb(233,118,54)" fg:x="102185943" fg:w="723468"/><text x="20.1287%" y="1215.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (723,468 samples, 0.14%)</title><rect x="19.8787%" y="1189" width="0.1407%" height="15" fill="rgb(234,83,48)" fg:x="102185943" fg:w="723468"/><text x="20.1287%" y="1199.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (723,468 samples, 0.14%)</title><rect x="19.8787%" y="1173" width="0.1407%" height="15" fill="rgb(228,3,54)" fg:x="102185943" fg:w="723468"/><text x="20.1287%" y="1183.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (723,468 samples, 0.14%)</title><rect x="19.8787%" y="1157" width="0.1407%" height="15" fill="rgb(226,155,13)" fg:x="102185943" fg:w="723468"/><text x="20.1287%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (723,468 samples, 0.14%)</title><rect x="19.8787%" y="1141" width="0.1407%" height="15" fill="rgb(241,28,37)" fg:x="102185943" fg:w="723468"/><text x="20.1287%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_load (723,468 samples, 0.14%)</title><rect x="19.8787%" y="1125" width="0.1407%" height="15" fill="rgb(233,93,10)" fg:x="102185943" fg:w="723468"/><text x="20.1287%" y="1135.50"></text></g><g><title>tracing_core::dispatcher::get_default (1,994,462 samples, 0.39%)</title><rect x="19.7537%" y="1301" width="0.3880%" height="15" fill="rgb(225,113,19)" fg:x="101543591" fg:w="1994462"/><text x="20.0037%" y="1311.50"></text></g><g><title>tracing::span::Span::current::{{closure}} (1,994,462 samples, 0.39%)</title><rect x="19.7537%" y="1285" width="0.3880%" height="15" fill="rgb(241,2,18)" fg:x="101543591" fg:w="1994462"/><text x="20.0037%" y="1295.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::current_span (1,994,462 samples, 0.39%)</title><rect x="19.7537%" y="1269" width="0.3880%" height="15" fill="rgb(228,207,21)" fg:x="101543591" fg:w="1994462"/><text x="20.0037%" y="1279.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (1,352,110 samples, 0.26%)</title><rect x="19.8787%" y="1253" width="0.2630%" height="15" fill="rgb(213,211,35)" fg:x="102185943" fg:w="1352110"/><text x="20.1287%" y="1263.50"></text></g><g><title>el0t_64_irq_handler (628,642 samples, 0.12%)</title><rect x="20.0194%" y="1237" width="0.1223%" height="15" fill="rgb(209,83,10)" fg:x="102909411" fg:w="628642"/><text x="20.2694%" y="1247.50"></text></g><g><title>__el0_irq_handler_common (628,642 samples, 0.12%)</title><rect x="20.0194%" y="1221" width="0.1223%" height="15" fill="rgb(209,164,1)" fg:x="102909411" fg:w="628642"/><text x="20.2694%" y="1231.50"></text></g><g><title>el0_interrupt (628,642 samples, 0.12%)</title><rect x="20.0194%" y="1205" width="0.1223%" height="15" fill="rgb(213,184,43)" fg:x="102909411" fg:w="628642"/><text x="20.2694%" y="1215.50"></text></g><g><title>irq_exit_rcu (628,642 samples, 0.12%)</title><rect x="20.0194%" y="1189" width="0.1223%" height="15" fill="rgb(231,61,34)" fg:x="102909411" fg:w="628642"/><text x="20.2694%" y="1199.50"></text></g><g><title>__irq_exit_rcu (628,642 samples, 0.12%)</title><rect x="20.0194%" y="1173" width="0.1223%" height="15" fill="rgb(235,75,3)" fg:x="102909411" fg:w="628642"/><text x="20.2694%" y="1183.50"></text></g><g><title>do_softirq_own_stack (628,642 samples, 0.12%)</title><rect x="20.0194%" y="1157" width="0.1223%" height="15" fill="rgb(220,106,47)" fg:x="102909411" fg:w="628642"/><text x="20.2694%" y="1167.50"></text></g><g><title>call_on_irq_stack (628,642 samples, 0.12%)</title><rect x="20.0194%" y="1141" width="0.1223%" height="15" fill="rgb(210,196,33)" fg:x="102909411" fg:w="628642"/><text x="20.2694%" y="1151.50"></text></g><g><title>____do_softirq (628,642 samples, 0.12%)</title><rect x="20.0194%" y="1125" width="0.1223%" height="15" fill="rgb(229,154,42)" fg:x="102909411" fg:w="628642"/><text x="20.2694%" y="1135.50"></text></g><g><title>__softirqentry_text_start (628,642 samples, 0.12%)</title><rect x="20.0194%" y="1109" width="0.1223%" height="15" fill="rgb(228,114,26)" fg:x="102909411" fg:w="628642"/><text x="20.2694%" y="1119.50"></text></g><g><title>handle_softirqs (628,642 samples, 0.12%)</title><rect x="20.0194%" y="1093" width="0.1223%" height="15" fill="rgb(208,144,1)" fg:x="102909411" fg:w="628642"/><text x="20.2694%" y="1103.50"></text></g><g><title>rmcp::service::serve_inner::{{closure}} (24,228,255 samples, 4.71%)</title><rect x="15.6798%" y="1317" width="4.7132%" height="15" fill="rgb(239,112,37)" fg:x="80601838" fg:w="24228255"/><text x="15.9298%" y="1327.50">rmcp:..</text></g><g><title>tracing_core::dispatcher::has_been_set (1,292,040 samples, 0.25%)</title><rect x="20.1417%" y="1301" width="0.2513%" height="15" fill="rgb(210,96,50)" fg:x="103538053" fg:w="1292040"/><text x="20.3917%" y="1311.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1,292,040 samples, 0.25%)</title><rect x="20.1417%" y="1285" width="0.2513%" height="15" fill="rgb(222,178,2)" fg:x="103538053" fg:w="1292040"/><text x="20.3917%" y="1295.50"></text></g><g><title>core::sync::atomic::atomic_load (1,292,040 samples, 0.25%)</title><rect x="20.1417%" y="1269" width="0.2513%" height="15" fill="rgb(226,74,18)" fg:x="103538053" fg:w="1292040"/><text x="20.3917%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (802,607 samples, 0.16%)</title><rect x="20.3931%" y="1221" width="0.1561%" height="15" fill="rgb(225,67,54)" fg:x="104830093" fg:w="802607"/><text x="20.6431%" y="1231.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (802,607 samples, 0.16%)</title><rect x="20.3931%" y="1205" width="0.1561%" height="15" fill="rgb(251,92,32)" fg:x="104830093" fg:w="802607"/><text x="20.6431%" y="1215.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (802,607 samples, 0.16%)</title><rect x="20.3931%" y="1189" width="0.1561%" height="15" fill="rgb(228,149,22)" fg:x="104830093" fg:w="802607"/><text x="20.6431%" y="1199.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (802,607 samples, 0.16%)</title><rect x="20.3931%" y="1173" width="0.1561%" height="15" fill="rgb(243,54,13)" fg:x="104830093" fg:w="802607"/><text x="20.6431%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (802,607 samples, 0.16%)</title><rect x="20.3931%" y="1157" width="0.1561%" height="15" fill="rgb(243,180,28)" fg:x="104830093" fg:w="802607"/><text x="20.6431%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (802,607 samples, 0.16%)</title><rect x="20.3931%" y="1141" width="0.1561%" height="15" fill="rgb(208,167,24)" fg:x="104830093" fg:w="802607"/><text x="20.6431%" y="1151.50"></text></g><g><title>__aarch64_cas8_acq_rel (802,607 samples, 0.16%)</title><rect x="20.3931%" y="1125" width="0.1561%" height="15" fill="rgb(245,73,45)" fg:x="104830093" fg:w="802607"/><text x="20.6431%" y="1135.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::enter (3,236,753 samples, 0.63%)</title><rect x="20.3931%" y="1285" width="0.6297%" height="15" fill="rgb(237,203,48)" fg:x="104830093" fg:w="3236753"/><text x="20.6431%" y="1295.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (3,236,753 samples, 0.63%)</title><rect x="20.3931%" y="1269" width="0.6297%" height="15" fill="rgb(211,197,16)" fg:x="104830093" fg:w="3236753"/><text x="20.6431%" y="1279.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (3,236,753 samples, 0.63%)</title><rect x="20.3931%" y="1253" width="0.6297%" height="15" fill="rgb(243,99,51)" fg:x="104830093" fg:w="3236753"/><text x="20.6431%" y="1263.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (3,236,753 samples, 0.63%)</title><rect x="20.3931%" y="1237" width="0.6297%" height="15" fill="rgb(215,123,29)" fg:x="104830093" fg:w="3236753"/><text x="20.6431%" y="1247.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (2,434,146 samples, 0.47%)</title><rect x="20.5492%" y="1221" width="0.4735%" height="15" fill="rgb(239,186,37)" fg:x="105632700" fg:w="2434146"/><text x="20.7992%" y="1231.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (2,434,146 samples, 0.47%)</title><rect x="20.5492%" y="1205" width="0.4735%" height="15" fill="rgb(252,136,39)" fg:x="105632700" fg:w="2434146"/><text x="20.7992%" y="1215.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (1,862,891 samples, 0.36%)</title><rect x="20.6603%" y="1189" width="0.3624%" height="15" fill="rgb(223,213,32)" fg:x="106203955" fg:w="1862891"/><text x="20.9103%" y="1199.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (1,862,891 samples, 0.36%)</title><rect x="20.6603%" y="1173" width="0.3624%" height="15" fill="rgb(233,115,5)" fg:x="106203955" fg:w="1862891"/><text x="20.9103%" y="1183.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (1,862,891 samples, 0.36%)</title><rect x="20.6603%" y="1157" width="0.3624%" height="15" fill="rgb(207,226,44)" fg:x="106203955" fg:w="1862891"/><text x="20.9103%" y="1167.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::{{closure}} (1,862,891 samples, 0.36%)</title><rect x="20.6603%" y="1141" width="0.3624%" height="15" fill="rgb(208,126,0)" fg:x="106203955" fg:w="1862891"/><text x="20.9103%" y="1151.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::{{closure}} (1,862,891 samples, 0.36%)</title><rect x="20.6603%" y="1125" width="0.3624%" height="15" fill="rgb(244,66,21)" fg:x="106203955" fg:w="1862891"/><text x="20.9103%" y="1135.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (1,862,891 samples, 0.36%)</title><rect x="20.6603%" y="1109" width="0.3624%" height="15" fill="rgb(222,97,12)" fg:x="106203955" fg:w="1862891"/><text x="20.9103%" y="1119.50"></text></g><g><title>sharded_slab::Pack::from_packed (1,862,891 samples, 0.36%)</title><rect x="20.6603%" y="1093" width="0.3624%" height="15" fill="rgb(219,213,19)" fg:x="106203955" fg:w="1862891"/><text x="20.9103%" y="1103.50"></text></g><g><title>__aarch64_ldadd4_rel (584,568 samples, 0.11%)</title><rect x="21.0227%" y="1269" width="0.1137%" height="15" fill="rgb(252,169,30)" fg:x="108066846" fg:w="584568"/><text x="21.2727%" y="1279.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (61,580,888 samples, 11.98%)</title><rect x="9.3414%" y="1333" width="11.9796%" height="15" fill="rgb(206,32,51)" fg:x="48019214" fg:w="61580888"/><text x="9.5914%" y="1343.50">&lt;tracing::instrume..</text></g><g><title>tracing::span::Span::enter (4,770,009 samples, 0.93%)</title><rect x="20.3931%" y="1317" width="0.9279%" height="15" fill="rgb(250,172,42)" fg:x="104830093" fg:w="4770009"/><text x="20.6431%" y="1327.50"></text></g><g><title>tracing::span::Span::do_enter (4,770,009 samples, 0.93%)</title><rect x="20.3931%" y="1301" width="0.9279%" height="15" fill="rgb(209,34,43)" fg:x="104830093" fg:w="4770009"/><text x="20.6431%" y="1311.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::on_enter (1,533,256 samples, 0.30%)</title><rect x="21.0227%" y="1285" width="0.2983%" height="15" fill="rgb(223,11,35)" fg:x="108066846" fg:w="1533256"/><text x="21.2727%" y="1295.50"></text></g><g><title>std::sync::poison::rwlock::RwLock&lt;T&gt;::read (948,688 samples, 0.18%)</title><rect x="21.1365%" y="1269" width="0.1846%" height="15" fill="rgb(251,219,26)" fg:x="108651414" fg:w="948688"/><text x="21.3865%" y="1279.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (948,688 samples, 0.18%)</title><rect x="21.1365%" y="1253" width="0.1846%" height="15" fill="rgb(231,119,3)" fg:x="108651414" fg:w="948688"/><text x="21.3865%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (948,688 samples, 0.18%)</title><rect x="21.1365%" y="1237" width="0.1846%" height="15" fill="rgb(216,97,11)" fg:x="108651414" fg:w="948688"/><text x="21.3865%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (948,688 samples, 0.18%)</title><rect x="21.1365%" y="1221" width="0.1846%" height="15" fill="rgb(223,59,9)" fg:x="108651414" fg:w="948688"/><text x="21.3865%" y="1231.50"></text></g><g><title>__aarch64_cas4_acq (948,688 samples, 0.18%)</title><rect x="21.1365%" y="1205" width="0.1846%" height="15" fill="rgb(233,93,31)" fg:x="108651414" fg:w="948688"/><text x="21.3865%" y="1215.50"></text></g><g><title>&lt;tokio_rustls::common::Stream&lt;IO,C&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (482,339 samples, 0.09%)</title><rect x="22.0361%" y="1253" width="0.0938%" height="15" fill="rgb(239,81,33)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="1263.50"></text></g><g><title>tokio_rustls::common::Stream&lt;IO,C&gt;::write_io (482,339 samples, 0.09%)</title><rect x="22.0361%" y="1237" width="0.0938%" height="15" fill="rgb(213,120,34)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="1247.50"></text></g><g><title>rustls::conn::ConnectionCommon&lt;Data&gt;::write_tls (482,339 samples, 0.09%)</title><rect x="22.0361%" y="1221" width="0.0938%" height="15" fill="rgb(243,49,53)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="1231.50"></text></g><g><title>rustls::vecbuf::ChunkVecBuffer::write_to (482,339 samples, 0.09%)</title><rect x="22.0361%" y="1205" width="0.0938%" height="15" fill="rgb(247,216,33)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="1215.50"></text></g><g><title>&lt;tokio_rustls::common::SyncWriteAdapter&lt;T&gt; as std::io::Write&gt;::write_vectored (482,339 samples, 0.09%)</title><rect x="22.0361%" y="1189" width="0.0938%" height="15" fill="rgb(226,26,14)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="1199.50"></text></g><g><title>tokio_rustls::common::SyncWriteAdapter&lt;T&gt;::poll_with (482,339 samples, 0.09%)</title><rect x="22.0361%" y="1173" width="0.0938%" height="15" fill="rgb(215,49,53)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="1183.50"></text></g><g><title>&lt;tokio_rustls::common::SyncWriteAdapter&lt;T&gt; as std::io::Write&gt;::write_vectored::{{closure}} (482,339 samples, 0.09%)</title><rect x="22.0361%" y="1157" width="0.0938%" height="15" fill="rgb(245,162,40)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="1167.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (482,339 samples, 0.09%)</title><rect x="22.0361%" y="1141" width="0.0938%" height="15" fill="rgb(229,68,17)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="1151.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (482,339 samples, 0.09%)</title><rect x="22.0361%" y="1125" width="0.0938%" height="15" fill="rgb(213,182,10)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="1135.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (482,339 samples, 0.09%)</title><rect x="22.0361%" y="1109" width="0.0938%" height="15" fill="rgb(245,125,30)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="1119.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (482,339 samples, 0.09%)</title><rect x="22.0361%" y="1093" width="0.0938%" height="15" fill="rgb(232,202,2)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="1103.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (482,339 samples, 0.09%)</title><rect x="22.0361%" y="1077" width="0.0938%" height="15" fill="rgb(237,140,51)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="1087.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::{{closure}} (482,339 samples, 0.09%)</title><rect x="22.0361%" y="1061" width="0.0938%" height="15" fill="rgb(236,157,25)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="1071.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (482,339 samples, 0.09%)</title><rect x="22.0361%" y="1045" width="0.0938%" height="15" fill="rgb(219,209,0)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="1055.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (482,339 samples, 0.09%)</title><rect x="22.0361%" y="1029" width="0.0938%" height="15" fill="rgb(240,116,54)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="1039.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (482,339 samples, 0.09%)</title><rect x="22.0361%" y="1013" width="0.0938%" height="15" fill="rgb(216,10,36)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="1023.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::{{closure}} (482,339 samples, 0.09%)</title><rect x="22.0361%" y="997" width="0.0938%" height="15" fill="rgb(222,72,44)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="1007.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (482,339 samples, 0.09%)</title><rect x="22.0361%" y="981" width="0.0938%" height="15" fill="rgb(232,159,9)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="991.50"></text></g><g><title>std::sys::fs::unix::File::write_vectored (482,339 samples, 0.09%)</title><rect x="22.0361%" y="965" width="0.0938%" height="15" fill="rgb(210,39,32)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="975.50"></text></g><g><title>std::sys::fd::unix::FileDesc::write_vectored (482,339 samples, 0.09%)</title><rect x="22.0361%" y="949" width="0.0938%" height="15" fill="rgb(216,194,45)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="959.50"></text></g><g><title>__GI___writev (482,339 samples, 0.09%)</title><rect x="22.0361%" y="933" width="0.0938%" height="15" fill="rgb(218,18,35)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="943.50"></text></g><g><title>el0t_64_sync_handler (482,339 samples, 0.09%)</title><rect x="22.0361%" y="917" width="0.0938%" height="15" fill="rgb(207,83,51)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="927.50"></text></g><g><title>el0_svc (482,339 samples, 0.09%)</title><rect x="22.0361%" y="901" width="0.0938%" height="15" fill="rgb(225,63,43)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="911.50"></text></g><g><title>do_el0_svc (482,339 samples, 0.09%)</title><rect x="22.0361%" y="885" width="0.0938%" height="15" fill="rgb(207,57,36)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="895.50"></text></g><g><title>el0_svc_common.constprop.0 (482,339 samples, 0.09%)</title><rect x="22.0361%" y="869" width="0.0938%" height="15" fill="rgb(216,99,33)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="879.50"></text></g><g><title>invoke_syscall (482,339 samples, 0.09%)</title><rect x="22.0361%" y="853" width="0.0938%" height="15" fill="rgb(225,42,16)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="863.50"></text></g><g><title>__arm64_sys_writev (482,339 samples, 0.09%)</title><rect x="22.0361%" y="837" width="0.0938%" height="15" fill="rgb(220,201,45)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="847.50"></text></g><g><title>do_writev (482,339 samples, 0.09%)</title><rect x="22.0361%" y="821" width="0.0938%" height="15" fill="rgb(225,33,4)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="831.50"></text></g><g><title>vfs_writev (482,339 samples, 0.09%)</title><rect x="22.0361%" y="805" width="0.0938%" height="15" fill="rgb(224,33,50)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="815.50"></text></g><g><title>do_iter_write (482,339 samples, 0.09%)</title><rect x="22.0361%" y="789" width="0.0938%" height="15" fill="rgb(246,198,51)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="799.50"></text></g><g><title>do_iter_readv_writev (482,339 samples, 0.09%)</title><rect x="22.0361%" y="773" width="0.0938%" height="15" fill="rgb(205,22,4)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="783.50"></text></g><g><title>sock_write_iter (482,339 samples, 0.09%)</title><rect x="22.0361%" y="757" width="0.0938%" height="15" fill="rgb(206,3,8)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="767.50"></text></g><g><title>__sock_sendmsg (482,339 samples, 0.09%)</title><rect x="22.0361%" y="741" width="0.0938%" height="15" fill="rgb(251,23,15)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="751.50"></text></g><g><title>inet_sendmsg (482,339 samples, 0.09%)</title><rect x="22.0361%" y="725" width="0.0938%" height="15" fill="rgb(252,88,28)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="735.50"></text></g><g><title>tcp_sendmsg (482,339 samples, 0.09%)</title><rect x="22.0361%" y="709" width="0.0938%" height="15" fill="rgb(212,127,14)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="719.50"></text></g><g><title>tcp_sendmsg_locked (482,339 samples, 0.09%)</title><rect x="22.0361%" y="693" width="0.0938%" height="15" fill="rgb(247,145,37)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="703.50"></text></g><g><title>sk_page_frag_refill (482,339 samples, 0.09%)</title><rect x="22.0361%" y="677" width="0.0938%" height="15" fill="rgb(209,117,53)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="687.50"></text></g><g><title>skb_page_frag_refill (482,339 samples, 0.09%)</title><rect x="22.0361%" y="661" width="0.0938%" height="15" fill="rgb(212,90,42)" fg:x="113276072" fg:w="482339"/><text x="22.2861%" y="671.50"></text></g><g><title>&lt;rustls::msgs::codec::TlsListIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (930,609 samples, 0.18%)</title><rect x="22.1299%" y="1093" width="0.1810%" height="15" fill="rgb(218,164,37)" fg:x="113758411" fg:w="930609"/><text x="22.3799%" y="1103.50"></text></g><g><title>&lt;rustls::enums::CipherSuite as rustls::msgs::codec::Codec&gt;::read (930,609 samples, 0.18%)</title><rect x="22.1299%" y="1077" width="0.1810%" height="15" fill="rgb(246,65,34)" fg:x="113758411" fg:w="930609"/><text x="22.3799%" y="1087.50"></text></g><g><title>&lt;rustls::enums::CipherSuite as core::convert::From&lt;u16&gt;&gt;::from (930,609 samples, 0.18%)</title><rect x="22.1299%" y="1061" width="0.1810%" height="15" fill="rgb(231,100,33)" fg:x="113758411" fg:w="930609"/><text x="22.3799%" y="1071.50"></text></g><g><title>&lt;rustls::msgs::message::Message as core::convert::TryFrom&lt;rustls::msgs::message::inbound::InboundPlainMessage&gt;&gt;::try_from (1,465,162 samples, 0.29%)</title><rect x="22.1299%" y="1173" width="0.2850%" height="15" fill="rgb(228,126,14)" fg:x="113758411" fg:w="1465162"/><text x="22.3799%" y="1183.50"></text></g><g><title>rustls::msgs::message::MessagePayload::new (1,465,162 samples, 0.29%)</title><rect x="22.1299%" y="1157" width="0.2850%" height="15" fill="rgb(215,173,21)" fg:x="113758411" fg:w="1465162"/><text x="22.3799%" y="1167.50"></text></g><g><title>rustls::msgs::handshake::HandshakeMessagePayload::read_version (1,465,162 samples, 0.29%)</title><rect x="22.1299%" y="1141" width="0.2850%" height="15" fill="rgb(210,6,40)" fg:x="113758411" fg:w="1465162"/><text x="22.3799%" y="1151.50"></text></g><g><title>&lt;rustls::msgs::handshake::ClientHelloPayload as rustls::msgs::codec::Codec&gt;::read (1,465,162 samples, 0.29%)</title><rect x="22.1299%" y="1125" width="0.2850%" height="15" fill="rgb(212,48,18)" fg:x="113758411" fg:w="1465162"/><text x="22.3799%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as rustls::msgs::codec::Codec&gt;::read (1,465,162 samples, 0.29%)</title><rect x="22.1299%" y="1109" width="0.2850%" height="15" fill="rgb(230,214,11)" fg:x="113758411" fg:w="1465162"/><text x="22.3799%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (534,553 samples, 0.10%)</title><rect x="22.3110%" y="1093" width="0.1040%" height="15" fill="rgb(254,105,39)" fg:x="114689020" fg:w="534553"/><text x="22.5610%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (534,553 samples, 0.10%)</title><rect x="22.3110%" y="1077" width="0.1040%" height="15" fill="rgb(245,158,5)" fg:x="114689020" fg:w="534553"/><text x="22.5610%" y="1087.50"></text></g><g><title>rustls::server::tls13::client_hello::emit_certificate_verify_tls13 (411,177 samples, 0.08%)</title><rect x="22.4150%" y="1109" width="0.0800%" height="15" fill="rgb(249,208,11)" fg:x="115223573" fg:w="411177"/><text x="22.6650%" y="1119.50"></text></g><g><title>&lt;rustls::crypto::ring::sign::EcdsaSigningKey as rustls::crypto::signer::SigningKey&gt;::choose_scheme (411,177 samples, 0.08%)</title><rect x="22.4150%" y="1093" width="0.0800%" height="15" fill="rgb(210,39,28)" fg:x="115223573" fg:w="411177"/><text x="22.6650%" y="1103.50"></text></g><g><title>rustls::server::tls13::client_hello::emit_finished_tls13 (1,179,104 samples, 0.23%)</title><rect x="22.4950%" y="1109" width="0.2294%" height="15" fill="rgb(211,56,53)" fg:x="115634750" fg:w="1179104"/><text x="22.7450%" y="1119.50"></text></g><g><title>rustls::tls13::key_schedule::KeyScheduleHandshake::into_traffic_with_client_finished_pending (1,179,104 samples, 0.23%)</title><rect x="22.4950%" y="1093" width="0.2294%" height="15" fill="rgb(226,201,30)" fg:x="115634750" fg:w="1179104"/><text x="22.7450%" y="1103.50"></text></g><g><title>rustls::tls13::key_schedule::KeyScheduleBeforeFinished::new (1,179,104 samples, 0.23%)</title><rect x="22.4950%" y="1077" width="0.2294%" height="15" fill="rgb(239,101,34)" fg:x="115634750" fg:w="1179104"/><text x="22.7450%" y="1087.50"></text></g><g><title>fe_invert (1,154,149 samples, 0.22%)</title><rect x="22.7243%" y="965" width="0.2245%" height="15" fill="rgb(226,209,5)" fg:x="116813854" fg:w="1154149"/><text x="22.9743%" y="975.50"></text></g><g><title>fe_loose_invert (1,154,149 samples, 0.22%)</title><rect x="22.7243%" y="949" width="0.2245%" height="15" fill="rgb(250,105,47)" fg:x="116813854" fg:w="1154149"/><text x="22.9743%" y="959.50"></text></g><g><title>fe_sq_tt (1,154,149 samples, 0.22%)</title><rect x="22.7243%" y="933" width="0.2245%" height="15" fill="rgb(230,72,3)" fg:x="116813854" fg:w="1154149"/><text x="22.9743%" y="943.50"></text></g><g><title>fiat_25519_carry_square (1,154,149 samples, 0.22%)</title><rect x="22.7243%" y="917" width="0.2245%" height="15" fill="rgb(232,218,39)" fg:x="116813854" fg:w="1154149"/><text x="22.9743%" y="927.50"></text></g><g><title>fe_mul_tll (5,054,626 samples, 0.98%)</title><rect x="22.9489%" y="965" width="0.9833%" height="15" fill="rgb(248,166,6)" fg:x="117968003" fg:w="5054626"/><text x="23.1989%" y="975.50"></text></g><g><title>fe_mul_impl (5,054,626 samples, 0.98%)</title><rect x="22.9489%" y="949" width="0.9833%" height="15" fill="rgb(247,89,20)" fg:x="117968003" fg:w="5054626"/><text x="23.1989%" y="959.50"></text></g><g><title>fiat_25519_carry_mul (5,054,626 samples, 0.98%)</title><rect x="22.9489%" y="933" width="0.9833%" height="15" fill="rgb(248,130,54)" fg:x="117968003" fg:w="5054626"/><text x="23.1989%" y="943.50"></text></g><g><title>fe_mul_ttt (2,125,583 samples, 0.41%)</title><rect x="23.9322%" y="965" width="0.4135%" height="15" fill="rgb(234,196,4)" fg:x="123022629" fg:w="2125583"/><text x="24.1822%" y="975.50"></text></g><g><title>fe_mul_impl (2,125,583 samples, 0.41%)</title><rect x="23.9322%" y="949" width="0.4135%" height="15" fill="rgb(250,143,31)" fg:x="123022629" fg:w="2125583"/><text x="24.1822%" y="959.50"></text></g><g><title>fiat_25519_carry_mul (2,125,583 samples, 0.41%)</title><rect x="23.9322%" y="933" width="0.4135%" height="15" fill="rgb(211,110,34)" fg:x="123022629" fg:w="2125583"/><text x="24.1822%" y="943.50"></text></g><g><title>fe_sq_tl (1,362,964 samples, 0.27%)</title><rect x="24.3457%" y="965" width="0.2651%" height="15" fill="rgb(215,124,48)" fg:x="125148212" fg:w="1362964"/><text x="24.5957%" y="975.50"></text></g><g><title>fiat_25519_carry_square (1,362,964 samples, 0.27%)</title><rect x="24.3457%" y="949" width="0.2651%" height="15" fill="rgb(216,46,13)" fg:x="125148212" fg:w="1362964"/><text x="24.5957%" y="959.50"></text></g><g><title>&lt;rustls::crypto::ring::kx::KeyExchange as rustls::crypto::ActiveKeyExchange&gt;::complete (10,474,572 samples, 2.04%)</title><rect x="22.7243%" y="1077" width="2.0377%" height="15" fill="rgb(205,184,25)" fg:x="116813854" fg:w="10474572"/><text x="22.9743%" y="1087.50">&lt;..</text></g><g><title>rustls::crypto::ring::ring_shim::agree_ephemeral (10,474,572 samples, 2.04%)</title><rect x="22.7243%" y="1061" width="2.0377%" height="15" fill="rgb(228,1,10)" fg:x="116813854" fg:w="10474572"/><text x="22.9743%" y="1071.50">r..</text></g><g><title>ring::agreement::agree_ephemeral (10,474,572 samples, 2.04%)</title><rect x="22.7243%" y="1045" width="2.0377%" height="15" fill="rgb(213,116,27)" fg:x="116813854" fg:w="10474572"/><text x="22.9743%" y="1055.50">r..</text></g><g><title>ring::agreement::agree_ephemeral_ (10,474,572 samples, 2.04%)</title><rect x="22.7243%" y="1029" width="2.0377%" height="15" fill="rgb(241,95,50)" fg:x="116813854" fg:w="10474572"/><text x="22.9743%" y="1039.50">r..</text></g><g><title>ring::ec::curve25519::x25519::x25519_ecdh (10,474,572 samples, 2.04%)</title><rect x="22.7243%" y="1013" width="2.0377%" height="15" fill="rgb(238,48,32)" fg:x="116813854" fg:w="10474572"/><text x="22.9743%" y="1023.50">r..</text></g><g><title>ring::ec::curve25519::x25519::x25519_ecdh::scalar_mult (10,474,572 samples, 2.04%)</title><rect x="22.7243%" y="997" width="2.0377%" height="15" fill="rgb(235,113,49)" fg:x="116813854" fg:w="10474572"/><text x="22.9743%" y="1007.50">r..</text></g><g><title>ring_core_0_17_14__x25519_scalar_mult_generic_masked (10,474,572 samples, 2.04%)</title><rect x="22.7243%" y="981" width="2.0377%" height="15" fill="rgb(205,127,43)" fg:x="116813854" fg:w="10474572"/><text x="22.9743%" y="991.50">r..</text></g><g><title>fe_sub (777,250 samples, 0.15%)</title><rect x="24.6108%" y="965" width="0.1512%" height="15" fill="rgb(250,162,2)" fg:x="126511176" fg:w="777250"/><text x="24.8608%" y="975.50"></text></g><g><title>fiat_25519_sub (777,250 samples, 0.15%)</title><rect x="24.6108%" y="949" width="0.1512%" height="15" fill="rgb(220,13,41)" fg:x="126511176" fg:w="777250"/><text x="24.8608%" y="959.50"></text></g><g><title>&lt;rustls::server::hs::ExpectClientHello as rustls::common_state::State&lt;rustls::server::server_conn::ServerConnectionData&gt;&gt;::handle (13,422,632 samples, 2.61%)</title><rect x="22.4150%" y="1157" width="2.6112%" height="15" fill="rgb(249,221,25)" fg:x="115223573" fg:w="13422632"/><text x="22.6650%" y="1167.50">&lt;r..</text></g><g><title>rustls::server::hs::ExpectClientHello::with_certified_key (13,422,632 samples, 2.61%)</title><rect x="22.4150%" y="1141" width="2.6112%" height="15" fill="rgb(215,208,19)" fg:x="115223573" fg:w="13422632"/><text x="22.6650%" y="1151.50">ru..</text></g><g><title>rustls::server::tls13::client_hello::CompleteClientHelloHandling::handle_client_hello (13,422,632 samples, 2.61%)</title><rect x="22.4150%" y="1125" width="2.6112%" height="15" fill="rgb(236,175,2)" fg:x="115223573" fg:w="13422632"/><text x="22.6650%" y="1135.50">ru..</text></g><g><title>rustls::server::tls13::client_hello::emit_server_hello (11,832,351 samples, 2.30%)</title><rect x="22.7243%" y="1109" width="2.3018%" height="15" fill="rgb(241,52,2)" fg:x="116813854" fg:w="11832351"/><text x="22.9743%" y="1119.50">r..</text></g><g><title>rustls::crypto::SupportedKxGroup::start_and_complete (11,832,351 samples, 2.30%)</title><rect x="22.7243%" y="1093" width="2.3018%" height="15" fill="rgb(248,140,14)" fg:x="116813854" fg:w="11832351"/><text x="22.9743%" y="1103.50">r..</text></g><g><title>&lt;rustls::crypto::ring::kx::KxGroup as rustls::crypto::SupportedKxGroup&gt;::start (1,357,779 samples, 0.26%)</title><rect x="24.7620%" y="1077" width="0.2641%" height="15" fill="rgb(253,22,42)" fg:x="127288426" fg:w="1357779"/><text x="25.0120%" y="1087.50"></text></g><g><title>ring::agreement::EphemeralPrivateKey::compute_public_key (1,357,779 samples, 0.26%)</title><rect x="24.7620%" y="1061" width="0.2641%" height="15" fill="rgb(234,61,47)" fg:x="127288426" fg:w="1357779"/><text x="25.0120%" y="1071.50"></text></g><g><title>ring::ec::keys::Seed::compute_public_key (1,357,779 samples, 0.26%)</title><rect x="24.7620%" y="1045" width="0.2641%" height="15" fill="rgb(208,226,15)" fg:x="127288426" fg:w="1357779"/><text x="25.0120%" y="1055.50"></text></g><g><title>ring::ec::curve25519::x25519::x25519_public_from_private (1,357,779 samples, 0.26%)</title><rect x="24.7620%" y="1029" width="0.2641%" height="15" fill="rgb(217,221,4)" fg:x="127288426" fg:w="1357779"/><text x="25.0120%" y="1039.50"></text></g><g><title>ring_core_0_17_14__x25519_public_from_private_generic_masked (1,357,779 samples, 0.26%)</title><rect x="24.7620%" y="1013" width="0.2641%" height="15" fill="rgb(212,174,34)" fg:x="127288426" fg:w="1357779"/><text x="25.0120%" y="1023.50"></text></g><g><title>ring_core_0_17_14__x25519_ge_scalarmult_base (1,357,779 samples, 0.26%)</title><rect x="24.7620%" y="997" width="0.2641%" height="15" fill="rgb(253,83,4)" fg:x="127288426" fg:w="1357779"/><text x="25.0120%" y="1007.50"></text></g><g><title>x25519_ge_p1p1_to_p3 (1,357,779 samples, 0.26%)</title><rect x="24.7620%" y="981" width="0.2641%" height="15" fill="rgb(250,195,49)" fg:x="127288426" fg:w="1357779"/><text x="25.0120%" y="991.50"></text></g><g><title>fe_mul_tll (1,357,779 samples, 0.26%)</title><rect x="24.7620%" y="965" width="0.2641%" height="15" fill="rgb(241,192,25)" fg:x="127288426" fg:w="1357779"/><text x="25.0120%" y="975.50"></text></g><g><title>fe_mul_impl (1,357,779 samples, 0.26%)</title><rect x="24.7620%" y="949" width="0.2641%" height="15" fill="rgb(208,124,10)" fg:x="127288426" fg:w="1357779"/><text x="25.0120%" y="959.50"></text></g><g><title>fiat_25519_carry_mul (1,357,779 samples, 0.26%)</title><rect x="24.7620%" y="933" width="0.2641%" height="15" fill="rgb(222,33,0)" fg:x="127288426" fg:w="1357779"/><text x="25.0120%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rustls::server::server_conn::ServerConfig&gt;&gt; (591,083 samples, 0.11%)</title><rect x="25.0261%" y="1141" width="0.1150%" height="15" fill="rgb(234,209,28)" fg:x="128646205" fg:w="591083"/><text x="25.2761%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (591,083 samples, 0.11%)</title><rect x="25.0261%" y="1125" width="0.1150%" height="15" fill="rgb(224,11,23)" fg:x="128646205" fg:w="591083"/><text x="25.2761%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (591,083 samples, 0.11%)</title><rect x="25.0261%" y="1109" width="0.1150%" height="15" fill="rgb(232,99,1)" fg:x="128646205" fg:w="591083"/><text x="25.2761%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_sub (591,083 samples, 0.11%)</title><rect x="25.0261%" y="1093" width="0.1150%" height="15" fill="rgb(237,95,45)" fg:x="128646205" fg:w="591083"/><text x="25.2761%" y="1103.50"></text></g><g><title>__aarch64_ldadd8_rel (591,083 samples, 0.11%)</title><rect x="25.0261%" y="1077" width="0.1150%" height="15" fill="rgb(208,109,11)" fg:x="128646205" fg:w="591083"/><text x="25.2761%" y="1087.50"></text></g><g><title>rustls::conn::ConnectionCommon&lt;Data&gt;::process_new_packets (16,773,663 samples, 3.26%)</title><rect x="22.1299%" y="1221" width="3.2631%" height="15" fill="rgb(216,190,48)" fg:x="113758411" fg:w="16773663"/><text x="22.3799%" y="1231.50">rus..</text></g><g><title>rustls::conn::ConnectionCore&lt;Data&gt;::process_new_packets (16,773,663 samples, 3.26%)</title><rect x="22.1299%" y="1205" width="3.2631%" height="15" fill="rgb(251,171,36)" fg:x="113758411" fg:w="16773663"/><text x="22.3799%" y="1215.50">rus..</text></g><g><title>rustls::conn::ConnectionCore&lt;Data&gt;::process_msg (16,773,663 samples, 3.26%)</title><rect x="22.1299%" y="1189" width="3.2631%" height="15" fill="rgb(230,62,22)" fg:x="113758411" fg:w="16773663"/><text x="22.3799%" y="1199.50">rus..</text></g><g><title>rustls::common_state::CommonState::process_main_protocol (15,308,501 samples, 2.98%)</title><rect x="22.4150%" y="1173" width="2.9780%" height="15" fill="rgb(225,114,35)" fg:x="115223573" fg:w="15308501"/><text x="22.6650%" y="1183.50">rus..</text></g><g><title>&lt;rustls::server::tls13::ExpectFinished as rustls::common_state::State&lt;rustls::server::server_conn::ServerConnectionData&gt;&gt;::handle (1,885,869 samples, 0.37%)</title><rect x="25.0261%" y="1157" width="0.3669%" height="15" fill="rgb(215,118,42)" fg:x="128646205" fg:w="1885869"/><text x="25.2761%" y="1167.50"></text></g><g><title>rustls::server::tls13::ExpectFinished::emit_ticket (1,294,786 samples, 0.25%)</title><rect x="25.1411%" y="1141" width="0.2519%" height="15" fill="rgb(243,119,21)" fg:x="129237288" fg:w="1294786"/><text x="25.3911%" y="1151.50"></text></g><g><title>rustls::server::server_conn::ServerConfig::current_time (1,294,786 samples, 0.25%)</title><rect x="25.1411%" y="1125" width="0.2519%" height="15" fill="rgb(252,177,53)" fg:x="129237288" fg:w="1294786"/><text x="25.3911%" y="1135.50"></text></g><g><title>&lt;rustls::time_provider::DefaultTimeProvider as rustls::time_provider::TimeProvider&gt;::current_time (1,294,786 samples, 0.25%)</title><rect x="25.1411%" y="1109" width="0.2519%" height="15" fill="rgb(237,209,29)" fg:x="129237288" fg:w="1294786"/><text x="25.3911%" y="1119.50"></text></g><g><title>tokio_rustls::common::Stream&lt;IO,C&gt;::read_io (17,921,308 samples, 3.49%)</title><rect x="22.1299%" y="1237" width="3.4863%" height="15" fill="rgb(212,65,23)" fg:x="113758411" fg:w="17921308"/><text x="22.3799%" y="1247.50">tok..</text></g><g><title>rustls::conn::ConnectionCommon&lt;Data&gt;::read_tls (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="1221" width="0.2233%" height="15" fill="rgb(230,222,46)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="1231.50"></text></g><g><title>rustls::msgs::deframer::buffers::DeframerVecBuffer::read (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="1205" width="0.2233%" height="15" fill="rgb(215,135,32)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="1215.50"></text></g><g><title>&lt;tokio_rustls::common::SyncReadAdapter&lt;T&gt; as std::io::Read&gt;::read (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="1189" width="0.2233%" height="15" fill="rgb(246,101,22)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="1199.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="1173" width="0.2233%" height="15" fill="rgb(206,107,13)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="1183.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="1157" width="0.2233%" height="15" fill="rgb(250,100,44)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="1167.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="1141" width="0.2233%" height="15" fill="rgb(231,147,38)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="1151.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="1125" width="0.2233%" height="15" fill="rgb(229,8,40)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="1135.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="1109" width="0.2233%" height="15" fill="rgb(221,135,30)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="1119.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="1093" width="0.2233%" height="15" fill="rgb(249,193,18)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="1103.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="1077" width="0.2233%" height="15" fill="rgb(209,133,39)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="1087.50"></text></g><g><title>std::sys::net::connection::socket::TcpStream::read (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="1061" width="0.2233%" height="15" fill="rgb(232,100,14)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="1071.50"></text></g><g><title>std::sys::net::connection::socket::unix::Socket::read (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="1045" width="0.2233%" height="15" fill="rgb(224,185,1)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="1055.50"></text></g><g><title>std::sys::net::connection::socket::unix::Socket::recv_with_flags (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="1029" width="0.2233%" height="15" fill="rgb(223,139,8)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="1039.50"></text></g><g><title>__libc_recv (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="1013" width="0.2233%" height="15" fill="rgb(232,213,38)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="1023.50"></text></g><g><title>el0t_64_sync_handler (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="997" width="0.2233%" height="15" fill="rgb(207,94,22)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="1007.50"></text></g><g><title>el0_svc (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="981" width="0.2233%" height="15" fill="rgb(219,183,54)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="991.50"></text></g><g><title>do_el0_svc (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="965" width="0.2233%" height="15" fill="rgb(216,185,54)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="975.50"></text></g><g><title>el0_svc_common.constprop.0 (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="949" width="0.2233%" height="15" fill="rgb(254,217,39)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="959.50"></text></g><g><title>invoke_syscall (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="933" width="0.2233%" height="15" fill="rgb(240,178,23)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="943.50"></text></g><g><title>__arm64_sys_recvfrom (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="917" width="0.2233%" height="15" fill="rgb(218,11,47)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="927.50"></text></g><g><title>__sys_recvfrom (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="901" width="0.2233%" height="15" fill="rgb(218,51,51)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="911.50"></text></g><g><title>inet_recvmsg (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="885" width="0.2233%" height="15" fill="rgb(238,126,27)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="895.50"></text></g><g><title>tcp_recvmsg (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="869" width="0.2233%" height="15" fill="rgb(249,202,22)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="879.50"></text></g><g><title>tcp_recvmsg_locked (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="853" width="0.2233%" height="15" fill="rgb(254,195,49)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="863.50"></text></g><g><title>skb_attempt_defer_free (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="837" width="0.2233%" height="15" fill="rgb(208,123,14)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="847.50"></text></g><g><title>skb_release_data (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="821" width="0.2233%" height="15" fill="rgb(224,200,8)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="831.50"></text></g><g><title>skb_free_head (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="805" width="0.2233%" height="15" fill="rgb(217,61,36)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="815.50"></text></g><g><title>page_frag_free (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="789" width="0.2233%" height="15" fill="rgb(206,35,45)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="799.50"></text></g><g><title>free_unref_page_commit (1,147,645 samples, 0.22%)</title><rect x="25.3930%" y="773" width="0.2233%" height="15" fill="rgb(217,65,33)" fg:x="130532074" fg:w="1147645"/><text x="25.6430%" y="783.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (19,254,919 samples, 3.75%)</title><rect x="22.0361%" y="1301" width="3.7457%" height="15" fill="rgb(222,158,48)" fg:x="113276072" fg:w="19254919"/><text x="22.2861%" y="1311.50">&lt;tok..</text></g><g><title>&lt;tokio_rustls::Accept&lt;IO&gt; as core::future::future::Future&gt;::poll (19,254,919 samples, 3.75%)</title><rect x="22.0361%" y="1285" width="3.7457%" height="15" fill="rgb(254,2,54)" fg:x="113276072" fg:w="19254919"/><text x="22.2861%" y="1295.50">&lt;tok..</text></g><g><title>&lt;tokio_rustls::common::handshake::MidHandshake&lt;IS&gt; as core::future::future::Future&gt;::poll (19,254,919 samples, 3.75%)</title><rect x="22.0361%" y="1269" width="3.7457%" height="15" fill="rgb(250,143,38)" fg:x="113276072" fg:w="19254919"/><text x="22.2861%" y="1279.50">&lt;tok..</text></g><g><title>tokio_rustls::common::Stream&lt;IO,C&gt;::handshake (18,772,580 samples, 3.65%)</title><rect x="22.1299%" y="1253" width="3.6519%" height="15" fill="rgb(248,25,0)" fg:x="113758411" fg:w="18772580"/><text x="22.3799%" y="1263.50">toki..</text></g><g><title>tokio_rustls::common::Stream&lt;IO,C&gt;::write_io (851,272 samples, 0.17%)</title><rect x="25.6163%" y="1237" width="0.1656%" height="15" fill="rgb(206,152,27)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="1247.50"></text></g><g><title>rustls::conn::ConnectionCommon&lt;Data&gt;::write_tls (851,272 samples, 0.17%)</title><rect x="25.6163%" y="1221" width="0.1656%" height="15" fill="rgb(240,77,30)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="1231.50"></text></g><g><title>rustls::vecbuf::ChunkVecBuffer::write_to (851,272 samples, 0.17%)</title><rect x="25.6163%" y="1205" width="0.1656%" height="15" fill="rgb(231,5,3)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="1215.50"></text></g><g><title>&lt;tokio_rustls::common::SyncWriteAdapter&lt;T&gt; as std::io::Write&gt;::write_vectored (851,272 samples, 0.17%)</title><rect x="25.6163%" y="1189" width="0.1656%" height="15" fill="rgb(207,226,32)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="1199.50"></text></g><g><title>tokio_rustls::common::SyncWriteAdapter&lt;T&gt;::poll_with (851,272 samples, 0.17%)</title><rect x="25.6163%" y="1173" width="0.1656%" height="15" fill="rgb(222,207,47)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="1183.50"></text></g><g><title>&lt;tokio_rustls::common::SyncWriteAdapter&lt;T&gt; as std::io::Write&gt;::write_vectored::{{closure}} (851,272 samples, 0.17%)</title><rect x="25.6163%" y="1157" width="0.1656%" height="15" fill="rgb(229,115,45)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="1167.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (851,272 samples, 0.17%)</title><rect x="25.6163%" y="1141" width="0.1656%" height="15" fill="rgb(224,191,6)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="1151.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (851,272 samples, 0.17%)</title><rect x="25.6163%" y="1125" width="0.1656%" height="15" fill="rgb(230,227,24)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="1135.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (851,272 samples, 0.17%)</title><rect x="25.6163%" y="1109" width="0.1656%" height="15" fill="rgb(228,80,19)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="1119.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (851,272 samples, 0.17%)</title><rect x="25.6163%" y="1093" width="0.1656%" height="15" fill="rgb(247,229,0)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="1103.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (851,272 samples, 0.17%)</title><rect x="25.6163%" y="1077" width="0.1656%" height="15" fill="rgb(237,194,15)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="1087.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::{{closure}} (851,272 samples, 0.17%)</title><rect x="25.6163%" y="1061" width="0.1656%" height="15" fill="rgb(219,203,20)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="1071.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (851,272 samples, 0.17%)</title><rect x="25.6163%" y="1045" width="0.1656%" height="15" fill="rgb(234,128,8)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="1055.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (851,272 samples, 0.17%)</title><rect x="25.6163%" y="1029" width="0.1656%" height="15" fill="rgb(248,202,8)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="1039.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (851,272 samples, 0.17%)</title><rect x="25.6163%" y="1013" width="0.1656%" height="15" fill="rgb(206,104,37)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="1023.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::{{closure}} (851,272 samples, 0.17%)</title><rect x="25.6163%" y="997" width="0.1656%" height="15" fill="rgb(223,8,27)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="1007.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (851,272 samples, 0.17%)</title><rect x="25.6163%" y="981" width="0.1656%" height="15" fill="rgb(216,217,28)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="991.50"></text></g><g><title>std::sys::fs::unix::File::write_vectored (851,272 samples, 0.17%)</title><rect x="25.6163%" y="965" width="0.1656%" height="15" fill="rgb(249,199,1)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="975.50"></text></g><g><title>std::sys::fd::unix::FileDesc::write_vectored (851,272 samples, 0.17%)</title><rect x="25.6163%" y="949" width="0.1656%" height="15" fill="rgb(240,85,17)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="959.50"></text></g><g><title>__GI___writev (851,272 samples, 0.17%)</title><rect x="25.6163%" y="933" width="0.1656%" height="15" fill="rgb(206,108,45)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="943.50"></text></g><g><title>el0t_64_sync_handler (851,272 samples, 0.17%)</title><rect x="25.6163%" y="917" width="0.1656%" height="15" fill="rgb(245,210,41)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="927.50"></text></g><g><title>el0_svc (851,272 samples, 0.17%)</title><rect x="25.6163%" y="901" width="0.1656%" height="15" fill="rgb(206,13,37)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="911.50"></text></g><g><title>do_el0_svc (851,272 samples, 0.17%)</title><rect x="25.6163%" y="885" width="0.1656%" height="15" fill="rgb(250,61,18)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="895.50"></text></g><g><title>el0_svc_common.constprop.0 (851,272 samples, 0.17%)</title><rect x="25.6163%" y="869" width="0.1656%" height="15" fill="rgb(235,172,48)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="879.50"></text></g><g><title>invoke_syscall (851,272 samples, 0.17%)</title><rect x="25.6163%" y="853" width="0.1656%" height="15" fill="rgb(249,201,17)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="863.50"></text></g><g><title>__arm64_sys_writev (851,272 samples, 0.17%)</title><rect x="25.6163%" y="837" width="0.1656%" height="15" fill="rgb(219,208,6)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="847.50"></text></g><g><title>do_writev (851,272 samples, 0.17%)</title><rect x="25.6163%" y="821" width="0.1656%" height="15" fill="rgb(248,31,23)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="831.50"></text></g><g><title>vfs_writev (851,272 samples, 0.17%)</title><rect x="25.6163%" y="805" width="0.1656%" height="15" fill="rgb(245,15,42)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="815.50"></text></g><g><title>do_iter_write (851,272 samples, 0.17%)</title><rect x="25.6163%" y="789" width="0.1656%" height="15" fill="rgb(222,217,39)" fg:x="131679719" fg:w="851272"/><text x="25.8663%" y="799.50"></text></g><g><title>&lt;axum_server::tls_rustls::future::RustlsAcceptorFuture&lt;F,I,S&gt; as core::future::future::Future&gt;::poll (19,685,409 samples, 3.83%)</title><rect x="22.0361%" y="1317" width="3.8295%" height="15" fill="rgb(210,219,27)" fg:x="113276072" fg:w="19685409"/><text x="22.2861%" y="1327.50">&lt;axu..</text></g><g><title>tokio_rustls::TlsAcceptor::accept (430,490 samples, 0.08%)</title><rect x="25.7819%" y="1301" width="0.0837%" height="15" fill="rgb(252,166,36)" fg:x="132530991" fg:w="430490"/><text x="26.0319%" y="1311.50"></text></g><g><title>tokio_rustls::TlsAcceptor::accept_with (430,490 samples, 0.08%)</title><rect x="25.7819%" y="1285" width="0.0837%" height="15" fill="rgb(245,132,34)" fg:x="132530991" fg:w="430490"/><text x="26.0319%" y="1295.50"></text></g><g><title>rustls::server::server_conn::connection::ServerConnection::new (430,490 samples, 0.08%)</title><rect x="25.7819%" y="1269" width="0.0837%" height="15" fill="rgb(236,54,3)" fg:x="132530991" fg:w="430490"/><text x="26.0319%" y="1279.50"></text></g><g><title>rustls::server::server_conn::&lt;impl rustls::conn::ConnectionCore&lt;rustls::server::server_conn::ServerConnectionData&gt;&gt;::for_server (430,490 samples, 0.08%)</title><rect x="25.7819%" y="1253" width="0.0837%" height="15" fill="rgb(241,173,43)" fg:x="132530991" fg:w="430490"/><text x="26.0319%" y="1263.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_shutdown (447,702 samples, 0.09%)</title><rect x="26.2991%" y="1093" width="0.0871%" height="15" fill="rgb(215,190,9)" fg:x="135189626" fg:w="447702"/><text x="26.5491%" y="1103.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_shutdown (447,702 samples, 0.09%)</title><rect x="26.2991%" y="1077" width="0.0871%" height="15" fill="rgb(242,101,16)" fg:x="135189626" fg:w="447702"/><text x="26.5491%" y="1087.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::shutdown_std (447,702 samples, 0.09%)</title><rect x="26.2991%" y="1061" width="0.0871%" height="15" fill="rgb(223,190,21)" fg:x="135189626" fg:w="447702"/><text x="26.5491%" y="1071.50"></text></g><g><title>std::os::unix::net::stream::UnixStream::shutdown (447,702 samples, 0.09%)</title><rect x="26.2991%" y="1045" width="0.0871%" height="15" fill="rgb(215,228,25)" fg:x="135189626" fg:w="447702"/><text x="26.5491%" y="1055.50"></text></g><g><title>std::sys::net::connection::socket::unix::Socket::shutdown (447,702 samples, 0.09%)</title><rect x="26.2991%" y="1029" width="0.0871%" height="15" fill="rgb(225,36,22)" fg:x="135189626" fg:w="447702"/><text x="26.5491%" y="1039.50"></text></g><g><title>__GI_shutdown (447,702 samples, 0.09%)</title><rect x="26.2991%" y="1013" width="0.0871%" height="15" fill="rgb(251,106,46)" fg:x="135189626" fg:w="447702"/><text x="26.5491%" y="1023.50"></text></g><g><title>el0t_64_sync_handler (447,702 samples, 0.09%)</title><rect x="26.2991%" y="997" width="0.0871%" height="15" fill="rgb(208,90,1)" fg:x="135189626" fg:w="447702"/><text x="26.5491%" y="1007.50"></text></g><g><title>el0_svc (447,702 samples, 0.09%)</title><rect x="26.2991%" y="981" width="0.0871%" height="15" fill="rgb(243,10,4)" fg:x="135189626" fg:w="447702"/><text x="26.5491%" y="991.50"></text></g><g><title>do_el0_svc (447,702 samples, 0.09%)</title><rect x="26.2991%" y="965" width="0.0871%" height="15" fill="rgb(212,137,27)" fg:x="135189626" fg:w="447702"/><text x="26.5491%" y="975.50"></text></g><g><title>el0_svc_common.constprop.0 (447,702 samples, 0.09%)</title><rect x="26.2991%" y="949" width="0.0871%" height="15" fill="rgb(231,220,49)" fg:x="135189626" fg:w="447702"/><text x="26.5491%" y="959.50"></text></g><g><title>invoke_syscall (447,702 samples, 0.09%)</title><rect x="26.2991%" y="933" width="0.0871%" height="15" fill="rgb(237,96,20)" fg:x="135189626" fg:w="447702"/><text x="26.5491%" y="943.50"></text></g><g><title>__arm64_sys_shutdown (447,702 samples, 0.09%)</title><rect x="26.2991%" y="917" width="0.0871%" height="15" fill="rgb(239,229,30)" fg:x="135189626" fg:w="447702"/><text x="26.5491%" y="927.50"></text></g><g><title>__sys_shutdown (447,702 samples, 0.09%)</title><rect x="26.2991%" y="901" width="0.0871%" height="15" fill="rgb(219,65,33)" fg:x="135189626" fg:w="447702"/><text x="26.5491%" y="911.50"></text></g><g><title>security_socket_shutdown (447,702 samples, 0.09%)</title><rect x="26.2991%" y="885" width="0.0871%" height="15" fill="rgb(243,134,7)" fg:x="135189626" fg:w="447702"/><text x="26.5491%" y="895.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_shutdown (765,634 samples, 0.15%)</title><rect x="26.2991%" y="1173" width="0.1489%" height="15" fill="rgb(216,177,54)" fg:x="135189626" fg:w="765634"/><text x="26.5491%" y="1183.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Write&gt;::poll_shutdown (765,634 samples, 0.15%)</title><rect x="26.2991%" y="1157" width="0.1489%" height="15" fill="rgb(211,160,20)" fg:x="135189626" fg:w="765634"/><text x="26.5491%" y="1167.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Write&gt;::poll_shutdown (765,634 samples, 0.15%)</title><rect x="26.2991%" y="1141" width="0.1489%" height="15" fill="rgb(239,85,39)" fg:x="135189626" fg:w="765634"/><text x="26.5491%" y="1151.50"></text></g><g><title>&lt;tokio_rustls::server::TlsStream&lt;IO&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_shutdown (765,634 samples, 0.15%)</title><rect x="26.2991%" y="1125" width="0.1489%" height="15" fill="rgb(232,125,22)" fg:x="135189626" fg:w="765634"/><text x="26.5491%" y="1135.50"></text></g><g><title>&lt;tokio_rustls::common::Stream&lt;IO,C&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_shutdown (765,634 samples, 0.15%)</title><rect x="26.2991%" y="1109" width="0.1489%" height="15" fill="rgb(244,57,34)" fg:x="135189626" fg:w="765634"/><text x="26.5491%" y="1119.50"></text></g><g><title>tokio_rustls::common::Stream&lt;IO,C&gt;::write_io (317,932 samples, 0.06%)</title><rect x="26.3861%" y="1093" width="0.0618%" height="15" fill="rgb(214,203,32)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="1103.50"></text></g><g><title>rustls::conn::ConnectionCommon&lt;Data&gt;::write_tls (317,932 samples, 0.06%)</title><rect x="26.3861%" y="1077" width="0.0618%" height="15" fill="rgb(207,58,43)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="1087.50"></text></g><g><title>rustls::vecbuf::ChunkVecBuffer::write_to (317,932 samples, 0.06%)</title><rect x="26.3861%" y="1061" width="0.0618%" height="15" fill="rgb(215,193,15)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="1071.50"></text></g><g><title>&lt;tokio_rustls::common::SyncWriteAdapter&lt;T&gt; as std::io::Write&gt;::write_vectored (317,932 samples, 0.06%)</title><rect x="26.3861%" y="1045" width="0.0618%" height="15" fill="rgb(232,15,44)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="1055.50"></text></g><g><title>tokio_rustls::common::SyncWriteAdapter&lt;T&gt;::poll_with (317,932 samples, 0.06%)</title><rect x="26.3861%" y="1029" width="0.0618%" height="15" fill="rgb(212,3,48)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="1039.50"></text></g><g><title>&lt;tokio_rustls::common::SyncWriteAdapter&lt;T&gt; as std::io::Write&gt;::write_vectored::{{closure}} (317,932 samples, 0.06%)</title><rect x="26.3861%" y="1013" width="0.0618%" height="15" fill="rgb(218,128,7)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="1023.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (317,932 samples, 0.06%)</title><rect x="26.3861%" y="997" width="0.0618%" height="15" fill="rgb(226,216,39)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="1007.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (317,932 samples, 0.06%)</title><rect x="26.3861%" y="981" width="0.0618%" height="15" fill="rgb(243,47,51)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="991.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (317,932 samples, 0.06%)</title><rect x="26.3861%" y="965" width="0.0618%" height="15" fill="rgb(241,183,40)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="975.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (317,932 samples, 0.06%)</title><rect x="26.3861%" y="949" width="0.0618%" height="15" fill="rgb(231,217,32)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="959.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (317,932 samples, 0.06%)</title><rect x="26.3861%" y="933" width="0.0618%" height="15" fill="rgb(229,61,38)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="943.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::{{closure}} (317,932 samples, 0.06%)</title><rect x="26.3861%" y="917" width="0.0618%" height="15" fill="rgb(225,210,5)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="927.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (317,932 samples, 0.06%)</title><rect x="26.3861%" y="901" width="0.0618%" height="15" fill="rgb(231,79,45)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="911.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (317,932 samples, 0.06%)</title><rect x="26.3861%" y="885" width="0.0618%" height="15" fill="rgb(224,100,7)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="895.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (317,932 samples, 0.06%)</title><rect x="26.3861%" y="869" width="0.0618%" height="15" fill="rgb(241,198,18)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="879.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::{{closure}} (317,932 samples, 0.06%)</title><rect x="26.3861%" y="853" width="0.0618%" height="15" fill="rgb(252,97,53)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="863.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (317,932 samples, 0.06%)</title><rect x="26.3861%" y="837" width="0.0618%" height="15" fill="rgb(220,88,7)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="847.50"></text></g><g><title>std::sys::fs::unix::File::write_vectored (317,932 samples, 0.06%)</title><rect x="26.3861%" y="821" width="0.0618%" height="15" fill="rgb(213,176,14)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="831.50"></text></g><g><title>std::sys::fd::unix::FileDesc::write_vectored (317,932 samples, 0.06%)</title><rect x="26.3861%" y="805" width="0.0618%" height="15" fill="rgb(246,73,7)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="815.50"></text></g><g><title>__GI___writev (317,932 samples, 0.06%)</title><rect x="26.3861%" y="789" width="0.0618%" height="15" fill="rgb(245,64,36)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="799.50"></text></g><g><title>el0t_64_sync_handler (317,932 samples, 0.06%)</title><rect x="26.3861%" y="773" width="0.0618%" height="15" fill="rgb(245,80,10)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="783.50"></text></g><g><title>el0_svc (317,932 samples, 0.06%)</title><rect x="26.3861%" y="757" width="0.0618%" height="15" fill="rgb(232,107,50)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="767.50"></text></g><g><title>do_el0_svc (317,932 samples, 0.06%)</title><rect x="26.3861%" y="741" width="0.0618%" height="15" fill="rgb(253,3,0)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="751.50"></text></g><g><title>el0_svc_common.constprop.0 (317,932 samples, 0.06%)</title><rect x="26.3861%" y="725" width="0.0618%" height="15" fill="rgb(212,99,53)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="735.50"></text></g><g><title>invoke_syscall (317,932 samples, 0.06%)</title><rect x="26.3861%" y="709" width="0.0618%" height="15" fill="rgb(249,111,54)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="719.50"></text></g><g><title>__arm64_sys_writev (317,932 samples, 0.06%)</title><rect x="26.3861%" y="693" width="0.0618%" height="15" fill="rgb(249,55,30)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="703.50"></text></g><g><title>do_writev (317,932 samples, 0.06%)</title><rect x="26.3861%" y="677" width="0.0618%" height="15" fill="rgb(237,47,42)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="687.50"></text></g><g><title>vfs_writev (317,932 samples, 0.06%)</title><rect x="26.3861%" y="661" width="0.0618%" height="15" fill="rgb(211,20,18)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="671.50"></text></g><g><title>do_iter_write (317,932 samples, 0.06%)</title><rect x="26.3861%" y="645" width="0.0618%" height="15" fill="rgb(231,203,46)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="655.50"></text></g><g><title>do_iter_readv_writev (317,932 samples, 0.06%)</title><rect x="26.3861%" y="629" width="0.0618%" height="15" fill="rgb(237,142,3)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="639.50"></text></g><g><title>sock_write_iter (317,932 samples, 0.06%)</title><rect x="26.3861%" y="613" width="0.0618%" height="15" fill="rgb(241,107,1)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="623.50"></text></g><g><title>__sock_sendmsg (317,932 samples, 0.06%)</title><rect x="26.3861%" y="597" width="0.0618%" height="15" fill="rgb(229,83,13)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="607.50"></text></g><g><title>inet_sendmsg (317,932 samples, 0.06%)</title><rect x="26.3861%" y="581" width="0.0618%" height="15" fill="rgb(241,91,40)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="591.50"></text></g><g><title>tcp_sendmsg (317,932 samples, 0.06%)</title><rect x="26.3861%" y="565" width="0.0618%" height="15" fill="rgb(225,3,45)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="575.50"></text></g><g><title>tcp_sendmsg_locked (317,932 samples, 0.06%)</title><rect x="26.3861%" y="549" width="0.0618%" height="15" fill="rgb(244,223,14)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="559.50"></text></g><g><title>tcp_push (317,932 samples, 0.06%)</title><rect x="26.3861%" y="533" width="0.0618%" height="15" fill="rgb(224,124,37)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="543.50"></text></g><g><title>__tcp_push_pending_frames (317,932 samples, 0.06%)</title><rect x="26.3861%" y="517" width="0.0618%" height="15" fill="rgb(251,171,30)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="527.50"></text></g><g><title>tcp_write_xmit (317,932 samples, 0.06%)</title><rect x="26.3861%" y="501" width="0.0618%" height="15" fill="rgb(236,46,54)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="511.50"></text></g><g><title>__tcp_transmit_skb (317,932 samples, 0.06%)</title><rect x="26.3861%" y="485" width="0.0618%" height="15" fill="rgb(245,213,5)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="495.50"></text></g><g><title>ip_queue_xmit (317,932 samples, 0.06%)</title><rect x="26.3861%" y="469" width="0.0618%" height="15" fill="rgb(230,144,27)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="479.50"></text></g><g><title>__ip_queue_xmit (317,932 samples, 0.06%)</title><rect x="26.3861%" y="453" width="0.0618%" height="15" fill="rgb(220,86,6)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="463.50"></text></g><g><title>ip_output (317,932 samples, 0.06%)</title><rect x="26.3861%" y="437" width="0.0618%" height="15" fill="rgb(240,20,13)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="447.50"></text></g><g><title>ip_finish_output (317,932 samples, 0.06%)</title><rect x="26.3861%" y="421" width="0.0618%" height="15" fill="rgb(217,89,34)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="431.50"></text></g><g><title>__ip_finish_output (317,932 samples, 0.06%)</title><rect x="26.3861%" y="405" width="0.0618%" height="15" fill="rgb(229,13,5)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="415.50"></text></g><g><title>ip_finish_output2 (317,932 samples, 0.06%)</title><rect x="26.3861%" y="389" width="0.0618%" height="15" fill="rgb(244,67,35)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="399.50"></text></g><g><title>neigh_hh_output (317,932 samples, 0.06%)</title><rect x="26.3861%" y="373" width="0.0618%" height="15" fill="rgb(221,40,2)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="383.50"></text></g><g><title>__dev_queue_xmit (317,932 samples, 0.06%)</title><rect x="26.3861%" y="357" width="0.0618%" height="15" fill="rgb(237,157,21)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="367.50"></text></g><g><title>__dev_xmit_skb (317,932 samples, 0.06%)</title><rect x="26.3861%" y="341" width="0.0618%" height="15" fill="rgb(222,94,11)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="351.50"></text></g><g><title>sch_direct_xmit (317,932 samples, 0.06%)</title><rect x="26.3861%" y="325" width="0.0618%" height="15" fill="rgb(249,113,6)" fg:x="135637328" fg:w="317932"/><text x="26.6361%" y="335.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::is_done (910,700 samples, 0.18%)</title><rect x="26.4480%" y="1173" width="0.1772%" height="15" fill="rgb(238,137,36)" fg:x="135955260" fg:w="910700"/><text x="26.6980%" y="1183.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::wants_read_again (440,419 samples, 0.09%)</title><rect x="26.6252%" y="1157" width="0.0857%" height="15" fill="rgb(210,102,26)" fg:x="136865960" fg:w="440419"/><text x="26.8752%" y="1167.50"></text></g><g><title>&lt;bytes::buf::chain::Chain&lt;T,U&gt; as bytes::buf::buf_impl::Buf&gt;::advance (571,255 samples, 0.11%)</title><rect x="27.5716%" y="1077" width="0.1111%" height="15" fill="rgb(218,30,30)" fg:x="141731179" fg:w="571255"/><text x="27.8216%" y="1087.50"></text></g><g><title>&lt;hyper::proto::h1::io::WriteBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::advance (999,472 samples, 0.19%)</title><rect x="27.5716%" y="1109" width="0.1944%" height="15" fill="rgb(214,67,26)" fg:x="141731179" fg:w="999472"/><text x="27.8216%" y="1119.50"></text></g><g><title>&lt;hyper::common::buf::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::advance (999,472 samples, 0.19%)</title><rect x="27.5716%" y="1093" width="0.1944%" height="15" fill="rgb(251,9,53)" fg:x="141731179" fg:w="999472"/><text x="27.8216%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;hyper::proto::h1::encode::EncodedBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt; (428,217 samples, 0.08%)</title><rect x="27.6827%" y="1077" width="0.0833%" height="15" fill="rgb(228,204,25)" fg:x="142302434" fg:w="428217"/><text x="27.9327%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::encode::EncodedBuf&lt;bytes::bytes::Bytes&gt;&gt; (428,217 samples, 0.08%)</title><rect x="27.6827%" y="1061" width="0.0833%" height="15" fill="rgb(207,153,8)" fg:x="142302434" fg:w="428217"/><text x="27.9327%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::encode::BufKind&lt;bytes::bytes::Bytes&gt;&gt; (428,217 samples, 0.08%)</title><rect x="27.6827%" y="1045" width="0.0833%" height="15" fill="rgb(242,9,16)" fg:x="142302434" fg:w="428217"/><text x="27.9327%" y="1055.50"></text></g><g><title>bytes::bytes::shared_drop (428,217 samples, 0.08%)</title><rect x="27.6827%" y="1029" width="0.0833%" height="15" fill="rgb(217,211,10)" fg:x="142302434" fg:w="428217"/><text x="27.9327%" y="1039.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (428,217 samples, 0.08%)</title><rect x="27.6827%" y="1013" width="0.0833%" height="15" fill="rgb(219,228,52)" fg:x="142302434" fg:w="428217"/><text x="27.9327%" y="1023.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (428,217 samples, 0.08%)</title><rect x="27.6827%" y="997" width="0.0833%" height="15" fill="rgb(231,92,29)" fg:x="142302434" fg:w="428217"/><text x="27.9327%" y="1007.50"></text></g><g><title>bytes::bytes::release_shared (428,217 samples, 0.08%)</title><rect x="27.6827%" y="981" width="0.0833%" height="15" fill="rgb(232,8,23)" fg:x="142302434" fg:w="428217"/><text x="27.9327%" y="991.50"></text></g><g><title>core::mem::drop (428,217 samples, 0.08%)</title><rect x="27.6827%" y="965" width="0.0833%" height="15" fill="rgb(216,211,34)" fg:x="142302434" fg:w="428217"/><text x="27.9327%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (428,217 samples, 0.08%)</title><rect x="27.6827%" y="949" width="0.0833%" height="15" fill="rgb(236,151,0)" fg:x="142302434" fg:w="428217"/><text x="27.9327%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (428,217 samples, 0.08%)</title><rect x="27.6827%" y="933" width="0.0833%" height="15" fill="rgb(209,168,3)" fg:x="142302434" fg:w="428217"/><text x="27.9327%" y="943.50"></text></g><g><title>&lt;bytes::bytes::Shared as core::ops::drop::Drop&gt;::drop (428,217 samples, 0.08%)</title><rect x="27.6827%" y="917" width="0.0833%" height="15" fill="rgb(208,129,28)" fg:x="142302434" fg:w="428217"/><text x="27.9327%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (428,217 samples, 0.08%)</title><rect x="27.6827%" y="901" width="0.0833%" height="15" fill="rgb(229,78,22)" fg:x="142302434" fg:w="428217"/><text x="27.9327%" y="911.50"></text></g><g><title>__free (428,217 samples, 0.08%)</title><rect x="27.6827%" y="885" width="0.0833%" height="15" fill="rgb(228,187,13)" fg:x="142302434" fg:w="428217"/><text x="27.9327%" y="895.50"></text></g><g><title>_int_free (428,217 samples, 0.08%)</title><rect x="27.6827%" y="869" width="0.0833%" height="15" fill="rgb(240,119,24)" fg:x="142302434" fg:w="428217"/><text x="27.9327%" y="879.50"></text></g><g><title>&lt;hyper::proto::h1::io::WriteBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::chunks_vectored (1,177,156 samples, 0.23%)</title><rect x="27.7660%" y="1109" width="0.2290%" height="15" fill="rgb(209,194,42)" fg:x="142730651" fg:w="1177156"/><text x="28.0160%" y="1119.50"></text></g><g><title>&lt;hyper::common::buf::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::chunks_vectored (533,659 samples, 0.10%)</title><rect x="27.8912%" y="1093" width="0.1038%" height="15" fill="rgb(247,200,46)" fg:x="143374148" fg:w="533659"/><text x="28.1412%" y="1103.50"></text></g><g><title>&lt;hyper::proto::h1::encode::EncodedBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::chunks_vectored (533,659 samples, 0.10%)</title><rect x="27.8912%" y="1077" width="0.1038%" height="15" fill="rgb(218,76,16)" fg:x="143374148" fg:w="533659"/><text x="28.1412%" y="1087.50"></text></g><g><title>&lt;bytes::buf::chain::Chain&lt;T,U&gt; as bytes::buf::buf_impl::Buf&gt;::chunks_vectored (533,659 samples, 0.10%)</title><rect x="27.8912%" y="1061" width="0.1038%" height="15" fill="rgb(225,21,48)" fg:x="143374148" fg:w="533659"/><text x="28.1412%" y="1071.50"></text></g><g><title>&lt;bytes::buf::chain::Chain&lt;T,U&gt; as bytes::buf::buf_impl::Buf&gt;::chunks_vectored (533,659 samples, 0.10%)</title><rect x="27.8912%" y="1045" width="0.1038%" height="15" fill="rgb(239,223,50)" fg:x="143374148" fg:w="533659"/><text x="28.1412%" y="1055.50"></text></g><g><title>bytes::buf::buf_impl::Buf::chunks_vectored (533,659 samples, 0.10%)</title><rect x="27.8912%" y="1029" width="0.1038%" height="15" fill="rgb(244,45,21)" fg:x="143374148" fg:w="533659"/><text x="28.1412%" y="1039.50"></text></g><g><title>&lt;hyper::proto::h1::encode::ChunkSize as bytes::buf::buf_impl::Buf&gt;::chunk (533,659 samples, 0.10%)</title><rect x="27.8912%" y="1013" width="0.1038%" height="15" fill="rgb(232,33,43)" fg:x="143374148" fg:w="533659"/><text x="28.1412%" y="1023.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (533,659 samples, 0.10%)</title><rect x="27.8912%" y="997" width="0.1038%" height="15" fill="rgb(209,8,3)" fg:x="143374148" fg:w="533659"/><text x="28.1412%" y="1007.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (533,659 samples, 0.10%)</title><rect x="27.8912%" y="981" width="0.1038%" height="15" fill="rgb(214,25,53)" fg:x="143374148" fg:w="533659"/><text x="28.1412%" y="991.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (533,659 samples, 0.10%)</title><rect x="27.8912%" y="965" width="0.1038%" height="15" fill="rgb(254,186,54)" fg:x="143374148" fg:w="533659"/><text x="28.1412%" y="975.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (533,659 samples, 0.10%)</title><rect x="27.8912%" y="949" width="0.1038%" height="15" fill="rgb(208,174,49)" fg:x="143374148" fg:w="533659"/><text x="28.1412%" y="959.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Write&gt;::poll_flush (1,198,656 samples, 0.23%)</title><rect x="27.9950%" y="1109" width="0.2332%" height="15" fill="rgb(233,191,51)" fg:x="143907807" fg:w="1198656"/><text x="28.2450%" y="1119.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Write&gt;::poll_flush (1,198,656 samples, 0.23%)</title><rect x="27.9950%" y="1093" width="0.2332%" height="15" fill="rgb(222,134,10)" fg:x="143907807" fg:w="1198656"/><text x="28.2450%" y="1103.50"></text></g><g><title>&lt;tokio_rustls::server::TlsStream&lt;IO&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (1,198,656 samples, 0.23%)</title><rect x="27.9950%" y="1077" width="0.2332%" height="15" fill="rgb(230,226,20)" fg:x="143907807" fg:w="1198656"/><text x="28.2450%" y="1087.50"></text></g><g><title>&lt;tokio_rustls::common::Stream&lt;IO,C&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (1,198,656 samples, 0.23%)</title><rect x="27.9950%" y="1061" width="0.2332%" height="15" fill="rgb(251,111,25)" fg:x="143907807" fg:w="1198656"/><text x="28.2450%" y="1071.50"></text></g><g><title>&lt;rustls::conn::ConnectionCommon&lt;T&gt; as rustls::conn::connection::PlaintextSink&gt;::flush (1,198,656 samples, 0.23%)</title><rect x="27.9950%" y="1045" width="0.2332%" height="15" fill="rgb(224,40,46)" fg:x="143907807" fg:w="1198656"/><text x="28.2450%" y="1055.50"></text></g><g><title>rustls::common_state::CommonState::queue_tls_message (1,738,366 samples, 0.34%)</title><rect x="28.6185%" y="997" width="0.3382%" height="15" fill="rgb(236,108,47)" fg:x="147112892" fg:w="1738366"/><text x="28.8685%" y="1007.50"></text></g><g><title>rustls::msgs::message::outbound::OutboundOpaqueMessage::encode (1,738,366 samples, 0.34%)</title><rect x="28.6185%" y="981" width="0.3382%" height="15" fill="rgb(234,93,0)" fg:x="147112892" fg:w="1738366"/><text x="28.8685%" y="991.50"></text></g><g><title>&lt;rustls::crypto::ring::tls13::Tls13MessageEncrypter as rustls::crypto::cipher::MessageEncrypter&gt;::encrypt (482,878 samples, 0.09%)</title><rect x="28.9567%" y="981" width="0.0939%" height="15" fill="rgb(224,213,32)" fg:x="148851258" fg:w="482878"/><text x="29.2067%" y="991.50"></text></g><g><title>ring::aead::less_safe_key::LessSafeKey::seal_in_place_append_tag (482,878 samples, 0.09%)</title><rect x="28.9567%" y="965" width="0.0939%" height="15" fill="rgb(251,11,48)" fg:x="148851258" fg:w="482878"/><text x="29.2067%" y="975.50"></text></g><g><title>ring::aead::less_safe_key::LessSafeKey::seal_in_place_separate_tag (482,878 samples, 0.09%)</title><rect x="28.9567%" y="949" width="0.0939%" height="15" fill="rgb(236,173,5)" fg:x="148851258" fg:w="482878"/><text x="29.2067%" y="959.50"></text></g><g><title>ring::aead::algorithm::Algorithm::seal (482,878 samples, 0.09%)</title><rect x="28.9567%" y="933" width="0.0939%" height="15" fill="rgb(230,95,12)" fg:x="148851258" fg:w="482878"/><text x="29.2067%" y="943.50"></text></g><g><title>ring::aead::algorithm::aes_gcm_seal (482,878 samples, 0.09%)</title><rect x="28.9567%" y="917" width="0.0939%" height="15" fill="rgb(232,209,1)" fg:x="148851258" fg:w="482878"/><text x="29.2067%" y="927.50"></text></g><g><title>rustls::common_state::CommonState::send_single_fragment (2,798,589 samples, 0.54%)</title><rect x="28.6185%" y="1013" width="0.5444%" height="15" fill="rgb(232,6,1)" fg:x="147112892" fg:w="2798589"/><text x="28.8685%" y="1023.50"></text></g><g><title>rustls::record_layer::RecordLayer::encrypt_outgoing (1,060,223 samples, 0.21%)</title><rect x="28.9567%" y="997" width="0.2063%" height="15" fill="rgb(210,224,50)" fg:x="148851258" fg:w="1060223"/><text x="29.2067%" y="1007.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (577,345 samples, 0.11%)</title><rect x="29.0507%" y="981" width="0.1123%" height="15" fill="rgb(228,127,35)" fg:x="149334136" fg:w="577345"/><text x="29.3007%" y="991.50"></text></g><g><title>rustls::msgs::message::outbound::OutboundChunks::len (1,862,891 samples, 0.36%)</title><rect x="29.1630%" y="1013" width="0.3624%" height="15" fill="rgb(245,102,45)" fg:x="149911481" fg:w="1862891"/><text x="29.4130%" y="1023.50"></text></g><g><title>&lt;rustls::conn::ConnectionCommon&lt;T&gt; as rustls::conn::connection::PlaintextSink&gt;::write_vectored (7,304,848 samples, 1.42%)</title><rect x="28.2282%" y="1045" width="1.4210%" height="15" fill="rgb(214,1,49)" fg:x="145106463" fg:w="7304848"/><text x="28.4782%" y="1055.50"></text></g><g><title>rustls::common_state::CommonState::send_appdata_encrypt (6,171,579 samples, 1.20%)</title><rect x="28.4487%" y="1029" width="1.2006%" height="15" fill="rgb(226,163,40)" fg:x="146239732" fg:w="6171579"/><text x="28.6987%" y="1039.50"></text></g><g><title>rustls::vecbuf::ChunkVecBuffer::apply_limit (636,939 samples, 0.12%)</title><rect x="29.5254%" y="1013" width="0.1239%" height="15" fill="rgb(239,212,28)" fg:x="151774372" fg:w="636939"/><text x="29.7754%" y="1023.50"></text></g><g><title>rustls::vecbuf::ChunkVecBuffer::len (636,939 samples, 0.12%)</title><rect x="29.5254%" y="997" width="0.1239%" height="15" fill="rgb(220,20,13)" fg:x="151774372" fg:w="636939"/><text x="29.7754%" y="1007.50"></text></g><g><title>__arm64_sys_writev (383,735 samples, 0.07%)</title><rect x="29.8582%" y="661" width="0.0746%" height="15" fill="rgb(210,164,35)" fg:x="153485537" fg:w="383735"/><text x="30.1082%" y="671.50"></text></g><g><title>lock_sock_nested (465,657 samples, 0.09%)</title><rect x="30.2702%" y="501" width="0.0906%" height="15" fill="rgb(248,109,41)" fg:x="155603266" fg:w="465657"/><text x="30.5202%" y="511.50"></text></g><g><title>sk_page_frag_refill (1,738,366 samples, 0.34%)</title><rect x="30.8378%" y="485" width="0.3382%" height="15" fill="rgb(238,23,50)" fg:x="158521118" fg:w="1738366"/><text x="31.0878%" y="495.50"></text></g><g><title>skb_page_frag_refill (1,738,366 samples, 0.34%)</title><rect x="30.8378%" y="469" width="0.3382%" height="15" fill="rgb(211,48,49)" fg:x="158521118" fg:w="1738366"/><text x="31.0878%" y="479.50"></text></g><g><title>__ip_queue_xmit (372,168 samples, 0.07%)</title><rect x="31.3674%" y="421" width="0.0724%" height="15" fill="rgb(223,36,21)" fg:x="161243224" fg:w="372168"/><text x="31.6174%" y="431.50"></text></g><g><title>__skb_clone (493,416 samples, 0.10%)</title><rect x="31.4398%" y="421" width="0.0960%" height="15" fill="rgb(207,123,46)" fg:x="161615392" fg:w="493416"/><text x="31.6898%" y="431.50"></text></g><g><title>__ip_local_out (715,015 samples, 0.14%)</title><rect x="31.5358%" y="405" width="0.1391%" height="15" fill="rgb(240,218,32)" fg:x="162108808" fg:w="715015"/><text x="31.7858%" y="415.50"></text></g><g><title>__qdisc_run (578,318 samples, 0.11%)</title><rect x="32.2833%" y="277" width="0.1125%" height="15" fill="rgb(252,5,43)" fg:x="165951389" fg:w="578318"/><text x="32.5333%" y="287.50"></text></g><g><title>dequeue_skb (578,318 samples, 0.11%)</title><rect x="32.2833%" y="261" width="0.1125%" height="15" fill="rgb(252,84,19)" fg:x="165951389" fg:w="578318"/><text x="32.5333%" y="271.50"></text></g><g><title>__dev_xmit_skb (7,907,549 samples, 1.54%)</title><rect x="31.9995%" y="293" width="1.5383%" height="15" fill="rgb(243,152,39)" fg:x="164492800" fg:w="7907549"/><text x="32.2495%" y="303.50"></text></g><g><title>sch_direct_xmit (5,870,642 samples, 1.14%)</title><rect x="32.3958%" y="277" width="1.1420%" height="15" fill="rgb(234,160,15)" fg:x="166529707" fg:w="5870642"/><text x="32.6458%" y="287.50"></text></g><g><title>dev_hard_start_xmit (4,132,276 samples, 0.80%)</title><rect x="32.7340%" y="261" width="0.8039%" height="15" fill="rgb(237,34,20)" fg:x="168268073" fg:w="4132276"/><text x="32.9840%" y="271.50"></text></g><g><title>ena_start_xmit (3,439,984 samples, 0.67%)</title><rect x="32.8686%" y="245" width="0.6692%" height="15" fill="rgb(229,97,13)" fg:x="168960365" fg:w="3439984"/><text x="33.1186%" y="255.50"></text></g><g><title>ena_xmit_common (1,073,132 samples, 0.21%)</title><rect x="33.3291%" y="229" width="0.2088%" height="15" fill="rgb(234,71,50)" fg:x="171327217" fg:w="1073132"/><text x="33.5791%" y="239.50"></text></g><g><title>ena_com_prepare_tx (1,073,132 samples, 0.21%)</title><rect x="33.3291%" y="213" width="0.2088%" height="15" fill="rgb(253,155,4)" fg:x="171327217" fg:w="1073132"/><text x="33.5791%" y="223.50"></text></g><g><title>ena_com_close_bounce_buffer (599,099 samples, 0.12%)</title><rect x="33.4213%" y="197" width="0.1165%" height="15" fill="rgb(222,185,37)" fg:x="171801250" fg:w="599099"/><text x="33.6713%" y="207.50"></text></g><g><title>__local_bh_enable_ip (639,733 samples, 0.12%)</title><rect x="33.5378%" y="293" width="0.1245%" height="15" fill="rgb(251,177,13)" fg:x="172400349" fg:w="639733"/><text x="33.7878%" y="303.50"></text></g><g><title>do_softirq (639,733 samples, 0.12%)</title><rect x="33.5378%" y="277" width="0.1245%" height="15" fill="rgb(250,179,40)" fg:x="172400349" fg:w="639733"/><text x="33.7878%" y="287.50"></text></g><g><title>do_softirq_own_stack (639,733 samples, 0.12%)</title><rect x="33.5378%" y="261" width="0.1245%" height="15" fill="rgb(242,44,2)" fg:x="172400349" fg:w="639733"/><text x="33.7878%" y="271.50"></text></g><g><title>call_on_irq_stack (639,733 samples, 0.12%)</title><rect x="33.5378%" y="245" width="0.1245%" height="15" fill="rgb(216,177,13)" fg:x="172400349" fg:w="639733"/><text x="33.7878%" y="255.50"></text></g><g><title>____do_softirq (639,733 samples, 0.12%)</title><rect x="33.5378%" y="229" width="0.1245%" height="15" fill="rgb(216,106,43)" fg:x="172400349" fg:w="639733"/><text x="33.7878%" y="239.50"></text></g><g><title>__softirqentry_text_start (639,733 samples, 0.12%)</title><rect x="33.5378%" y="213" width="0.1245%" height="15" fill="rgb(216,183,2)" fg:x="172400349" fg:w="639733"/><text x="33.7878%" y="223.50"></text></g><g><title>handle_softirqs (639,733 samples, 0.12%)</title><rect x="33.5378%" y="197" width="0.1245%" height="15" fill="rgb(249,75,3)" fg:x="172400349" fg:w="639733"/><text x="33.7878%" y="207.50"></text></g><g><title>net_rx_action (639,733 samples, 0.12%)</title><rect x="33.5378%" y="181" width="0.1245%" height="15" fill="rgb(219,67,39)" fg:x="172400349" fg:w="639733"/><text x="33.7878%" y="191.50"></text></g><g><title>__napi_poll (639,733 samples, 0.12%)</title><rect x="33.5378%" y="165" width="0.1245%" height="15" fill="rgb(253,228,2)" fg:x="172400349" fg:w="639733"/><text x="33.7878%" y="175.50"></text></g><g><title>ena_io_poll (639,733 samples, 0.12%)</title><rect x="33.5378%" y="149" width="0.1245%" height="15" fill="rgb(235,138,27)" fg:x="172400349" fg:w="639733"/><text x="33.7878%" y="159.50"></text></g><g><title>ena_clean_tx_irq (639,733 samples, 0.12%)</title><rect x="33.5378%" y="133" width="0.1245%" height="15" fill="rgb(236,97,51)" fg:x="172400349" fg:w="639733"/><text x="33.7878%" y="143.50"></text></g><g><title>consume_skb (639,733 samples, 0.12%)</title><rect x="33.5378%" y="117" width="0.1245%" height="15" fill="rgb(240,80,30)" fg:x="172400349" fg:w="639733"/><text x="33.7878%" y="127.50"></text></g><g><title>skb_release_data (639,733 samples, 0.12%)</title><rect x="33.5378%" y="101" width="0.1245%" height="15" fill="rgb(230,178,19)" fg:x="172400349" fg:w="639733"/><text x="33.7878%" y="111.50"></text></g><g><title>__ip_finish_output (10,559,683 samples, 2.05%)</title><rect x="31.6749%" y="357" width="2.0542%" height="15" fill="rgb(210,190,27)" fg:x="162823823" fg:w="10559683"/><text x="31.9249%" y="367.50">_..</text></g><g><title>ip_finish_output2 (10,559,683 samples, 2.05%)</title><rect x="31.6749%" y="341" width="2.0542%" height="15" fill="rgb(222,107,31)" fg:x="162823823" fg:w="10559683"/><text x="31.9249%" y="351.50">i..</text></g><g><title>neigh_hh_output (8,890,706 samples, 1.73%)</title><rect x="31.9995%" y="325" width="1.7295%" height="15" fill="rgb(216,127,34)" fg:x="164492800" fg:w="8890706"/><text x="32.2495%" y="335.50"></text></g><g><title>__dev_queue_xmit (8,890,706 samples, 1.73%)</title><rect x="31.9995%" y="309" width="1.7295%" height="15" fill="rgb(234,116,52)" fg:x="164492800" fg:w="8890706"/><text x="32.2495%" y="319.50"></text></g><g><title>sch_direct_xmit (343,424 samples, 0.07%)</title><rect x="33.6623%" y="293" width="0.0668%" height="15" fill="rgb(222,124,15)" fg:x="173040082" fg:w="343424"/><text x="33.9123%" y="303.50"></text></g><g><title>ip_finish_output (11,241,684 samples, 2.19%)</title><rect x="31.6749%" y="373" width="2.1869%" height="15" fill="rgb(231,179,28)" fg:x="162823823" fg:w="11241684"/><text x="31.9249%" y="383.50">i..</text></g><g><title>ip_skb_dst_mtu (682,001 samples, 0.13%)</title><rect x="33.7291%" y="357" width="0.1327%" height="15" fill="rgb(226,93,45)" fg:x="173383506" fg:w="682001"/><text x="33.9791%" y="367.50"></text></g><g><title>el1h_64_irq (682,001 samples, 0.13%)</title><rect x="33.7291%" y="341" width="0.1327%" height="15" fill="rgb(215,8,51)" fg:x="173383506" fg:w="682001"/><text x="33.9791%" y="351.50"></text></g><g><title>el1h_64_irq_handler (682,001 samples, 0.13%)</title><rect x="33.7291%" y="325" width="0.1327%" height="15" fill="rgb(223,106,5)" fg:x="173383506" fg:w="682001"/><text x="33.9791%" y="335.50"></text></g><g><title>el1_interrupt (682,001 samples, 0.13%)</title><rect x="33.7291%" y="309" width="0.1327%" height="15" fill="rgb(250,191,5)" fg:x="173383506" fg:w="682001"/><text x="33.9791%" y="319.50"></text></g><g><title>irq_exit_rcu (682,001 samples, 0.13%)</title><rect x="33.7291%" y="293" width="0.1327%" height="15" fill="rgb(242,132,44)" fg:x="173383506" fg:w="682001"/><text x="33.9791%" y="303.50"></text></g><g><title>__irq_exit_rcu (682,001 samples, 0.13%)</title><rect x="33.7291%" y="277" width="0.1327%" height="15" fill="rgb(251,152,29)" fg:x="173383506" fg:w="682001"/><text x="33.9791%" y="287.50"></text></g><g><title>do_softirq_own_stack (682,001 samples, 0.13%)</title><rect x="33.7291%" y="261" width="0.1327%" height="15" fill="rgb(218,179,5)" fg:x="173383506" fg:w="682001"/><text x="33.9791%" y="271.50"></text></g><g><title>call_on_irq_stack (682,001 samples, 0.13%)</title><rect x="33.7291%" y="245" width="0.1327%" height="15" fill="rgb(227,67,19)" fg:x="173383506" fg:w="682001"/><text x="33.9791%" y="255.50"></text></g><g><title>____do_softirq (682,001 samples, 0.13%)</title><rect x="33.7291%" y="229" width="0.1327%" height="15" fill="rgb(233,119,31)" fg:x="173383506" fg:w="682001"/><text x="33.9791%" y="239.50"></text></g><g><title>__softirqentry_text_start (682,001 samples, 0.13%)</title><rect x="33.7291%" y="213" width="0.1327%" height="15" fill="rgb(241,120,22)" fg:x="173383506" fg:w="682001"/><text x="33.9791%" y="223.50"></text></g><g><title>handle_softirqs (682,001 samples, 0.13%)</title><rect x="33.7291%" y="197" width="0.1327%" height="15" fill="rgb(224,102,30)" fg:x="173383506" fg:w="682001"/><text x="33.9791%" y="207.50"></text></g><g><title>net_rx_action (682,001 samples, 0.13%)</title><rect x="33.7291%" y="181" width="0.1327%" height="15" fill="rgb(210,164,37)" fg:x="173383506" fg:w="682001"/><text x="33.9791%" y="191.50"></text></g><g><title>__napi_poll (682,001 samples, 0.13%)</title><rect x="33.7291%" y="165" width="0.1327%" height="15" fill="rgb(226,191,16)" fg:x="173383506" fg:w="682001"/><text x="33.9791%" y="175.50"></text></g><g><title>ena_io_poll (682,001 samples, 0.13%)</title><rect x="33.7291%" y="149" width="0.1327%" height="15" fill="rgb(214,40,45)" fg:x="173383506" fg:w="682001"/><text x="33.9791%" y="159.50"></text></g><g><title>ena_clean_rx_irq (682,001 samples, 0.13%)</title><rect x="33.7291%" y="133" width="0.1327%" height="15" fill="rgb(244,29,26)" fg:x="173383506" fg:w="682001"/><text x="33.9791%" y="143.50"></text></g><g><title>ip_output (11,710,013 samples, 2.28%)</title><rect x="31.6749%" y="389" width="2.2780%" height="15" fill="rgb(216,16,5)" fg:x="162823823" fg:w="11710013"/><text x="31.9249%" y="399.50">i..</text></g><g><title>nf_hook_slow (468,329 samples, 0.09%)</title><rect x="33.8618%" y="373" width="0.0911%" height="15" fill="rgb(249,76,35)" fg:x="174065507" fg:w="468329"/><text x="34.1118%" y="383.50"></text></g><g><title>__tcp_transmit_skb (14,342,431 samples, 2.79%)</title><rect x="31.2435%" y="437" width="2.7901%" height="15" fill="rgb(207,11,44)" fg:x="160606543" fg:w="14342431"/><text x="31.4935%" y="447.50">__..</text></g><g><title>ip_queue_xmit (12,840,166 samples, 2.50%)</title><rect x="31.5358%" y="421" width="2.4979%" height="15" fill="rgb(228,190,49)" fg:x="162108808" fg:w="12840166"/><text x="31.7858%" y="431.50">ip..</text></g><g><title>__ip_queue_xmit (12,125,151 samples, 2.36%)</title><rect x="31.6749%" y="405" width="2.3588%" height="15" fill="rgb(214,173,12)" fg:x="162823823" fg:w="12125151"/><text x="31.9249%" y="415.50">_..</text></g><g><title>ip_send_check (415,138 samples, 0.08%)</title><rect x="33.9529%" y="389" width="0.0808%" height="15" fill="rgb(218,26,35)" fg:x="174533836" fg:w="415138"/><text x="34.2029%" y="399.50"></text></g><g><title>tcp_check_space (758,411 samples, 0.15%)</title><rect x="34.2381%" y="421" width="0.1475%" height="15" fill="rgb(220,200,19)" fg:x="176000003" fg:w="758411"/><text x="34.4881%" y="431.50"></text></g><g><title>tcp_event_new_data_sent (2,332,445 samples, 0.45%)</title><rect x="34.0336%" y="437" width="0.4537%" height="15" fill="rgb(239,95,49)" fg:x="174948974" fg:w="2332445"/><text x="34.2836%" y="447.50"></text></g><g><title>tcp_rearm_rto (523,005 samples, 0.10%)</title><rect x="34.3856%" y="421" width="0.1017%" height="15" fill="rgb(235,85,53)" fg:x="176758414" fg:w="523005"/><text x="34.6356%" y="431.50"></text></g><g><title>tcp_rearm_rto.part.0 (523,005 samples, 0.10%)</title><rect x="34.3856%" y="405" width="0.1017%" height="15" fill="rgb(233,133,31)" fg:x="176758414" fg:w="523005"/><text x="34.6356%" y="415.50"></text></g><g><title>mod_timer (523,005 samples, 0.10%)</title><rect x="34.3856%" y="389" width="0.1017%" height="15" fill="rgb(218,25,20)" fg:x="176758414" fg:w="523005"/><text x="34.6356%" y="399.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (392,453 samples, 0.08%)</title><rect x="34.4874%" y="437" width="0.0763%" height="15" fill="rgb(252,210,38)" fg:x="177281419" fg:w="392453"/><text x="34.7374%" y="447.50"></text></g><g><title>tcp_push (17,961,177 samples, 3.49%)</title><rect x="31.1760%" y="485" width="3.4941%" height="15" fill="rgb(242,134,21)" fg:x="160259484" fg:w="17961177"/><text x="31.4260%" y="495.50">tcp..</text></g><g><title>__tcp_push_pending_frames (17,961,177 samples, 3.49%)</title><rect x="31.1760%" y="469" width="3.4941%" height="15" fill="rgb(213,28,48)" fg:x="160259484" fg:w="17961177"/><text x="31.4260%" y="479.50">__t..</text></g><g><title>tcp_write_xmit (17,961,177 samples, 3.49%)</title><rect x="31.1760%" y="453" width="3.4941%" height="15" fill="rgb(250,196,2)" fg:x="160259484" fg:w="17961177"/><text x="31.4260%" y="463.50">tcp..</text></g><g><title>tcp_select_window (546,789 samples, 0.11%)</title><rect x="34.5637%" y="437" width="0.1064%" height="15" fill="rgb(227,5,17)" fg:x="177673872" fg:w="546789"/><text x="34.8137%" y="447.50"></text></g><g><title>tcp_send_mss (479,325 samples, 0.09%)</title><rect x="34.6701%" y="485" width="0.0932%" height="15" fill="rgb(221,226,24)" fg:x="178220661" fg:w="479325"/><text x="34.9201%" y="495.50"></text></g><g><title>tcp_current_mss (479,325 samples, 0.09%)</title><rect x="34.6701%" y="469" width="0.0932%" height="15" fill="rgb(211,5,48)" fg:x="178220661" fg:w="479325"/><text x="34.9201%" y="479.50"></text></g><g><title>__kmalloc_node_track_caller (427,616 samples, 0.08%)</title><rect x="34.8717%" y="437" width="0.0832%" height="15" fill="rgb(219,150,6)" fg:x="179256973" fg:w="427616"/><text x="35.1217%" y="447.50"></text></g><g><title>__kmem_cache_alloc_node (427,616 samples, 0.08%)</title><rect x="34.8717%" y="421" width="0.0832%" height="15" fill="rgb(251,46,16)" fg:x="179256973" fg:w="427616"/><text x="35.1217%" y="431.50"></text></g><g><title>arch_local_irq_restore (427,616 samples, 0.08%)</title><rect x="34.8717%" y="405" width="0.0832%" height="15" fill="rgb(220,204,40)" fg:x="179256973" fg:w="427616"/><text x="35.1217%" y="415.50"></text></g><g><title>kmalloc_reserve (924,125 samples, 0.18%)</title><rect x="34.8717%" y="453" width="0.1798%" height="15" fill="rgb(211,85,2)" fg:x="179256973" fg:w="924125"/><text x="35.1217%" y="463.50"></text></g><g><title>kmalloc_slab (496,509 samples, 0.10%)</title><rect x="34.9549%" y="437" width="0.0966%" height="15" fill="rgb(229,17,7)" fg:x="179684589" fg:w="496509"/><text x="35.2049%" y="447.50"></text></g><g><title>__alloc_skb (2,420,776 samples, 0.47%)</title><rect x="34.7633%" y="469" width="0.4709%" height="15" fill="rgb(239,72,28)" fg:x="178699986" fg:w="2420776"/><text x="35.0133%" y="479.50"></text></g><g><title>kmem_cache_alloc_node (939,664 samples, 0.18%)</title><rect x="35.0515%" y="453" width="0.1828%" height="15" fill="rgb(230,47,54)" fg:x="180181098" fg:w="939664"/><text x="35.3015%" y="463.50"></text></g><g><title>___slab_alloc (939,664 samples, 0.18%)</title><rect x="35.0515%" y="437" width="0.1828%" height="15" fill="rgb(214,50,8)" fg:x="180181098" fg:w="939664"/><text x="35.3015%" y="447.50"></text></g><g><title>new_slab (456,241 samples, 0.09%)</title><rect x="35.1455%" y="421" width="0.0888%" height="15" fill="rgb(216,198,43)" fg:x="180664521" fg:w="456241"/><text x="35.3955%" y="431.50"></text></g><g><title>allocate_slab (456,241 samples, 0.09%)</title><rect x="35.1455%" y="405" width="0.0888%" height="15" fill="rgb(234,20,35)" fg:x="180664521" fg:w="456241"/><text x="35.3955%" y="415.50"></text></g><g><title>alloc_pages (456,241 samples, 0.09%)</title><rect x="35.1455%" y="389" width="0.0888%" height="15" fill="rgb(254,45,19)" fg:x="180664521" fg:w="456241"/><text x="35.3955%" y="399.50"></text></g><g><title>__alloc_pages (456,241 samples, 0.09%)</title><rect x="35.1455%" y="373" width="0.0888%" height="15" fill="rgb(219,14,44)" fg:x="180664521" fg:w="456241"/><text x="35.3955%" y="383.50"></text></g><g><title>get_page_from_freelist (456,241 samples, 0.09%)</title><rect x="35.1455%" y="357" width="0.0888%" height="15" fill="rgb(217,220,26)" fg:x="180664521" fg:w="456241"/><text x="35.3955%" y="367.50"></text></g><g><title>rmqueue (456,241 samples, 0.09%)</title><rect x="35.1455%" y="341" width="0.0888%" height="15" fill="rgb(213,158,28)" fg:x="180664521" fg:w="456241"/><text x="35.3955%" y="351.50"></text></g><g><title>rmqueue_pcplist (456,241 samples, 0.09%)</title><rect x="35.1455%" y="325" width="0.0888%" height="15" fill="rgb(252,51,52)" fg:x="180664521" fg:w="456241"/><text x="35.3955%" y="335.50"></text></g><g><title>kmem_cache_alloc_node (491,704 samples, 0.10%)</title><rect x="35.2342%" y="469" width="0.0957%" height="15" fill="rgb(246,89,16)" fg:x="181120762" fg:w="491704"/><text x="35.4842%" y="479.50"></text></g><g><title>tcp_sendmsg_locked (25,972,415 samples, 5.05%)</title><rect x="30.3608%" y="501" width="5.0525%" height="15" fill="rgb(216,158,49)" fg:x="156068923" fg:w="25972415"/><text x="30.6108%" y="511.50">tcp_se..</text></g><g><title>tcp_stream_alloc_skb (3,341,352 samples, 0.65%)</title><rect x="34.7633%" y="485" width="0.6500%" height="15" fill="rgb(236,107,19)" fg:x="178699986" fg:w="3341352"/><text x="35.0133%" y="495.50"></text></g><g><title>sk_forced_mem_schedule (428,872 samples, 0.08%)</title><rect x="35.3299%" y="469" width="0.0834%" height="15" fill="rgb(228,185,30)" fg:x="181612466" fg:w="428872"/><text x="35.5799%" y="479.50"></text></g><g><title>arch_local_irq_restore (428,872 samples, 0.08%)</title><rect x="35.3299%" y="453" width="0.0834%" height="15" fill="rgb(246,134,8)" fg:x="181612466" fg:w="428872"/><text x="35.5799%" y="463.50"></text></g><g><title>inet_sendmsg (26,750,285 samples, 5.20%)</title><rect x="30.2702%" y="533" width="5.2039%" height="15" fill="rgb(214,143,50)" fg:x="155603266" fg:w="26750285"/><text x="30.5202%" y="543.50">inet_s..</text></g><g><title>tcp_sendmsg (26,750,285 samples, 5.20%)</title><rect x="30.2702%" y="517" width="5.2039%" height="15" fill="rgb(228,75,8)" fg:x="155603266" fg:w="26750285"/><text x="30.5202%" y="527.50">tcp_se..</text></g><g><title>tcp_stream_alloc_skb (312,213 samples, 0.06%)</title><rect x="35.4133%" y="501" width="0.0607%" height="15" fill="rgb(207,175,4)" fg:x="182041338" fg:w="312213"/><text x="35.6633%" y="511.50"></text></g><g><title>do_iter_readv_writev (27,260,575 samples, 5.30%)</title><rect x="30.2702%" y="581" width="5.3031%" height="15" fill="rgb(205,108,24)" fg:x="155603266" fg:w="27260575"/><text x="30.5202%" y="591.50">do_ite..</text></g><g><title>sock_write_iter (27,260,575 samples, 5.30%)</title><rect x="30.2702%" y="565" width="5.3031%" height="15" fill="rgb(244,120,49)" fg:x="155603266" fg:w="27260575"/><text x="30.5202%" y="575.50">sock_w..</text></g><g><title>__sock_sendmsg (27,260,575 samples, 5.30%)</title><rect x="30.2702%" y="549" width="5.3031%" height="15" fill="rgb(223,47,38)" fg:x="155603266" fg:w="27260575"/><text x="30.5202%" y="559.50">__sock..</text></g><g><title>security_socket_sendmsg (510,290 samples, 0.10%)</title><rect x="35.4741%" y="533" width="0.0993%" height="15" fill="rgb(229,179,11)" fg:x="182353551" fg:w="510290"/><text x="35.7241%" y="543.50"></text></g><g><title>selinux_socket_sendmsg (510,290 samples, 0.10%)</title><rect x="35.4741%" y="517" width="0.0993%" height="15" fill="rgb(231,122,1)" fg:x="182353551" fg:w="510290"/><text x="35.7241%" y="527.50"></text></g><g><title>inode_security (457,975 samples, 0.09%)</title><rect x="35.5733%" y="549" width="0.0891%" height="15" fill="rgb(245,119,9)" fg:x="182863841" fg:w="457975"/><text x="35.8233%" y="559.50"></text></g><g><title>do_iter_write (30,741,818 samples, 5.98%)</title><rect x="30.0988%" y="597" width="5.9803%" height="15" fill="rgb(241,163,25)" fg:x="154722322" fg:w="30741818"/><text x="30.3488%" y="607.50">do_iter_..</text></g><g><title>rw_verify_area (2,600,299 samples, 0.51%)</title><rect x="35.5733%" y="581" width="0.5058%" height="15" fill="rgb(217,214,3)" fg:x="182863841" fg:w="2600299"/><text x="35.8233%" y="591.50"></text></g><g><title>security_file_permission (2,600,299 samples, 0.51%)</title><rect x="35.5733%" y="565" width="0.5058%" height="15" fill="rgb(240,86,28)" fg:x="182863841" fg:w="2600299"/><text x="35.8233%" y="575.50"></text></g><g><title>selinux_file_permission (2,142,324 samples, 0.42%)</title><rect x="35.6624%" y="549" width="0.4168%" height="15" fill="rgb(215,47,9)" fg:x="183321816" fg:w="2142324"/><text x="35.9124%" y="559.50"></text></g><g><title>file_has_perm (561,596 samples, 0.11%)</title><rect x="35.9699%" y="533" width="0.1092%" height="15" fill="rgb(252,25,45)" fg:x="184902544" fg:w="561596"/><text x="36.2199%" y="543.50"></text></g><g><title>inode_has_perm (561,596 samples, 0.11%)</title><rect x="35.9699%" y="517" width="0.1092%" height="15" fill="rgb(251,164,9)" fg:x="184902544" fg:w="561596"/><text x="36.2199%" y="527.50"></text></g><g><title>avc_lookup (561,596 samples, 0.11%)</title><rect x="35.9699%" y="501" width="0.1092%" height="15" fill="rgb(233,194,0)" fg:x="184902544" fg:w="561596"/><text x="36.2199%" y="511.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_flush (48,965,037 samples, 9.53%)</title><rect x="26.7108%" y="1157" width="9.5254%" height="15" fill="rgb(249,111,24)" fg:x="137306379" fg:w="48965037"/><text x="26.9608%" y="1167.50">hyper::proto::..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (48,965,037 samples, 9.53%)</title><rect x="26.7108%" y="1141" width="9.5254%" height="15" fill="rgb(250,223,3)" fg:x="137306379" fg:w="48965037"/><text x="26.9608%" y="1151.50">hyper::proto::..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (47,226,671 samples, 9.19%)</title><rect x="27.0490%" y="1125" width="9.1872%" height="15" fill="rgb(236,178,37)" fg:x="139044745" fg:w="47226671"/><text x="27.2990%" y="1135.50">hyper::proto:..</text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write_vectored (41,164,953 samples, 8.01%)</title><rect x="28.2282%" y="1109" width="8.0080%" height="15" fill="rgb(241,158,50)" fg:x="145106463" fg:w="41164953"/><text x="28.4782%" y="1119.50">&lt;hyper_util..</text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write_vectored (41,164,953 samples, 8.01%)</title><rect x="28.2282%" y="1093" width="8.0080%" height="15" fill="rgb(213,121,41)" fg:x="145106463" fg:w="41164953"/><text x="28.4782%" y="1103.50">&lt;hyper_util..</text></g><g><title>&lt;tokio_rustls::server::TlsStream&lt;IO&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (41,164,953 samples, 8.01%)</title><rect x="28.2282%" y="1077" width="8.0080%" height="15" fill="rgb(240,92,3)" fg:x="145106463" fg:w="41164953"/><text x="28.4782%" y="1087.50">&lt;tokio_rust..</text></g><g><title>&lt;tokio_rustls::common::Stream&lt;IO,C&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (41,164,953 samples, 8.01%)</title><rect x="28.2282%" y="1061" width="8.0080%" height="15" fill="rgb(205,123,3)" fg:x="145106463" fg:w="41164953"/><text x="28.4782%" y="1071.50">&lt;tokio_rust..</text></g><g><title>tokio_rustls::common::Stream&lt;IO,C&gt;::write_io (33,860,105 samples, 6.59%)</title><rect x="29.6493%" y="1045" width="6.5870%" height="15" fill="rgb(205,97,47)" fg:x="152411311" fg:w="33860105"/><text x="29.8993%" y="1055.50">tokio_rus..</text></g><g><title>rustls::conn::ConnectionCommon&lt;Data&gt;::write_tls (33,860,105 samples, 6.59%)</title><rect x="29.6493%" y="1029" width="6.5870%" height="15" fill="rgb(247,152,14)" fg:x="152411311" fg:w="33860105"/><text x="29.8993%" y="1039.50">rustls::c..</text></g><g><title>rustls::vecbuf::ChunkVecBuffer::write_to (33,860,105 samples, 6.59%)</title><rect x="29.6493%" y="1013" width="6.5870%" height="15" fill="rgb(248,195,53)" fg:x="152411311" fg:w="33860105"/><text x="29.8993%" y="1023.50">rustls::v..</text></g><g><title>&lt;tokio_rustls::common::SyncWriteAdapter&lt;T&gt; as std::io::Write&gt;::write_vectored (33,860,105 samples, 6.59%)</title><rect x="29.6493%" y="997" width="6.5870%" height="15" fill="rgb(226,201,16)" fg:x="152411311" fg:w="33860105"/><text x="29.8993%" y="1007.50">&lt;tokio_ru..</text></g><g><title>tokio_rustls::common::SyncWriteAdapter&lt;T&gt;::poll_with (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="981" width="6.3780%" height="15" fill="rgb(205,98,0)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="991.50">tokio_ru..</text></g><g><title>&lt;tokio_rustls::common::SyncWriteAdapter&lt;T&gt; as std::io::Write&gt;::write_vectored::{{closure}} (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="965" width="6.3780%" height="15" fill="rgb(214,191,48)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="975.50">&lt;tokio_r..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="949" width="6.3780%" height="15" fill="rgb(237,112,39)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="959.50">&lt;tokio::..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="933" width="6.3780%" height="15" fill="rgb(247,203,27)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="943.50">tokio::n..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="917" width="6.3780%" height="15" fill="rgb(235,124,28)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="927.50">tokio::i..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="901" width="6.3780%" height="15" fill="rgb(208,207,46)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="911.50">tokio::r..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="885" width="6.3780%" height="15" fill="rgb(234,176,4)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="895.50">tokio::r..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::{{closure}} (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="869" width="6.3780%" height="15" fill="rgb(230,133,28)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="879.50">tokio::i..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="853" width="6.3780%" height="15" fill="rgb(211,137,40)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="863.50">&lt;&amp;mio::n..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="837" width="6.3780%" height="15" fill="rgb(254,35,13)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="847.50">mio::io_..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="821" width="6.3780%" height="15" fill="rgb(225,49,51)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="831.50">mio::sys..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::{{closure}} (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="805" width="6.3780%" height="15" fill="rgb(251,10,15)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="815.50">&lt;&amp;mio::n..</text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="789" width="6.3780%" height="15" fill="rgb(228,207,15)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="799.50">&lt;&amp;std::f..</text></g><g><title>std::sys::fs::unix::File::write_vectored (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="773" width="6.3780%" height="15" fill="rgb(241,99,19)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="783.50">std::sys..</text></g><g><title>std::sys::fd::unix::FileDesc::write_vectored (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="757" width="6.3780%" height="15" fill="rgb(207,104,49)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="767.50">std::sys..</text></g><g><title>__GI___writev (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="741" width="6.3780%" height="15" fill="rgb(234,99,18)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="751.50">__GI___w..</text></g><g><title>el0t_64_sync_handler (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="725" width="6.3780%" height="15" fill="rgb(213,191,49)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="735.50">el0t_64_..</text></g><g><title>el0_svc (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="709" width="6.3780%" height="15" fill="rgb(210,226,19)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="719.50">el0_svc</text></g><g><title>do_el0_svc (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="693" width="6.3780%" height="15" fill="rgb(229,97,18)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="703.50">do_el0_s..</text></g><g><title>el0_svc_common.constprop.0 (32,785,879 samples, 6.38%)</title><rect x="29.8582%" y="677" width="6.3780%" height="15" fill="rgb(211,167,15)" fg:x="153485537" fg:w="32785879"/><text x="30.1082%" y="687.50">el0_svc_..</text></g><g><title>invoke_syscall (32,402,144 samples, 6.30%)</title><rect x="29.9329%" y="661" width="6.3033%" height="15" fill="rgb(210,169,34)" fg:x="153869272" fg:w="32402144"/><text x="30.1829%" y="671.50">invoke_s..</text></g><g><title>__arm64_sys_writev (31,549,094 samples, 6.14%)</title><rect x="30.0988%" y="645" width="6.1374%" height="15" fill="rgb(241,121,31)" fg:x="154722322" fg:w="31549094"/><text x="30.3488%" y="655.50">__arm64_..</text></g><g><title>do_writev (31,549,094 samples, 6.14%)</title><rect x="30.0988%" y="629" width="6.1374%" height="15" fill="rgb(232,40,11)" fg:x="154722322" fg:w="31549094"/><text x="30.3488%" y="639.50">do_writev</text></g><g><title>vfs_writev (31,549,094 samples, 6.14%)</title><rect x="30.0988%" y="613" width="6.1374%" height="15" fill="rgb(205,86,26)" fg:x="154722322" fg:w="31549094"/><text x="30.3488%" y="623.50">vfs_writ..</text></g><g><title>import_iovec (807,276 samples, 0.16%)</title><rect x="36.0792%" y="597" width="0.1570%" height="15" fill="rgb(231,126,28)" fg:x="185464140" fg:w="807276"/><text x="36.3292%" y="607.50"></text></g><g><title>__import_iovec (807,276 samples, 0.16%)</title><rect x="36.0792%" y="581" width="0.1570%" height="15" fill="rgb(219,221,18)" fg:x="185464140" fg:w="807276"/><text x="36.3292%" y="591.50"></text></g><g><title>iovec_from_user (807,276 samples, 0.16%)</title><rect x="36.0792%" y="565" width="0.1570%" height="15" fill="rgb(211,40,0)" fg:x="185464140" fg:w="807276"/><text x="36.3292%" y="575.50"></text></g><g><title>__arch_copy_from_user (448,379 samples, 0.09%)</title><rect x="36.1490%" y="549" width="0.0872%" height="15" fill="rgb(239,85,43)" fg:x="185823037" fg:w="448379"/><text x="36.3990%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::incoming::Sender&gt; (553,271 samples, 0.11%)</title><rect x="36.2362%" y="1141" width="0.1076%" height="15" fill="rgb(231,55,21)" fg:x="186271416" fg:w="553271"/><text x="36.4862%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::Sender&lt;core::result::Result&lt;bytes::bytes::Bytes,hyper::error::Error&gt;&gt;&gt; (553,271 samples, 0.11%)</title><rect x="36.2362%" y="1125" width="0.1076%" height="15" fill="rgb(225,184,43)" fg:x="186271416" fg:w="553271"/><text x="36.4862%" y="1135.50"></text></g><g><title>hyper::body::incoming::Sender::poll_ready (566,544 samples, 0.11%)</title><rect x="36.3439%" y="1141" width="0.1102%" height="15" fill="rgb(251,158,41)" fg:x="186824687" fg:w="566544"/><text x="36.5939%" y="1151.50"></text></g><g><title>hyper::body::incoming::Sender::poll_want (566,544 samples, 0.11%)</title><rect x="36.3439%" y="1125" width="0.1102%" height="15" fill="rgb(234,159,37)" fg:x="186824687" fg:w="566544"/><text x="36.5939%" y="1135.50"></text></g><g><title>hyper::common::watch::Receiver::load (566,544 samples, 0.11%)</title><rect x="36.3439%" y="1109" width="0.1102%" height="15" fill="rgb(216,204,22)" fg:x="186824687" fg:w="566544"/><text x="36.5939%" y="1119.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (566,544 samples, 0.11%)</title><rect x="36.3439%" y="1093" width="0.1102%" height="15" fill="rgb(214,17,3)" fg:x="186824687" fg:w="566544"/><text x="36.5939%" y="1103.50"></text></g><g><title>hyper::body::incoming::Sender::try_send_data (908,251 samples, 0.18%)</title><rect x="36.4541%" y="1141" width="0.1767%" height="15" fill="rgb(212,111,17)" fg:x="187391231" fg:w="908251"/><text x="36.7041%" y="1151.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (908,251 samples, 0.18%)</title><rect x="36.4541%" y="1125" width="0.1767%" height="15" fill="rgb(221,157,24)" fg:x="187391231" fg:w="908251"/><text x="36.7041%" y="1135.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::try_send (908,251 samples, 0.18%)</title><rect x="36.4541%" y="1109" width="0.1767%" height="15" fill="rgb(252,16,13)" fg:x="187391231" fg:w="908251"/><text x="36.7041%" y="1119.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::do_send_b (908,251 samples, 0.18%)</title><rect x="36.4541%" y="1093" width="0.1767%" height="15" fill="rgb(221,62,2)" fg:x="187391231" fg:w="908251"/><text x="36.7041%" y="1103.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::queue_push_and_signal (908,251 samples, 0.18%)</title><rect x="36.4541%" y="1077" width="0.1767%" height="15" fill="rgb(247,87,22)" fg:x="187391231" fg:w="908251"/><text x="36.7041%" y="1087.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::push (908,251 samples, 0.18%)</title><rect x="36.4541%" y="1061" width="0.1767%" height="15" fill="rgb(215,73,9)" fg:x="187391231" fg:w="908251"/><text x="36.7041%" y="1071.50"></text></g><g><title>futures_channel::mpsc::queue::Node&lt;T&gt;::new (908,251 samples, 0.18%)</title><rect x="36.4541%" y="1045" width="0.1767%" height="15" fill="rgb(207,175,33)" fg:x="187391231" fg:w="908251"/><text x="36.7041%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (908,251 samples, 0.18%)</title><rect x="36.4541%" y="1029" width="0.1767%" height="15" fill="rgb(243,129,54)" fg:x="187391231" fg:w="908251"/><text x="36.7041%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (908,251 samples, 0.18%)</title><rect x="36.4541%" y="1013" width="0.1767%" height="15" fill="rgb(227,119,45)" fg:x="187391231" fg:w="908251"/><text x="36.7041%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (908,251 samples, 0.18%)</title><rect x="36.4541%" y="997" width="0.1767%" height="15" fill="rgb(205,109,36)" fg:x="187391231" fg:w="908251"/><text x="36.7041%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (908,251 samples, 0.18%)</title><rect x="36.4541%" y="981" width="0.1767%" height="15" fill="rgb(205,6,39)" fg:x="187391231" fg:w="908251"/><text x="36.7041%" y="991.50"></text></g><g><title>alloc::alloc::alloc (908,251 samples, 0.18%)</title><rect x="36.4541%" y="965" width="0.1767%" height="15" fill="rgb(221,32,16)" fg:x="187391231" fg:w="908251"/><text x="36.7041%" y="975.50"></text></g><g><title>__GI___libc_malloc (908,251 samples, 0.18%)</title><rect x="36.4541%" y="949" width="0.1767%" height="15" fill="rgb(228,144,50)" fg:x="187391231" fg:w="908251"/><text x="36.7041%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::conn::Reading&gt; (296,154 samples, 0.06%)</title><rect x="36.6308%" y="1125" width="0.0576%" height="15" fill="rgb(229,201,53)" fg:x="188299482" fg:w="296154"/><text x="36.8808%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::decode::Decoder&gt; (296,154 samples, 0.06%)</title><rect x="36.6308%" y="1109" width="0.0576%" height="15" fill="rgb(249,153,27)" fg:x="188299482" fg:w="296154"/><text x="36.8808%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::decode::Kind&gt; (296,154 samples, 0.06%)</title><rect x="36.6308%" y="1093" width="0.0576%" height="15" fill="rgb(227,106,25)" fg:x="188299482" fg:w="296154"/><text x="36.8808%" y="1103.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (335,613 samples, 0.07%)</title><rect x="36.6884%" y="1125" width="0.0653%" height="15" fill="rgb(230,65,29)" fg:x="188595636" fg:w="335613"/><text x="36.9384%" y="1135.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::maybe_notify (335,613 samples, 0.07%)</title><rect x="36.6884%" y="1109" width="0.0653%" height="15" fill="rgb(221,57,46)" fg:x="188595636" fg:w="335613"/><text x="36.9384%" y="1119.50"></text></g><g><title>hyper::proto::h1::decode::Decoder::decode (2,598,102 samples, 0.51%)</title><rect x="36.7537%" y="1125" width="0.5054%" height="15" fill="rgb(229,161,17)" fg:x="188931249" fg:w="2598102"/><text x="37.0037%" y="1135.50"></text></g><g><title>&lt;hyper::proto::h1::io::Buffered&lt;T,B&gt; as hyper::proto::h1::io::MemRead&gt;::read_mem (1,971,104 samples, 0.38%)</title><rect x="36.8756%" y="1109" width="0.3834%" height="15" fill="rgb(222,213,11)" fg:x="189558247" fg:w="1971104"/><text x="37.1256%" y="1119.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (3,554,648 samples, 0.69%)</title><rect x="36.6308%" y="1141" width="0.6915%" height="15" fill="rgb(235,35,13)" fg:x="188299482" fg:w="3554648"/><text x="36.8808%" y="1151.50"></text></g><g><title>hyper::proto::h1::decode::Decoder::is_eof (324,779 samples, 0.06%)</title><rect x="37.2591%" y="1125" width="0.0632%" height="15" fill="rgb(233,158,34)" fg:x="191529351" fg:w="324779"/><text x="37.5091%" y="1135.50"></text></g><g><title>rustls::conn::connection::Reader::into_first_chunk (1,862,891 samples, 0.36%)</title><rect x="37.4549%" y="997" width="0.3624%" height="15" fill="rgb(215,151,48)" fg:x="192536131" fg:w="1862891"/><text x="37.7049%" y="1007.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (3,068,612 samples, 0.60%)</title><rect x="37.3223%" y="1077" width="0.5970%" height="15" fill="rgb(229,84,14)" fg:x="191854130" fg:w="3068612"/><text x="37.5723%" y="1087.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (3,068,612 samples, 0.60%)</title><rect x="37.3223%" y="1061" width="0.5970%" height="15" fill="rgb(229,68,14)" fg:x="191854130" fg:w="3068612"/><text x="37.5723%" y="1071.50"></text></g><g><title>&lt;tokio_rustls::server::TlsStream&lt;IO&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (3,068,612 samples, 0.60%)</title><rect x="37.3223%" y="1045" width="0.5970%" height="15" fill="rgb(243,106,26)" fg:x="191854130" fg:w="3068612"/><text x="37.5723%" y="1055.50"></text></g><g><title>&lt;tokio_rustls::server::TlsStream&lt;IO&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (2,386,611 samples, 0.46%)</title><rect x="37.4549%" y="1029" width="0.4643%" height="15" fill="rgb(206,45,38)" fg:x="192536131" fg:w="2386611"/><text x="37.7049%" y="1039.50"></text></g><g><title>tokio_rustls::common::Stream&lt;IO,C&gt;::poll_fill_buf (2,386,611 samples, 0.46%)</title><rect x="37.4549%" y="1013" width="0.4643%" height="15" fill="rgb(226,6,15)" fg:x="192536131" fg:w="2386611"/><text x="37.7049%" y="1023.50"></text></g><g><title>tokio_rustls::common::Stream&lt;IO,C&gt;::read_io (523,720 samples, 0.10%)</title><rect x="37.8173%" y="997" width="0.1019%" height="15" fill="rgb(232,22,54)" fg:x="194399022" fg:w="523720"/><text x="38.0673%" y="1007.50"></text></g><g><title>std::io::error::Error::kind (523,720 samples, 0.10%)</title><rect x="37.8173%" y="981" width="0.1019%" height="15" fill="rgb(229,222,32)" fg:x="194399022" fg:w="523720"/><text x="38.0673%" y="991.50"></text></g><g><title>std::io::error::repr_bitpacked::Repr::data (523,720 samples, 0.10%)</title><rect x="37.8173%" y="965" width="0.1019%" height="15" fill="rgb(228,62,29)" fg:x="194399022" fg:w="523720"/><text x="38.0673%" y="975.50"></text></g><g><title>std::io::error::repr_bitpacked::decode_repr (523,720 samples, 0.10%)</title><rect x="37.8173%" y="949" width="0.1019%" height="15" fill="rgb(251,103,34)" fg:x="194399022" fg:w="523720"/><text x="38.0673%" y="959.50"></text></g><g><title>el0t_64_sync_handler (478,369 samples, 0.09%)</title><rect x="38.6070%" y="885" width="0.0931%" height="15" fill="rgb(233,12,30)" fg:x="198458405" fg:w="478369"/><text x="38.8570%" y="895.50"></text></g><g><title>el0_da (478,369 samples, 0.09%)</title><rect x="38.6070%" y="869" width="0.0931%" height="15" fill="rgb(238,52,0)" fg:x="198458405" fg:w="478369"/><text x="38.8570%" y="879.50"></text></g><g><title>do_mem_abort (478,369 samples, 0.09%)</title><rect x="38.6070%" y="853" width="0.0931%" height="15" fill="rgb(223,98,5)" fg:x="198458405" fg:w="478369"/><text x="38.8570%" y="863.50"></text></g><g><title>do_translation_fault (478,369 samples, 0.09%)</title><rect x="38.6070%" y="837" width="0.0931%" height="15" fill="rgb(228,75,37)" fg:x="198458405" fg:w="478369"/><text x="38.8570%" y="847.50"></text></g><g><title>do_page_fault (478,369 samples, 0.09%)</title><rect x="38.6070%" y="821" width="0.0931%" height="15" fill="rgb(205,115,49)" fg:x="198458405" fg:w="478369"/><text x="38.8570%" y="831.50"></text></g><g><title>handle_mm_fault (478,369 samples, 0.09%)</title><rect x="38.6070%" y="805" width="0.0931%" height="15" fill="rgb(250,154,43)" fg:x="198458405" fg:w="478369"/><text x="38.8570%" y="815.50"></text></g><g><title>__handle_mm_fault (478,369 samples, 0.09%)</title><rect x="38.6070%" y="789" width="0.0931%" height="15" fill="rgb(226,43,29)" fg:x="198458405" fg:w="478369"/><text x="38.8570%" y="799.50"></text></g><g><title>handle_pte_fault (478,369 samples, 0.09%)</title><rect x="38.6070%" y="773" width="0.0931%" height="15" fill="rgb(249,228,39)" fg:x="198458405" fg:w="478369"/><text x="38.8570%" y="783.50"></text></g><g><title>do_anonymous_page (478,369 samples, 0.09%)</title><rect x="38.6070%" y="757" width="0.0931%" height="15" fill="rgb(216,79,43)" fg:x="198458405" fg:w="478369"/><text x="38.8570%" y="767.50"></text></g><g><title>__mem_cgroup_charge (478,369 samples, 0.09%)</title><rect x="38.6070%" y="741" width="0.0931%" height="15" fill="rgb(228,95,12)" fg:x="198458405" fg:w="478369"/><text x="38.8570%" y="751.50"></text></g><g><title>get_mem_cgroup_from_mm (478,369 samples, 0.09%)</title><rect x="38.6070%" y="725" width="0.0931%" height="15" fill="rgb(249,221,15)" fg:x="198458405" fg:w="478369"/><text x="38.8570%" y="735.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (7,529,120 samples, 1.46%)</title><rect x="37.3223%" y="1141" width="1.4647%" height="15" fill="rgb(233,34,13)" fg:x="191854130" fg:w="7529120"/><text x="37.5723%" y="1151.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::mid_message_detect_eof (7,529,120 samples, 1.46%)</title><rect x="37.3223%" y="1125" width="1.4647%" height="15" fill="rgb(214,103,39)" fg:x="191854130" fg:w="7529120"/><text x="37.5723%" y="1135.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (7,529,120 samples, 1.46%)</title><rect x="37.3223%" y="1109" width="1.4647%" height="15" fill="rgb(251,126,39)" fg:x="191854130" fg:w="7529120"/><text x="37.5723%" y="1119.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (7,529,120 samples, 1.46%)</title><rect x="37.3223%" y="1093" width="1.4647%" height="15" fill="rgb(214,216,36)" fg:x="191854130" fg:w="7529120"/><text x="37.5723%" y="1103.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (4,460,508 samples, 0.87%)</title><rect x="37.9192%" y="1077" width="0.8677%" height="15" fill="rgb(220,221,8)" fg:x="194922742" fg:w="4460508"/><text x="38.1692%" y="1087.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (4,460,508 samples, 0.87%)</title><rect x="37.9192%" y="1061" width="0.8677%" height="15" fill="rgb(240,216,3)" fg:x="194922742" fg:w="4460508"/><text x="38.1692%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,460,508 samples, 0.87%)</title><rect x="37.9192%" y="1045" width="0.8677%" height="15" fill="rgb(232,218,17)" fg:x="194922742" fg:w="4460508"/><text x="38.1692%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,460,508 samples, 0.87%)</title><rect x="37.9192%" y="1029" width="0.8677%" height="15" fill="rgb(229,163,45)" fg:x="194922742" fg:w="4460508"/><text x="38.1692%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,460,508 samples, 0.87%)</title><rect x="37.9192%" y="1013" width="0.8677%" height="15" fill="rgb(231,110,42)" fg:x="194922742" fg:w="4460508"/><text x="38.1692%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,460,508 samples, 0.87%)</title><rect x="37.9192%" y="997" width="0.8677%" height="15" fill="rgb(208,170,48)" fg:x="194922742" fg:w="4460508"/><text x="38.1692%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,460,508 samples, 0.87%)</title><rect x="37.9192%" y="981" width="0.8677%" height="15" fill="rgb(239,116,25)" fg:x="194922742" fg:w="4460508"/><text x="38.1692%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,460,508 samples, 0.87%)</title><rect x="37.9192%" y="965" width="0.8677%" height="15" fill="rgb(219,200,50)" fg:x="194922742" fg:w="4460508"/><text x="38.1692%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,460,508 samples, 0.87%)</title><rect x="37.9192%" y="949" width="0.8677%" height="15" fill="rgb(245,200,0)" fg:x="194922742" fg:w="4460508"/><text x="38.1692%" y="959.50"></text></g><g><title>alloc::alloc::alloc (4,460,508 samples, 0.87%)</title><rect x="37.9192%" y="933" width="0.8677%" height="15" fill="rgb(245,119,33)" fg:x="194922742" fg:w="4460508"/><text x="38.1692%" y="943.50"></text></g><g><title>__GI___libc_malloc (4,460,508 samples, 0.87%)</title><rect x="37.9192%" y="917" width="0.8677%" height="15" fill="rgb(231,125,12)" fg:x="194922742" fg:w="4460508"/><text x="38.1692%" y="927.50"></text></g><g><title>_int_malloc (4,460,508 samples, 0.87%)</title><rect x="37.9192%" y="901" width="0.8677%" height="15" fill="rgb(216,96,41)" fg:x="194922742" fg:w="4460508"/><text x="38.1692%" y="911.50"></text></g><g><title>malloc_consolidate (446,476 samples, 0.09%)</title><rect x="38.7001%" y="885" width="0.0869%" height="15" fill="rgb(248,43,45)" fg:x="198936774" fg:w="446476"/><text x="38.9501%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (1,349,965 samples, 0.26%)</title><rect x="39.0592%" y="1109" width="0.2626%" height="15" fill="rgb(217,222,7)" fg:x="200782622" fg:w="1349965"/><text x="39.3092%" y="1119.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (3,212,856 samples, 0.63%)</title><rect x="39.0592%" y="1125" width="0.6250%" height="15" fill="rgb(233,28,6)" fg:x="200782622" fg:w="3212856"/><text x="39.3092%" y="1135.50"></text></g><g><title>http::request::Request&lt;T&gt;::new (1,862,891 samples, 0.36%)</title><rect x="39.3218%" y="1109" width="0.3624%" height="15" fill="rgb(231,218,15)" fg:x="202132587" fg:w="1862891"/><text x="39.5718%" y="1119.50"></text></g><g><title>http::request::Parts::new (1,862,891 samples, 0.36%)</title><rect x="39.3218%" y="1093" width="0.3624%" height="15" fill="rgb(226,171,48)" fg:x="202132587" fg:w="1862891"/><text x="39.5718%" y="1103.50"></text></g><g><title>&lt;http::header::map::HeaderMap&lt;T&gt; as core::default::Default&gt;::default (1,862,891 samples, 0.36%)</title><rect x="39.3218%" y="1077" width="0.3624%" height="15" fill="rgb(235,201,9)" fg:x="202132587" fg:w="1862891"/><text x="39.5718%" y="1087.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_with_capacity (1,862,891 samples, 0.36%)</title><rect x="39.3218%" y="1061" width="0.3624%" height="15" fill="rgb(217,80,15)" fg:x="202132587" fg:w="1862891"/><text x="39.5718%" y="1071.50"></text></g><g><title>hyper::body::incoming::Incoming::new_channel (578,903 samples, 0.11%)</title><rect x="39.6842%" y="1125" width="0.1126%" height="15" fill="rgb(219,152,8)" fg:x="203995478" fg:w="578903"/><text x="39.9342%" y="1135.50"></text></g><g><title>futures_channel::mpsc::channel (578,903 samples, 0.11%)</title><rect x="39.6842%" y="1109" width="0.1126%" height="15" fill="rgb(243,107,38)" fg:x="203995478" fg:w="578903"/><text x="39.9342%" y="1119.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::new (578,903 samples, 0.11%)</title><rect x="39.6842%" y="1093" width="0.1126%" height="15" fill="rgb(231,17,5)" fg:x="203995478" fg:w="578903"/><text x="39.9342%" y="1103.50"></text></g><g><title>futures_channel::mpsc::queue::Node&lt;T&gt;::new (578,903 samples, 0.11%)</title><rect x="39.6842%" y="1077" width="0.1126%" height="15" fill="rgb(209,25,54)" fg:x="203995478" fg:w="578903"/><text x="39.9342%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (578,903 samples, 0.11%)</title><rect x="39.6842%" y="1061" width="0.1126%" height="15" fill="rgb(219,0,2)" fg:x="203995478" fg:w="578903"/><text x="39.9342%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (578,903 samples, 0.11%)</title><rect x="39.6842%" y="1045" width="0.1126%" height="15" fill="rgb(246,9,5)" fg:x="203995478" fg:w="578903"/><text x="39.9342%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (578,903 samples, 0.11%)</title><rect x="39.6842%" y="1029" width="0.1126%" height="15" fill="rgb(226,159,4)" fg:x="203995478" fg:w="578903"/><text x="39.9342%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (578,903 samples, 0.11%)</title><rect x="39.6842%" y="1013" width="0.1126%" height="15" fill="rgb(219,175,34)" fg:x="203995478" fg:w="578903"/><text x="39.9342%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (578,903 samples, 0.11%)</title><rect x="39.6842%" y="997" width="0.1126%" height="15" fill="rgb(236,10,46)" fg:x="203995478" fg:w="578903"/><text x="39.9342%" y="1007.50"></text></g><g><title>__GI___libc_malloc (578,903 samples, 0.11%)</title><rect x="39.6842%" y="981" width="0.1126%" height="15" fill="rgb(240,211,16)" fg:x="203995478" fg:w="578903"/><text x="39.9342%" y="991.50"></text></g><g><title>rustls::conn::connection::Reader::into_first_chunk (2,275,881 samples, 0.44%)</title><rect x="40.0274%" y="997" width="0.4427%" height="15" fill="rgb(205,3,43)" fg:x="205760025" fg:w="2275881"/><text x="40.2774%" y="1007.50"></text></g><g><title>rustls::vecbuf::ChunkVecBuffer::chunk (412,990 samples, 0.08%)</title><rect x="40.3898%" y="981" width="0.0803%" height="15" fill="rgb(245,7,22)" fg:x="207622916" fg:w="412990"/><text x="40.6398%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (412,990 samples, 0.08%)</title><rect x="40.3898%" y="965" width="0.0803%" height="15" fill="rgb(239,132,32)" fg:x="207622916" fg:w="412990"/><text x="40.6398%" y="975.50"></text></g><g><title>rustls::vecbuf::ChunkVecBuffer::chunk::{{closure}} (412,990 samples, 0.08%)</title><rect x="40.3898%" y="949" width="0.0803%" height="15" fill="rgb(228,202,34)" fg:x="207622916" fg:w="412990"/><text x="40.6398%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (412,990 samples, 0.08%)</title><rect x="40.3898%" y="933" width="0.0803%" height="15" fill="rgb(254,200,22)" fg:x="207622916" fg:w="412990"/><text x="40.6398%" y="943.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (412,990 samples, 0.08%)</title><rect x="40.3898%" y="917" width="0.0803%" height="15" fill="rgb(219,10,39)" fg:x="207622916" fg:w="412990"/><text x="40.6398%" y="927.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (412,990 samples, 0.08%)</title><rect x="40.3898%" y="901" width="0.0803%" height="15" fill="rgb(226,210,39)" fg:x="207622916" fg:w="412990"/><text x="40.6398%" y="911.50"></text></g><g><title>rustls::common_state::CommonState::current_io_state (418,870 samples, 0.08%)</title><rect x="40.4702%" y="949" width="0.0815%" height="15" fill="rgb(208,219,16)" fg:x="208035906" fg:w="418870"/><text x="40.7202%" y="959.50"></text></g><g><title>rustls::vecbuf::ChunkVecBuffer::len (418,870 samples, 0.08%)</title><rect x="40.4702%" y="933" width="0.0815%" height="15" fill="rgb(216,158,51)" fg:x="208035906" fg:w="418870"/><text x="40.7202%" y="943.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (418,870 samples, 0.08%)</title><rect x="40.4702%" y="917" width="0.0815%" height="15" fill="rgb(233,14,44)" fg:x="208035906" fg:w="418870"/><text x="40.7202%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (418,870 samples, 0.08%)</title><rect x="40.4702%" y="901" width="0.0815%" height="15" fill="rgb(237,97,39)" fg:x="208035906" fg:w="418870"/><text x="40.7202%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::offset_from_unsigned (418,870 samples, 0.08%)</title><rect x="40.4702%" y="885" width="0.0815%" height="15" fill="rgb(218,198,43)" fg:x="208035906" fg:w="418870"/><text x="40.7202%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset_from_unsigned (418,870 samples, 0.08%)</title><rect x="40.4702%" y="869" width="0.0815%" height="15" fill="rgb(231,104,20)" fg:x="208035906" fg:w="418870"/><text x="40.7202%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from_unsigned (418,870 samples, 0.08%)</title><rect x="40.4702%" y="853" width="0.0815%" height="15" fill="rgb(254,36,13)" fg:x="208035906" fg:w="418870"/><text x="40.7202%" y="863.50"></text></g><g><title>&lt;rustls::msgs::deframer::DeframerIter as core::iter::traits::iterator::Iterator&gt;::next (3,085,127 samples, 0.60%)</title><rect x="40.5517%" y="917" width="0.6002%" height="15" fill="rgb(248,14,50)" fg:x="208454776" fg:w="3085127"/><text x="40.8017%" y="927.50"></text></g><g><title>rustls::msgs::message::outbound::read_opaque_message_header (2,453,732 samples, 0.48%)</title><rect x="40.6745%" y="901" width="0.4773%" height="15" fill="rgb(217,107,29)" fg:x="209086171" fg:w="2453732"/><text x="40.9245%" y="911.50"></text></g><g><title>&lt;rustls::enums::ProtocolVersion as rustls::msgs::codec::Codec&gt;::read (2,453,732 samples, 0.48%)</title><rect x="40.6745%" y="885" width="0.4773%" height="15" fill="rgb(251,169,33)" fg:x="209086171" fg:w="2453732"/><text x="40.9245%" y="895.50"></text></g><g><title>rustls::conn::InboundUnborrowedMessage::reborrow (402,836 samples, 0.08%)</title><rect x="41.1518%" y="917" width="0.0784%" height="15" fill="rgb(217,108,32)" fg:x="211539903" fg:w="402836"/><text x="41.4018%" y="927.50"></text></g><g><title>ring::aead::less_safe_key::LessSafeKey::open_in_place (1,019,913 samples, 0.20%)</title><rect x="41.5663%" y="885" width="0.1984%" height="15" fill="rgb(219,66,42)" fg:x="213670464" fg:w="1019913"/><text x="41.8163%" y="895.50"></text></g><g><title>ring::aead::less_safe_key::LessSafeKey::open_within (1,019,913 samples, 0.20%)</title><rect x="41.5663%" y="869" width="0.1984%" height="15" fill="rgb(206,180,7)" fg:x="213670464" fg:w="1019913"/><text x="41.8163%" y="879.50"></text></g><g><title>ring::aead::less_safe_key::LessSafeKey::open_in_place_separate_tag (1,019,913 samples, 0.20%)</title><rect x="41.5663%" y="853" width="0.1984%" height="15" fill="rgb(208,226,31)" fg:x="213670464" fg:w="1019913"/><text x="41.8163%" y="863.50"></text></g><g><title>ring::aead::algorithm::Algorithm::open_within (1,019,913 samples, 0.20%)</title><rect x="41.5663%" y="837" width="0.1984%" height="15" fill="rgb(218,26,49)" fg:x="213670464" fg:w="1019913"/><text x="41.8163%" y="847.50"></text></g><g><title>ring::aead::aes_gcm::open (500,858 samples, 0.10%)</title><rect x="41.6673%" y="821" width="0.0974%" height="15" fill="rgb(233,197,48)" fg:x="214189519" fg:w="500858"/><text x="41.9173%" y="831.50"></text></g><g><title>ring::aead::aes_gcm::open_whole_partial (500,858 samples, 0.10%)</title><rect x="41.6673%" y="805" width="0.0974%" height="15" fill="rgb(252,181,51)" fg:x="214189519" fg:w="500858"/><text x="41.9173%" y="815.50"></text></g><g><title>ring::aead::gcm::Context&lt;K&gt;::new (500,858 samples, 0.10%)</title><rect x="41.6673%" y="789" width="0.0974%" height="15" fill="rgb(253,90,19)" fg:x="214189519" fg:w="500858"/><text x="41.9173%" y="799.50"></text></g><g><title>__memset_generic (500,858 samples, 0.10%)</title><rect x="41.6673%" y="773" width="0.0974%" height="15" fill="rgb(215,171,30)" fg:x="214189519" fg:w="500858"/><text x="41.9173%" y="783.50"></text></g><g><title>rustls::conn::ConnectionCore&lt;Data&gt;::process_more_input (6,610,294 samples, 1.29%)</title><rect x="40.5517%" y="933" width="1.2859%" height="15" fill="rgb(214,222,9)" fg:x="208454776" fg:w="6610294"/><text x="40.8017%" y="943.50"></text></g><g><title>rustls::record_layer::RecordLayer::decrypt_incoming (3,122,331 samples, 0.61%)</title><rect x="41.2302%" y="917" width="0.6074%" height="15" fill="rgb(223,3,22)" fg:x="211942739" fg:w="3122331"/><text x="41.4802%" y="927.50"></text></g><g><title>&lt;rustls::crypto::ring::tls13::Tls13MessageDecrypter as rustls::crypto::cipher::MessageDecrypter&gt;::decrypt (1,394,606 samples, 0.27%)</title><rect x="41.5663%" y="901" width="0.2713%" height="15" fill="rgb(225,196,46)" fg:x="213670464" fg:w="1394606"/><text x="41.8163%" y="911.50"></text></g><g><title>rustls::crypto::cipher::Nonce::new (374,693 samples, 0.07%)</title><rect x="41.7647%" y="885" width="0.0729%" height="15" fill="rgb(209,110,37)" fg:x="214690377" fg:w="374693"/><text x="42.0147%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (374,693 samples, 0.07%)</title><rect x="41.7647%" y="869" width="0.0729%" height="15" fill="rgb(249,89,12)" fg:x="214690377" fg:w="374693"/><text x="42.0147%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (374,693 samples, 0.07%)</title><rect x="41.7647%" y="853" width="0.0729%" height="15" fill="rgb(226,27,33)" fg:x="214690377" fg:w="374693"/><text x="42.0147%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (374,693 samples, 0.07%)</title><rect x="41.7647%" y="837" width="0.0729%" height="15" fill="rgb(213,82,22)" fg:x="214690377" fg:w="374693"/><text x="42.0147%" y="847.50"></text></g><g><title>rustls::conn::ConnectionCore&lt;Data&gt;::deframe (7,149,857 samples, 1.39%)</title><rect x="40.5517%" y="949" width="1.3909%" height="15" fill="rgb(248,140,0)" fg:x="208454776" fg:w="7149857"/><text x="40.8017%" y="959.50"></text></g><g><title>rustls::msgs::deframer::handshake::HandshakeDeframer::has_message_ready (539,563 samples, 0.10%)</title><rect x="41.8376%" y="933" width="0.1050%" height="15" fill="rgb(228,106,3)" fg:x="215065070" fg:w="539563"/><text x="42.0876%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (539,563 samples, 0.10%)</title><rect x="41.8376%" y="917" width="0.1050%" height="15" fill="rgb(209,23,37)" fg:x="215065070" fg:w="539563"/><text x="42.0876%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (539,563 samples, 0.10%)</title><rect x="41.8376%" y="901" width="0.1050%" height="15" fill="rgb(241,93,50)" fg:x="215065070" fg:w="539563"/><text x="42.0876%" y="911.50"></text></g><g><title>&lt;rustls::msgs::message::Message as core::convert::TryFrom&lt;rustls::msgs::message::inbound::InboundPlainMessage&gt;&gt;::try_from (646,717 samples, 0.13%)</title><rect x="41.9426%" y="933" width="0.1258%" height="15" fill="rgb(253,46,43)" fg:x="215604633" fg:w="646717"/><text x="42.1926%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (646,717 samples, 0.13%)</title><rect x="41.9426%" y="917" width="0.1258%" height="15" fill="rgb(226,206,43)" fg:x="215604633" fg:w="646717"/><text x="42.1926%" y="927.50"></text></g><g><title>rustls::conn::ConnectionCommon&lt;Data&gt;::process_new_packets (12,285,245 samples, 2.39%)</title><rect x="40.4702%" y="981" width="2.3899%" height="15" fill="rgb(217,54,7)" fg:x="208035906" fg:w="12285245"/><text x="40.7202%" y="991.50">ru..</text></g><g><title>rustls::conn::ConnectionCore&lt;Data&gt;::process_new_packets (12,285,245 samples, 2.39%)</title><rect x="40.4702%" y="965" width="2.3899%" height="15" fill="rgb(223,5,52)" fg:x="208035906" fg:w="12285245"/><text x="40.7202%" y="975.50">ru..</text></g><g><title>rustls::conn::ConnectionCore&lt;Data&gt;::process_msg (4,716,518 samples, 0.92%)</title><rect x="41.9426%" y="949" width="0.9175%" height="15" fill="rgb(206,52,46)" fg:x="215604633" fg:w="4716518"/><text x="42.1926%" y="959.50"></text></g><g><title>rustls::common_state::CommonState::process_main_protocol (4,069,801 samples, 0.79%)</title><rect x="42.0684%" y="933" width="0.7917%" height="15" fill="rgb(253,136,11)" fg:x="216251350" fg:w="4069801"/><text x="42.3184%" y="943.50"></text></g><g><title>&lt;rustls::server::tls13::ExpectTraffic as rustls::common_state::State&lt;rustls::server::server_conn::ServerConnectionData&gt;&gt;::handle (3,071,201 samples, 0.60%)</title><rect x="42.2626%" y="917" width="0.5975%" height="15" fill="rgb(208,106,33)" fg:x="217249950" fg:w="3071201"/><text x="42.5126%" y="927.50"></text></g><g><title>rustls::common_state::CommonState::take_received_plaintext (2,152,493 samples, 0.42%)</title><rect x="42.4413%" y="901" width="0.4187%" height="15" fill="rgb(206,54,4)" fg:x="218168658" fg:w="2152493"/><text x="42.6913%" y="911.50"></text></g><g><title>rustls::msgs::base::Payload::into_vec (1,678,894 samples, 0.33%)</title><rect x="42.5335%" y="885" width="0.3266%" height="15" fill="rgb(213,3,15)" fg:x="218642257" fg:w="1678894"/><text x="42.7835%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,678,894 samples, 0.33%)</title><rect x="42.5335%" y="869" width="0.3266%" height="15" fill="rgb(252,211,39)" fg:x="218642257" fg:w="1678894"/><text x="42.7835%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,678,894 samples, 0.33%)</title><rect x="42.5335%" y="853" width="0.3266%" height="15" fill="rgb(223,6,36)" fg:x="218642257" fg:w="1678894"/><text x="42.7835%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (1,678,894 samples, 0.33%)</title><rect x="42.5335%" y="837" width="0.3266%" height="15" fill="rgb(252,169,45)" fg:x="218642257" fg:w="1678894"/><text x="42.7835%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,678,894 samples, 0.33%)</title><rect x="42.5335%" y="821" width="0.3266%" height="15" fill="rgb(212,48,26)" fg:x="218642257" fg:w="1678894"/><text x="42.7835%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,678,894 samples, 0.33%)</title><rect x="42.5335%" y="805" width="0.3266%" height="15" fill="rgb(251,102,48)" fg:x="218642257" fg:w="1678894"/><text x="42.7835%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,678,894 samples, 0.33%)</title><rect x="42.5335%" y="789" width="0.3266%" height="15" fill="rgb(243,208,16)" fg:x="218642257" fg:w="1678894"/><text x="42.7835%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,678,894 samples, 0.33%)</title><rect x="42.5335%" y="773" width="0.3266%" height="15" fill="rgb(219,96,24)" fg:x="218642257" fg:w="1678894"/><text x="42.7835%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,678,894 samples, 0.33%)</title><rect x="42.5335%" y="757" width="0.3266%" height="15" fill="rgb(219,33,29)" fg:x="218642257" fg:w="1678894"/><text x="42.7835%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,678,894 samples, 0.33%)</title><rect x="42.5335%" y="741" width="0.3266%" height="15" fill="rgb(223,176,5)" fg:x="218642257" fg:w="1678894"/><text x="42.7835%" y="751.50"></text></g><g><title>alloc::alloc::alloc (1,678,894 samples, 0.33%)</title><rect x="42.5335%" y="725" width="0.3266%" height="15" fill="rgb(228,140,14)" fg:x="218642257" fg:w="1678894"/><text x="42.7835%" y="735.50"></text></g><g><title>__GI___libc_malloc (1,678,894 samples, 0.33%)</title><rect x="42.5335%" y="709" width="0.3266%" height="15" fill="rgb(217,179,31)" fg:x="218642257" fg:w="1678894"/><text x="42.7835%" y="719.50"></text></g><g><title>__GI___pthread_enable_asynccancel (509,897 samples, 0.10%)</title><rect x="43.3628%" y="757" width="0.0992%" height="15" fill="rgb(230,9,30)" fg:x="222905210" fg:w="509897"/><text x="43.6128%" y="767.50"></text></g><g><title>el0t_64_irq_handler (509,897 samples, 0.10%)</title><rect x="43.3628%" y="741" width="0.0992%" height="15" fill="rgb(230,136,20)" fg:x="222905210" fg:w="509897"/><text x="43.6128%" y="751.50"></text></g><g><title>__el0_irq_handler_common (509,897 samples, 0.10%)</title><rect x="43.3628%" y="725" width="0.0992%" height="15" fill="rgb(215,210,22)" fg:x="222905210" fg:w="509897"/><text x="43.6128%" y="735.50"></text></g><g><title>el0_interrupt (509,897 samples, 0.10%)</title><rect x="43.3628%" y="709" width="0.0992%" height="15" fill="rgb(218,43,5)" fg:x="222905210" fg:w="509897"/><text x="43.6128%" y="719.50"></text></g><g><title>irq_exit_rcu (509,897 samples, 0.10%)</title><rect x="43.3628%" y="693" width="0.0992%" height="15" fill="rgb(216,11,5)" fg:x="222905210" fg:w="509897"/><text x="43.6128%" y="703.50"></text></g><g><title>__irq_exit_rcu (509,897 samples, 0.10%)</title><rect x="43.3628%" y="677" width="0.0992%" height="15" fill="rgb(209,82,29)" fg:x="222905210" fg:w="509897"/><text x="43.6128%" y="687.50"></text></g><g><title>do_softirq_own_stack (509,897 samples, 0.10%)</title><rect x="43.3628%" y="661" width="0.0992%" height="15" fill="rgb(244,115,12)" fg:x="222905210" fg:w="509897"/><text x="43.6128%" y="671.50"></text></g><g><title>call_on_irq_stack (509,897 samples, 0.10%)</title><rect x="43.3628%" y="645" width="0.0992%" height="15" fill="rgb(222,82,18)" fg:x="222905210" fg:w="509897"/><text x="43.6128%" y="655.50"></text></g><g><title>____do_softirq (509,897 samples, 0.10%)</title><rect x="43.3628%" y="629" width="0.0992%" height="15" fill="rgb(249,227,8)" fg:x="222905210" fg:w="509897"/><text x="43.6128%" y="639.50"></text></g><g><title>__softirqentry_text_start (509,897 samples, 0.10%)</title><rect x="43.3628%" y="613" width="0.0992%" height="15" fill="rgb(253,141,45)" fg:x="222905210" fg:w="509897"/><text x="43.6128%" y="623.50"></text></g><g><title>handle_softirqs (509,897 samples, 0.10%)</title><rect x="43.3628%" y="597" width="0.0992%" height="15" fill="rgb(234,184,4)" fg:x="222905210" fg:w="509897"/><text x="43.6128%" y="607.50"></text></g><g><title>__fdget (475,538 samples, 0.09%)</title><rect x="43.7686%" y="645" width="0.0925%" height="15" fill="rgb(218,194,23)" fg:x="224991517" fg:w="475538"/><text x="44.0186%" y="655.50"></text></g><g><title>lock_sock_nested (1,060,121 samples, 0.21%)</title><rect x="43.8611%" y="613" width="0.2062%" height="15" fill="rgb(235,66,41)" fg:x="225467055" fg:w="1060121"/><text x="44.1111%" y="623.50"></text></g><g><title>__sk_mem_reduce_allocated (1,643,079 samples, 0.32%)</title><rect x="44.1446%" y="597" width="0.3196%" height="15" fill="rgb(245,217,1)" fg:x="226924041" fg:w="1643079"/><text x="44.3946%" y="607.50"></text></g><g><title>kfree_skbmem (1,493,840 samples, 0.29%)</title><rect x="44.4642%" y="581" width="0.2906%" height="15" fill="rgb(229,91,1)" fg:x="228567120" fg:w="1493840"/><text x="44.7142%" y="591.50"></text></g><g><title>kmem_cache_free (1,493,840 samples, 0.29%)</title><rect x="44.4642%" y="565" width="0.2906%" height="15" fill="rgb(207,101,30)" fg:x="228567120" fg:w="1493840"/><text x="44.7142%" y="575.50"></text></g><g><title>slab_free_freelist_hook.constprop.0 (715,669 samples, 0.14%)</title><rect x="44.6156%" y="549" width="0.1392%" height="15" fill="rgb(223,82,49)" fg:x="229345291" fg:w="715669"/><text x="44.8656%" y="559.50"></text></g><g><title>skb_attempt_defer_free (2,872,593 samples, 0.56%)</title><rect x="44.4642%" y="597" width="0.5588%" height="15" fill="rgb(218,167,17)" fg:x="228567120" fg:w="2872593"/><text x="44.7142%" y="607.50"></text></g><g><title>skb_release_data (1,378,753 samples, 0.27%)</title><rect x="44.7548%" y="581" width="0.2682%" height="15" fill="rgb(208,103,14)" fg:x="230060960" fg:w="1378753"/><text x="45.0048%" y="591.50"></text></g><g><title>skb_free_head (932,820 samples, 0.18%)</title><rect x="44.8416%" y="565" width="0.1815%" height="15" fill="rgb(238,20,8)" fg:x="230506893" fg:w="932820"/><text x="45.0916%" y="575.50"></text></g><g><title>free_unref_page (932,820 samples, 0.18%)</title><rect x="44.8416%" y="549" width="0.1815%" height="15" fill="rgb(218,80,54)" fg:x="230506893" fg:w="932820"/><text x="45.0916%" y="559.50"></text></g><g><title>skb_copy_datagram_iter (515,679 samples, 0.10%)</title><rect x="45.0230%" y="597" width="0.1003%" height="15" fill="rgb(240,144,17)" fg:x="231439713" fg:w="515679"/><text x="45.2730%" y="607.50"></text></g><g><title>__skb_datagram_iter (515,679 samples, 0.10%)</title><rect x="45.0230%" y="581" width="0.1003%" height="15" fill="rgb(245,27,50)" fg:x="231439713" fg:w="515679"/><text x="45.2730%" y="591.50"></text></g><g><title>simple_copy_to_iter (515,679 samples, 0.10%)</title><rect x="45.0230%" y="565" width="0.1003%" height="15" fill="rgb(251,51,7)" fg:x="231439713" fg:w="515679"/><text x="45.2730%" y="575.50"></text></g><g><title>__arch_copy_to_user (515,679 samples, 0.10%)</title><rect x="45.0230%" y="549" width="0.1003%" height="15" fill="rgb(245,217,29)" fg:x="231439713" fg:w="515679"/><text x="45.2730%" y="559.50"></text></g><g><title>sock_rfree (520,388 samples, 0.10%)</title><rect x="45.1233%" y="597" width="0.1012%" height="15" fill="rgb(221,176,29)" fg:x="231955392" fg:w="520388"/><text x="45.3733%" y="607.50"></text></g><g><title>__sk_mem_reduce_allocated (520,388 samples, 0.10%)</title><rect x="45.1233%" y="581" width="0.1012%" height="15" fill="rgb(212,180,24)" fg:x="231955392" fg:w="520388"/><text x="45.3733%" y="591.50"></text></g><g><title>arch_local_irq_restore (520,388 samples, 0.10%)</title><rect x="45.1233%" y="565" width="0.1012%" height="15" fill="rgb(254,24,2)" fg:x="231955392" fg:w="520388"/><text x="45.3733%" y="575.50"></text></g><g><title>inet_recvmsg (7,400,689 samples, 1.44%)</title><rect x="43.8611%" y="645" width="1.4397%" height="15" fill="rgb(230,100,2)" fg:x="225467055" fg:w="7400689"/><text x="44.1111%" y="655.50"></text></g><g><title>tcp_recvmsg (7,400,689 samples, 1.44%)</title><rect x="43.8611%" y="629" width="1.4397%" height="15" fill="rgb(219,142,25)" fg:x="225467055" fg:w="7400689"/><text x="44.1111%" y="639.50"></text></g><g><title>tcp_recvmsg_locked (6,340,568 samples, 1.23%)</title><rect x="44.0674%" y="613" width="1.2335%" height="15" fill="rgb(240,73,43)" fg:x="226527176" fg:w="6340568"/><text x="44.3174%" y="623.50"></text></g><g><title>tcp_mstamp_refresh (391,964 samples, 0.08%)</title><rect x="45.2246%" y="597" width="0.0763%" height="15" fill="rgb(214,114,15)" fg:x="232475780" fg:w="391964"/><text x="45.4746%" y="607.50"></text></g><g><title>security_socket_recvmsg (3,661,997 samples, 0.71%)</title><rect x="45.3008%" y="645" width="0.7124%" height="15" fill="rgb(207,130,4)" fg:x="232867744" fg:w="3661997"/><text x="45.5508%" y="655.50"></text></g><g><title>selinux_socket_recvmsg (2,573,788 samples, 0.50%)</title><rect x="45.5125%" y="629" width="0.5007%" height="15" fill="rgb(221,25,40)" fg:x="233955953" fg:w="2573788"/><text x="45.7625%" y="639.50"></text></g><g><title>avc_lookup (1,307,164 samples, 0.25%)</title><rect x="45.7589%" y="613" width="0.2543%" height="15" fill="rgb(241,184,7)" fg:x="235222577" fg:w="1307164"/><text x="46.0089%" y="623.50"></text></g><g><title>sockfd_lookup_light (2,541,992 samples, 0.49%)</title><rect x="46.0132%" y="645" width="0.4945%" height="15" fill="rgb(235,159,4)" fg:x="236529741" fg:w="2541992"/><text x="46.2632%" y="655.50"></text></g><g><title>__fdget (2,131,757 samples, 0.41%)</title><rect x="46.0930%" y="629" width="0.4147%" height="15" fill="rgb(214,87,48)" fg:x="236939976" fg:w="2131757"/><text x="46.3430%" y="639.50"></text></g><g><title>__fget_light (2,131,757 samples, 0.41%)</title><rect x="46.0930%" y="613" width="0.4147%" height="15" fill="rgb(246,198,24)" fg:x="236939976" fg:w="2131757"/><text x="46.3430%" y="623.50"></text></g><g><title>__sys_recvfrom (14,723,085 samples, 2.86%)</title><rect x="43.7686%" y="661" width="2.8641%" height="15" fill="rgb(209,66,40)" fg:x="224991517" fg:w="14723085"/><text x="44.0186%" y="671.50">__..</text></g><g><title>tcp_recvmsg (642,869 samples, 0.13%)</title><rect x="46.5077%" y="645" width="0.1251%" height="15" fill="rgb(233,147,39)" fg:x="239071733" fg:w="642869"/><text x="46.7577%" y="655.50"></text></g><g><title>import_single_range (441,060 samples, 0.09%)</title><rect x="46.6328%" y="661" width="0.0858%" height="15" fill="rgb(231,145,52)" fg:x="239714602" fg:w="441060"/><text x="46.8828%" y="671.50"></text></g><g><title>__arm64_sys_recvfrom (15,676,390 samples, 3.05%)</title><rect x="43.7686%" y="677" width="3.0496%" height="15" fill="rgb(206,20,26)" fg:x="224991517" fg:w="15676390"/><text x="44.0186%" y="687.50">__a..</text></g><g><title>memset (512,245 samples, 0.10%)</title><rect x="46.7186%" y="661" width="0.0996%" height="15" fill="rgb(238,220,4)" fg:x="240155662" fg:w="512245"/><text x="46.9686%" y="671.50"></text></g><g><title>&lt;tokio_rustls::common::SyncReadAdapter&lt;T&gt; as std::io::Read&gt;::read (19,456,482 samples, 3.78%)</title><rect x="43.1369%" y="949" width="3.7850%" height="15" fill="rgb(252,195,42)" fg:x="221744222" fg:w="19456482"/><text x="43.3869%" y="959.50">&lt;tok..</text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (18,977,541 samples, 3.69%)</title><rect x="43.2301%" y="933" width="3.6918%" height="15" fill="rgb(209,10,6)" fg:x="222223163" fg:w="18977541"/><text x="43.4801%" y="943.50">&lt;&amp;mu..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (18,977,541 samples, 3.69%)</title><rect x="43.2301%" y="917" width="3.6918%" height="15" fill="rgb(229,3,52)" fg:x="222223163" fg:w="18977541"/><text x="43.4801%" y="927.50">toki..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (18,977,541 samples, 3.69%)</title><rect x="43.2301%" y="901" width="3.6918%" height="15" fill="rgb(253,49,37)" fg:x="222223163" fg:w="18977541"/><text x="43.4801%" y="911.50">&lt;&amp;mi..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (18,977,541 samples, 3.69%)</title><rect x="43.2301%" y="885" width="3.6918%" height="15" fill="rgb(240,103,49)" fg:x="222223163" fg:w="18977541"/><text x="43.4801%" y="895.50">mio:..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (18,977,541 samples, 3.69%)</title><rect x="43.2301%" y="869" width="3.6918%" height="15" fill="rgb(250,182,30)" fg:x="222223163" fg:w="18977541"/><text x="43.4801%" y="879.50">mio:..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (18,977,541 samples, 3.69%)</title><rect x="43.2301%" y="853" width="3.6918%" height="15" fill="rgb(248,8,30)" fg:x="222223163" fg:w="18977541"/><text x="43.4801%" y="863.50">&lt;&amp;mi..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (18,977,541 samples, 3.69%)</title><rect x="43.2301%" y="837" width="3.6918%" height="15" fill="rgb(237,120,30)" fg:x="222223163" fg:w="18977541"/><text x="43.4801%" y="847.50">&lt;&amp;st..</text></g><g><title>std::sys::net::connection::socket::TcpStream::read (18,977,541 samples, 3.69%)</title><rect x="43.2301%" y="821" width="3.6918%" height="15" fill="rgb(221,146,34)" fg:x="222223163" fg:w="18977541"/><text x="43.4801%" y="831.50">std:..</text></g><g><title>std::sys::net::connection::socket::unix::Socket::read (18,977,541 samples, 3.69%)</title><rect x="43.2301%" y="805" width="3.6918%" height="15" fill="rgb(242,55,13)" fg:x="222223163" fg:w="18977541"/><text x="43.4801%" y="815.50">std:..</text></g><g><title>std::sys::net::connection::socket::unix::Socket::recv_with_flags (18,977,541 samples, 3.69%)</title><rect x="43.2301%" y="789" width="3.6918%" height="15" fill="rgb(242,112,31)" fg:x="222223163" fg:w="18977541"/><text x="43.4801%" y="799.50">std:..</text></g><g><title>__libc_recv (18,977,541 samples, 3.69%)</title><rect x="43.2301%" y="773" width="3.6918%" height="15" fill="rgb(249,192,27)" fg:x="222223163" fg:w="18977541"/><text x="43.4801%" y="783.50">__li..</text></g><g><title>el0t_64_sync_handler (17,785,597 samples, 3.46%)</title><rect x="43.4620%" y="757" width="3.4599%" height="15" fill="rgb(208,204,44)" fg:x="223415107" fg:w="17785597"/><text x="43.7120%" y="767.50">el0..</text></g><g><title>el0_svc (17,785,597 samples, 3.46%)</title><rect x="43.4620%" y="741" width="3.4599%" height="15" fill="rgb(208,93,54)" fg:x="223415107" fg:w="17785597"/><text x="43.7120%" y="751.50">el0..</text></g><g><title>do_el0_svc (17,785,597 samples, 3.46%)</title><rect x="43.4620%" y="725" width="3.4599%" height="15" fill="rgb(242,1,31)" fg:x="223415107" fg:w="17785597"/><text x="43.7120%" y="735.50">do_..</text></g><g><title>el0_svc_common.constprop.0 (17,785,597 samples, 3.46%)</title><rect x="43.4620%" y="709" width="3.4599%" height="15" fill="rgb(241,83,25)" fg:x="223415107" fg:w="17785597"/><text x="43.7120%" y="719.50">el0..</text></g><g><title>invoke_syscall (17,089,037 samples, 3.32%)</title><rect x="43.5975%" y="693" width="3.3244%" height="15" fill="rgb(205,169,50)" fg:x="224111667" fg:w="17089037"/><text x="43.8475%" y="703.50">inv..</text></g><g><title>__sys_recvfrom (532,797 samples, 0.10%)</title><rect x="46.8182%" y="677" width="0.1036%" height="15" fill="rgb(239,186,37)" fg:x="240667907" fg:w="532797"/><text x="47.0682%" y="687.50"></text></g><g><title>&lt;tokio_rustls::server::TlsStream&lt;IO&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (37,033,428 samples, 7.20%)</title><rect x="39.7968%" y="1029" width="7.2043%" height="15" fill="rgb(205,221,10)" fg:x="204574381" fg:w="37033428"/><text x="40.0468%" y="1039.50">&lt;tokio_rus..</text></g><g><title>tokio_rustls::common::Stream&lt;IO,C&gt;::poll_fill_buf (37,033,428 samples, 7.20%)</title><rect x="39.7968%" y="1013" width="7.2043%" height="15" fill="rgb(218,196,15)" fg:x="204574381" fg:w="37033428"/><text x="40.0468%" y="1023.50">tokio_rust..</text></g><g><title>tokio_rustls::common::Stream&lt;IO,C&gt;::read_io (33,571,903 samples, 6.53%)</title><rect x="40.4702%" y="997" width="6.5309%" height="15" fill="rgb(218,196,35)" fg:x="208035906" fg:w="33571903"/><text x="40.7202%" y="1007.50">tokio_rus..</text></g><g><title>rustls::conn::ConnectionCommon&lt;Data&gt;::read_tls (21,286,658 samples, 4.14%)</title><rect x="42.8601%" y="981" width="4.1410%" height="15" fill="rgb(233,63,24)" fg:x="220321151" fg:w="21286658"/><text x="43.1101%" y="991.50">rustl..</text></g><g><title>rustls::msgs::deframer::buffers::DeframerVecBuffer::read (20,592,544 samples, 4.01%)</title><rect x="42.9951%" y="965" width="4.0060%" height="15" fill="rgb(225,8,4)" fg:x="221015265" fg:w="20592544"/><text x="43.2451%" y="975.50">rust..</text></g><g><title>rustls::msgs::deframer::buffers::DeframerVecBuffer::prepare_read (407,105 samples, 0.08%)</title><rect x="46.9219%" y="949" width="0.0792%" height="15" fill="rgb(234,105,35)" fg:x="241200704" fg:w="407105"/><text x="47.1719%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (407,105 samples, 0.08%)</title><rect x="46.9219%" y="933" width="0.0792%" height="15" fill="rgb(236,21,32)" fg:x="241200704" fg:w="407105"/><text x="47.1719%" y="943.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (37,974,465 samples, 7.39%)</title><rect x="39.7968%" y="1093" width="7.3873%" height="15" fill="rgb(228,109,6)" fg:x="204574381" fg:w="37974465"/><text x="40.0468%" y="1103.50">hyper::pro..</text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (37,974,465 samples, 7.39%)</title><rect x="39.7968%" y="1077" width="7.3873%" height="15" fill="rgb(229,215,31)" fg:x="204574381" fg:w="37974465"/><text x="40.0468%" y="1087.50">&lt;hyper_uti..</text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (37,974,465 samples, 7.39%)</title><rect x="39.7968%" y="1061" width="7.3873%" height="15" fill="rgb(221,52,54)" fg:x="204574381" fg:w="37974465"/><text x="40.0468%" y="1071.50">&lt;hyper_uti..</text></g><g><title>&lt;tokio_rustls::server::TlsStream&lt;IO&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (37,974,465 samples, 7.39%)</title><rect x="39.7968%" y="1045" width="7.3873%" height="15" fill="rgb(252,129,43)" fg:x="204574381" fg:w="37974465"/><text x="40.0468%" y="1055.50">&lt;tokio_rus..</text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (941,037 samples, 0.18%)</title><rect x="47.0011%" y="1029" width="0.1831%" height="15" fill="rgb(248,183,27)" fg:x="241607809" fg:w="941037"/><text x="47.2511%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (941,037 samples, 0.18%)</title><rect x="47.0011%" y="1013" width="0.1831%" height="15" fill="rgb(250,0,22)" fg:x="241607809" fg:w="941037"/><text x="47.2511%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (941,037 samples, 0.18%)</title><rect x="47.0011%" y="997" width="0.1831%" height="15" fill="rgb(213,166,10)" fg:x="241607809" fg:w="941037"/><text x="47.2511%" y="1007.50"></text></g><g><title>__GI___memcpy_simd (941,037 samples, 0.18%)</title><rect x="47.0011%" y="981" width="0.1831%" height="15" fill="rgb(207,163,36)" fg:x="241607809" fg:w="941037"/><text x="47.2511%" y="991.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (426,262 samples, 0.08%)</title><rect x="47.6679%" y="1061" width="0.0829%" height="15" fill="rgb(208,122,22)" fg:x="245035623" fg:w="426262"/><text x="47.9179%" y="1071.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (426,262 samples, 0.08%)</title><rect x="47.6679%" y="1045" width="0.0829%" height="15" fill="rgb(207,104,49)" fg:x="245035623" fg:w="426262"/><text x="47.9179%" y="1055.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (426,262 samples, 0.08%)</title><rect x="47.6679%" y="1029" width="0.0829%" height="15" fill="rgb(248,211,50)" fg:x="245035623" fg:w="426262"/><text x="47.9179%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (426,262 samples, 0.08%)</title><rect x="47.6679%" y="1013" width="0.0829%" height="15" fill="rgb(217,13,45)" fg:x="245035623" fg:w="426262"/><text x="47.9179%" y="1023.50"></text></g><g><title>alloc::alloc::exchange_malloc (426,262 samples, 0.08%)</title><rect x="47.6679%" y="997" width="0.0829%" height="15" fill="rgb(211,216,49)" fg:x="245035623" fg:w="426262"/><text x="47.9179%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (426,262 samples, 0.08%)</title><rect x="47.6679%" y="981" width="0.0829%" height="15" fill="rgb(221,58,53)" fg:x="245035623" fg:w="426262"/><text x="47.9179%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (426,262 samples, 0.08%)</title><rect x="47.6679%" y="965" width="0.0829%" height="15" fill="rgb(220,112,41)" fg:x="245035623" fg:w="426262"/><text x="47.9179%" y="975.50"></text></g><g><title>alloc::alloc::alloc (426,262 samples, 0.08%)</title><rect x="47.6679%" y="949" width="0.0829%" height="15" fill="rgb(236,38,28)" fg:x="245035623" fg:w="426262"/><text x="47.9179%" y="959.50"></text></g><g><title>__GI___libc_malloc (426,262 samples, 0.08%)</title><rect x="47.6679%" y="933" width="0.0829%" height="15" fill="rgb(227,195,22)" fg:x="245035623" fg:w="426262"/><text x="47.9179%" y="943.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_insert_entry (2,750,605 samples, 0.54%)</title><rect x="47.7508%" y="997" width="0.5351%" height="15" fill="rgb(214,55,33)" fg:x="245461885" fg:w="2750605"/><text x="48.0008%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (544,923 samples, 0.11%)</title><rect x="48.1799%" y="981" width="0.1060%" height="15" fill="rgb(248,80,13)" fg:x="247667567" fg:w="544923"/><text x="48.4299%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (544,923 samples, 0.11%)</title><rect x="48.1799%" y="965" width="0.1060%" height="15" fill="rgb(238,52,6)" fg:x="247667567" fg:w="544923"/><text x="48.4299%" y="975.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (692,582 samples, 0.13%)</title><rect x="48.2859%" y="997" width="0.1347%" height="15" fill="rgb(224,198,47)" fg:x="248212490" fg:w="692582"/><text x="48.5359%" y="1007.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append (5,977,368 samples, 1.16%)</title><rect x="47.7508%" y="1061" width="1.1628%" height="15" fill="rgb(233,171,20)" fg:x="245461885" fg:w="5977368"/><text x="48.0008%" y="1071.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append (5,977,368 samples, 1.16%)</title><rect x="47.7508%" y="1045" width="1.1628%" height="15" fill="rgb(241,30,25)" fg:x="245461885" fg:w="5977368"/><text x="48.0008%" y="1055.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::try_append (5,977,368 samples, 1.16%)</title><rect x="47.7508%" y="1029" width="1.1628%" height="15" fill="rgb(207,171,38)" fg:x="245461885" fg:w="5977368"/><text x="48.0008%" y="1039.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append2 (5,977,368 samples, 1.16%)</title><rect x="47.7508%" y="1013" width="1.1628%" height="15" fill="rgb(234,70,1)" fg:x="245461885" fg:w="5977368"/><text x="48.0008%" y="1023.50"></text></g><g><title>http::header::map::Pos::resolve (2,534,181 samples, 0.49%)</title><rect x="48.4206%" y="997" width="0.4930%" height="15" fill="rgb(232,178,18)" fg:x="248905072" fg:w="2534181"/><text x="48.6706%" y="1007.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (1,239,099 samples, 0.24%)</title><rect x="49.0127%" y="1045" width="0.2410%" height="15" fill="rgb(241,78,40)" fg:x="251948383" fg:w="1239099"/><text x="49.2627%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,239,099 samples, 0.24%)</title><rect x="49.0127%" y="1029" width="0.2410%" height="15" fill="rgb(222,35,25)" fg:x="251948383" fg:w="1239099"/><text x="49.2627%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,239,099 samples, 0.24%)</title><rect x="49.0127%" y="1013" width="0.2410%" height="15" fill="rgb(207,92,16)" fg:x="251948383" fg:w="1239099"/><text x="49.2627%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (1,239,099 samples, 0.24%)</title><rect x="49.0127%" y="997" width="0.2410%" height="15" fill="rgb(216,59,51)" fg:x="251948383" fg:w="1239099"/><text x="49.2627%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,239,099 samples, 0.24%)</title><rect x="49.0127%" y="981" width="0.2410%" height="15" fill="rgb(213,80,28)" fg:x="251948383" fg:w="1239099"/><text x="49.2627%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,239,099 samples, 0.24%)</title><rect x="49.0127%" y="965" width="0.2410%" height="15" fill="rgb(220,93,7)" fg:x="251948383" fg:w="1239099"/><text x="49.2627%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,239,099 samples, 0.24%)</title><rect x="49.0127%" y="949" width="0.2410%" height="15" fill="rgb(225,24,44)" fg:x="251948383" fg:w="1239099"/><text x="49.2627%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,239,099 samples, 0.24%)</title><rect x="49.0127%" y="933" width="0.2410%" height="15" fill="rgb(243,74,40)" fg:x="251948383" fg:w="1239099"/><text x="49.2627%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,239,099 samples, 0.24%)</title><rect x="49.0127%" y="917" width="0.2410%" height="15" fill="rgb(228,39,7)" fg:x="251948383" fg:w="1239099"/><text x="49.2627%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,239,099 samples, 0.24%)</title><rect x="49.0127%" y="901" width="0.2410%" height="15" fill="rgb(227,79,8)" fg:x="251948383" fg:w="1239099"/><text x="49.2627%" y="911.50"></text></g><g><title>alloc::alloc::alloc (1,239,099 samples, 0.24%)</title><rect x="49.0127%" y="885" width="0.2410%" height="15" fill="rgb(236,58,11)" fg:x="251948383" fg:w="1239099"/><text x="49.2627%" y="895.50"></text></g><g><title>__GI___libc_malloc (1,239,099 samples, 0.24%)</title><rect x="49.0127%" y="869" width="0.2410%" height="15" fill="rgb(249,63,35)" fg:x="251948383" fg:w="1239099"/><text x="49.2627%" y="879.50"></text></g><g><title>http::header::name::HeaderName::from_bytes (5,362,412 samples, 1.04%)</title><rect x="48.9136%" y="1061" width="1.0432%" height="15" fill="rgb(252,114,16)" fg:x="251439253" fg:w="5362412"/><text x="49.1636%" y="1071.50"></text></g><g><title>http::header::name::parse_hdr (3,614,183 samples, 0.70%)</title><rect x="49.2537%" y="1045" width="0.7031%" height="15" fill="rgb(254,151,24)" fg:x="253187482" fg:w="3614183"/><text x="49.5037%" y="1055.50"></text></g><g><title>http::header::name::StandardHeader::from_bytes (3,614,183 samples, 0.70%)</title><rect x="49.2537%" y="1029" width="0.7031%" height="15" fill="rgb(253,54,39)" fg:x="253187482" fg:w="3614183"/><text x="49.5037%" y="1039.50"></text></g><g><title>http::method::Method::from_bytes (389,144 samples, 0.08%)</title><rect x="49.9568%" y="1061" width="0.0757%" height="15" fill="rgb(243,25,45)" fg:x="256801665" fg:w="389144"/><text x="50.2068%" y="1071.50"></text></g><g><title>&lt;httparse::iter::Bytes as core::iter::traits::iterator::Iterator&gt;::next (483,977 samples, 0.09%)</title><rect x="50.3949%" y="1029" width="0.0942%" height="15" fill="rgb(234,134,9)" fg:x="259053700" fg:w="483977"/><text x="50.6449%" y="1039.50"></text></g><g><title>&lt;httparse::iter::Bytes as core::iter::traits::iterator::Iterator&gt;::next (751,983 samples, 0.15%)</title><rect x="50.5409%" y="1013" width="0.1463%" height="15" fill="rgb(227,166,31)" fg:x="259804044" fg:w="751983"/><text x="50.7909%" y="1023.50"></text></g><g><title>httparse::iter::Bytes::bump (751,983 samples, 0.15%)</title><rect x="50.5409%" y="997" width="0.1463%" height="15" fill="rgb(245,143,41)" fg:x="259804044" fg:w="751983"/><text x="50.7909%" y="1007.50"></text></g><g><title>httparse::iter::Bytes::advance (751,983 samples, 0.15%)</title><rect x="50.5409%" y="981" width="0.1463%" height="15" fill="rgb(238,181,32)" fg:x="259804044" fg:w="751983"/><text x="50.7909%" y="991.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (74,882,435 samples, 14.57%)</title><rect x="36.2362%" y="1157" width="14.5672%" height="15" fill="rgb(224,113,18)" fg:x="186271416" fg:w="74882435"/><text x="36.4862%" y="1167.50">hyper::proto::h1::disp..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (61,770,601 samples, 12.02%)</title><rect x="38.7869%" y="1141" width="12.0165%" height="15" fill="rgb(240,229,28)" fg:x="199383250" fg:w="61770601"/><text x="39.0369%" y="1151.50">hyper::proto::h1::..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (56,579,470 samples, 11.01%)</title><rect x="39.7968%" y="1125" width="11.0067%" height="15" fill="rgb(250,185,3)" fg:x="204574381" fg:w="56579470"/><text x="40.0468%" y="1135.50">hyper::proto::h1..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (56,579,470 samples, 11.01%)</title><rect x="39.7968%" y="1109" width="11.0067%" height="15" fill="rgb(212,59,25)" fg:x="204574381" fg:w="56579470"/><text x="40.0468%" y="1119.50">hyper::proto::h1..</text></g><g><title>hyper::proto::h1::role::parse_headers (18,605,005 samples, 3.62%)</title><rect x="47.1841%" y="1093" width="3.6193%" height="15" fill="rgb(221,87,20)" fg:x="242548846" fg:w="18605005"/><text x="47.4341%" y="1103.50">hype..</text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (17,978,951 samples, 3.50%)</title><rect x="47.3059%" y="1077" width="3.4975%" height="15" fill="rgb(213,74,28)" fg:x="243174900" fg:w="17978951"/><text x="47.5559%" y="1087.50">&lt;hy..</text></g><g><title>httparse::Request::parse_with_uninit_headers (3,963,042 samples, 0.77%)</title><rect x="50.0325%" y="1061" width="0.7709%" height="15" fill="rgb(224,132,34)" fg:x="257190809" fg:w="3963042"/><text x="50.2825%" y="1071.50"></text></g><g><title>httparse::Request::parse_with_config_and_uninit_headers (2,100,151 samples, 0.41%)</title><rect x="50.3949%" y="1045" width="0.4086%" height="15" fill="rgb(222,101,24)" fg:x="259053700" fg:w="2100151"/><text x="50.6449%" y="1055.50"></text></g><g><title>httparse::parse_headers_iter_uninit (1,616,174 samples, 0.31%)</title><rect x="50.4890%" y="1029" width="0.3144%" height="15" fill="rgb(254,142,4)" fg:x="259537677" fg:w="1616174"/><text x="50.7390%" y="1039.50"></text></g><g><title>httparse::simd::neon::match_header_value_vectored (597,824 samples, 0.12%)</title><rect x="50.6872%" y="1013" width="0.1163%" height="15" fill="rgb(230,229,49)" fg:x="260556027" fg:w="597824"/><text x="50.9372%" y="1023.50"></text></g><g><title>httparse::simd::neon::match_header_value_char_16_neon (597,824 samples, 0.12%)</title><rect x="50.6872%" y="997" width="0.1163%" height="15" fill="rgb(238,70,47)" fg:x="260556027" fg:w="597824"/><text x="50.9372%" y="1007.50"></text></g><g><title>httparse::simd::neon::offsetz (597,824 samples, 0.12%)</title><rect x="50.6872%" y="981" width="0.1163%" height="15" fill="rgb(231,160,17)" fg:x="260556027" fg:w="597824"/><text x="50.9372%" y="991.50"></text></g><g><title>httparse::simd::neon::offsetnz (597,824 samples, 0.12%)</title><rect x="50.6872%" y="965" width="0.1163%" height="15" fill="rgb(218,68,53)" fg:x="260556027" fg:w="597824"/><text x="50.9372%" y="975.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vgetq_lane_u64 (597,824 samples, 0.12%)</title><rect x="50.6872%" y="949" width="0.1163%" height="15" fill="rgb(236,111,10)" fg:x="260556027" fg:w="597824"/><text x="50.9372%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,717,545 samples, 0.33%)</title><rect x="51.3434%" y="901" width="0.3341%" height="15" fill="rgb(224,34,41)" fg:x="263929510" fg:w="1717545"/><text x="51.5934%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,717,545 samples, 0.33%)</title><rect x="51.3434%" y="885" width="0.3341%" height="15" fill="rgb(241,118,19)" fg:x="263929510" fg:w="1717545"/><text x="51.5934%" y="895.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,717,545 samples, 0.33%)</title><rect x="51.3434%" y="869" width="0.3341%" height="15" fill="rgb(238,129,25)" fg:x="263929510" fg:w="1717545"/><text x="51.5934%" y="879.50"></text></g><g><title>alloc::alloc::realloc (1,717,545 samples, 0.33%)</title><rect x="51.3434%" y="853" width="0.3341%" height="15" fill="rgb(238,22,31)" fg:x="263929510" fg:w="1717545"/><text x="51.5934%" y="863.50"></text></g><g><title>__realloc (1,717,545 samples, 0.33%)</title><rect x="51.3434%" y="837" width="0.3341%" height="15" fill="rgb(222,174,48)" fg:x="263929510" fg:w="1717545"/><text x="51.5934%" y="847.50"></text></g><g><title>_int_realloc (1,324,243 samples, 0.26%)</title><rect x="51.4199%" y="821" width="0.2576%" height="15" fill="rgb(206,152,40)" fg:x="264322812" fg:w="1324243"/><text x="51.6699%" y="831.50"></text></g><g><title>_int_malloc (1,324,243 samples, 0.26%)</title><rect x="51.4199%" y="805" width="0.2576%" height="15" fill="rgb(218,99,54)" fg:x="264322812" fg:w="1324243"/><text x="51.6699%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2,198,141 samples, 0.43%)</title><rect x="51.3434%" y="1029" width="0.4276%" height="15" fill="rgb(220,174,26)" fg:x="263929510" fg:w="2198141"/><text x="51.5934%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2,198,141 samples, 0.43%)</title><rect x="51.3434%" y="1013" width="0.4276%" height="15" fill="rgb(245,116,9)" fg:x="263929510" fg:w="2198141"/><text x="51.5934%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2,198,141 samples, 0.43%)</title><rect x="51.3434%" y="997" width="0.4276%" height="15" fill="rgb(209,72,35)" fg:x="263929510" fg:w="2198141"/><text x="51.5934%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,198,141 samples, 0.43%)</title><rect x="51.3434%" y="981" width="0.4276%" height="15" fill="rgb(226,126,21)" fg:x="263929510" fg:w="2198141"/><text x="51.5934%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,198,141 samples, 0.43%)</title><rect x="51.3434%" y="965" width="0.4276%" height="15" fill="rgb(227,192,1)" fg:x="263929510" fg:w="2198141"/><text x="51.5934%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (2,198,141 samples, 0.43%)</title><rect x="51.3434%" y="949" width="0.4276%" height="15" fill="rgb(237,180,29)" fg:x="263929510" fg:w="2198141"/><text x="51.5934%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2,198,141 samples, 0.43%)</title><rect x="51.3434%" y="933" width="0.4276%" height="15" fill="rgb(230,197,35)" fg:x="263929510" fg:w="2198141"/><text x="51.5934%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,198,141 samples, 0.43%)</title><rect x="51.3434%" y="917" width="0.4276%" height="15" fill="rgb(246,193,31)" fg:x="263929510" fg:w="2198141"/><text x="51.5934%" y="927.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (480,596 samples, 0.09%)</title><rect x="51.6775%" y="901" width="0.0935%" height="15" fill="rgb(241,36,4)" fg:x="265647055" fg:w="480596"/><text x="51.9275%" y="911.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2,744,773 samples, 0.53%)</title><rect x="51.3434%" y="1061" width="0.5340%" height="15" fill="rgb(241,130,17)" fg:x="263929510" fg:w="2744773"/><text x="51.5934%" y="1071.50"></text></g><g><title>sse_stream::&lt;impl core::convert::From&lt;sse_stream::Sse&gt; for bytes::bytes::Bytes&gt;::from (2,744,773 samples, 0.53%)</title><rect x="51.3434%" y="1045" width="0.5340%" height="15" fill="rgb(206,137,32)" fg:x="263929510" fg:w="2744773"/><text x="51.5934%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (546,632 samples, 0.11%)</title><rect x="51.7710%" y="1029" width="0.1063%" height="15" fill="rgb(237,228,51)" fg:x="266127651" fg:w="546632"/><text x="52.0210%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (546,632 samples, 0.11%)</title><rect x="51.7710%" y="1013" width="0.1063%" height="15" fill="rgb(243,6,42)" fg:x="266127651" fg:w="546632"/><text x="52.0210%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (546,632 samples, 0.11%)</title><rect x="51.7710%" y="997" width="0.1063%" height="15" fill="rgb(251,74,28)" fg:x="266127651" fg:w="546632"/><text x="52.0210%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (546,632 samples, 0.11%)</title><rect x="51.7710%" y="981" width="0.1063%" height="15" fill="rgb(218,20,49)" fg:x="266127651" fg:w="546632"/><text x="52.0210%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (546,632 samples, 0.11%)</title><rect x="51.7710%" y="965" width="0.1063%" height="15" fill="rgb(238,28,14)" fg:x="266127651" fg:w="546632"/><text x="52.0210%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (546,632 samples, 0.11%)</title><rect x="51.7710%" y="949" width="0.1063%" height="15" fill="rgb(229,40,46)" fg:x="266127651" fg:w="546632"/><text x="52.0210%" y="959.50"></text></g><g><title>alloc::alloc::Global::grow_impl (546,632 samples, 0.11%)</title><rect x="51.7710%" y="933" width="0.1063%" height="15" fill="rgb(244,195,20)" fg:x="266127651" fg:w="546632"/><text x="52.0210%" y="943.50"></text></g><g><title>alloc::alloc::realloc (546,632 samples, 0.11%)</title><rect x="51.7710%" y="917" width="0.1063%" height="15" fill="rgb(253,56,35)" fg:x="266127651" fg:w="546632"/><text x="52.0210%" y="927.50"></text></g><g><title>__realloc (546,632 samples, 0.11%)</title><rect x="51.7710%" y="901" width="0.1063%" height="15" fill="rgb(210,149,44)" fg:x="266127651" fg:w="546632"/><text x="52.0210%" y="911.50"></text></g><g><title>_int_realloc (546,632 samples, 0.11%)</title><rect x="51.7710%" y="885" width="0.1063%" height="15" fill="rgb(240,135,12)" fg:x="266127651" fg:w="546632"/><text x="52.0210%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rmcp::model::JsonRpcMessage&lt;rmcp::model::ServerRequest,rmcp::model::ServerResult,rmcp::model::ServerNotification&gt;&gt;&gt; (307,403 samples, 0.06%)</title><rect x="51.8774%" y="981" width="0.0598%" height="15" fill="rgb(251,24,50)" fg:x="266674283" fg:w="307403"/><text x="52.1274%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (307,403 samples, 0.06%)</title><rect x="51.8774%" y="965" width="0.0598%" height="15" fill="rgb(243,200,47)" fg:x="266674283" fg:w="307403"/><text x="52.1274%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (307,403 samples, 0.06%)</title><rect x="51.8774%" y="949" width="0.0598%" height="15" fill="rgb(224,166,26)" fg:x="266674283" fg:w="307403"/><text x="52.1274%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;rmcp::model::JsonRpcMessage&lt;rmcp::model::ServerRequest,rmcp::model::ServerResult,rmcp::model::ServerNotification&gt;&gt; (307,403 samples, 0.06%)</title><rect x="51.8774%" y="933" width="0.0598%" height="15" fill="rgb(233,0,47)" fg:x="266674283" fg:w="307403"/><text x="52.1274%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;rmcp::model::JsonRpcResponse&lt;rmcp::model::ServerResult&gt;&gt; (307,403 samples, 0.06%)</title><rect x="51.8774%" y="917" width="0.0598%" height="15" fill="rgb(253,80,5)" fg:x="266674283" fg:w="307403"/><text x="52.1274%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;rmcp::model::ServerResult&gt; (307,403 samples, 0.06%)</title><rect x="51.8774%" y="901" width="0.0598%" height="15" fill="rgb(214,133,25)" fg:x="266674283" fg:w="307403"/><text x="52.1274%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;rmcp::model::CallToolResult&gt; (307,403 samples, 0.06%)</title><rect x="51.8774%" y="885" width="0.0598%" height="15" fill="rgb(209,27,14)" fg:x="266674283" fg:w="307403"/><text x="52.1274%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rmcp::model::annotated::Annotated&lt;rmcp::model::content::RawContent&gt;&gt;&gt; (307,403 samples, 0.06%)</title><rect x="51.8774%" y="869" width="0.0598%" height="15" fill="rgb(219,102,51)" fg:x="266674283" fg:w="307403"/><text x="52.1274%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (307,403 samples, 0.06%)</title><rect x="51.8774%" y="853" width="0.0598%" height="15" fill="rgb(237,18,16)" fg:x="266674283" fg:w="307403"/><text x="52.1274%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rmcp::model::annotated::Annotated&lt;rmcp::model::content::RawContent&gt;]&gt; (307,403 samples, 0.06%)</title><rect x="51.8774%" y="837" width="0.0598%" height="15" fill="rgb(241,85,17)" fg:x="266674283" fg:w="307403"/><text x="52.1274%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;rmcp::model::annotated::Annotated&lt;rmcp::model::content::RawContent&gt;&gt; (307,403 samples, 0.06%)</title><rect x="51.8774%" y="821" width="0.0598%" height="15" fill="rgb(236,90,42)" fg:x="266674283" fg:w="307403"/><text x="52.1274%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (494,507 samples, 0.10%)</title><rect x="51.9372%" y="869" width="0.0962%" height="15" fill="rgb(249,57,21)" fg:x="266981686" fg:w="494507"/><text x="52.1872%" y="879.50"></text></g><g><title>&lt;serde_json::ser::State as core::cmp::PartialEq&gt;::eq (394,950 samples, 0.08%)</title><rect x="52.0334%" y="533" width="0.0768%" height="15" fill="rgb(243,12,36)" fg:x="267476193" fg:w="394950"/><text x="52.2834%" y="543.50"></text></g><g><title>serde::__private::ser::serialize_tagged_newtype (1,045,847 samples, 0.20%)</title><rect x="52.0334%" y="629" width="0.2035%" height="15" fill="rgb(253,128,47)" fg:x="267476193" fg:w="1045847"/><text x="52.2834%" y="639.50"></text></g><g><title>rmcp::model::content::_::&lt;impl serde::ser::Serialize for rmcp::model::content::RawTextContent&gt;::serialize (1,045,847 samples, 0.20%)</title><rect x="52.0334%" y="613" width="0.2035%" height="15" fill="rgb(207,33,20)" fg:x="267476193" fg:w="1045847"/><text x="52.2834%" y="623.50"></text></g><g><title>&lt;serde::__private::ser::TaggedSerializer&lt;S&gt; as serde::ser::Serializer&gt;::serialize_struct (1,045,847 samples, 0.20%)</title><rect x="52.0334%" y="597" width="0.2035%" height="15" fill="rgb(233,215,35)" fg:x="267476193" fg:w="1045847"/><text x="52.2834%" y="607.50"></text></g><g><title>&lt;serde::__private::ser::FlatMapSerializeStruct&lt;M&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1,045,847 samples, 0.20%)</title><rect x="52.0334%" y="581" width="0.2035%" height="15" fill="rgb(249,188,52)" fg:x="267476193" fg:w="1045847"/><text x="52.2834%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1,045,847 samples, 0.20%)</title><rect x="52.0334%" y="565" width="0.2035%" height="15" fill="rgb(225,12,32)" fg:x="267476193" fg:w="1045847"/><text x="52.2834%" y="575.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1,045,847 samples, 0.20%)</title><rect x="52.0334%" y="549" width="0.2035%" height="15" fill="rgb(247,98,14)" fg:x="267476193" fg:w="1045847"/><text x="52.2834%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (650,897 samples, 0.13%)</title><rect x="52.1102%" y="533" width="0.1266%" height="15" fill="rgb(247,219,48)" fg:x="267871143" fg:w="650897"/><text x="52.3602%" y="543.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (650,897 samples, 0.13%)</title><rect x="52.1102%" y="517" width="0.1266%" height="15" fill="rgb(253,60,48)" fg:x="267871143" fg:w="650897"/><text x="52.3602%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (650,897 samples, 0.13%)</title><rect x="52.1102%" y="501" width="0.1266%" height="15" fill="rgb(245,15,52)" fg:x="267871143" fg:w="650897"/><text x="52.3602%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (650,897 samples, 0.13%)</title><rect x="52.1102%" y="485" width="0.1266%" height="15" fill="rgb(220,133,28)" fg:x="267871143" fg:w="650897"/><text x="52.3602%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (650,897 samples, 0.13%)</title><rect x="52.1102%" y="469" width="0.1266%" height="15" fill="rgb(217,180,4)" fg:x="267871143" fg:w="650897"/><text x="52.3602%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (650,897 samples, 0.13%)</title><rect x="52.1102%" y="453" width="0.1266%" height="15" fill="rgb(251,24,1)" fg:x="267871143" fg:w="650897"/><text x="52.3602%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (650,897 samples, 0.13%)</title><rect x="52.1102%" y="437" width="0.1266%" height="15" fill="rgb(212,185,49)" fg:x="267871143" fg:w="650897"/><text x="52.3602%" y="447.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (650,897 samples, 0.13%)</title><rect x="52.1102%" y="421" width="0.1266%" height="15" fill="rgb(215,175,22)" fg:x="267871143" fg:w="650897"/><text x="52.3602%" y="431.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (611,330 samples, 0.12%)</title><rect x="52.2368%" y="549" width="0.1189%" height="15" fill="rgb(250,205,14)" fg:x="268522040" fg:w="611330"/><text x="52.4868%" y="559.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (611,330 samples, 0.12%)</title><rect x="52.2368%" y="533" width="0.1189%" height="15" fill="rgb(225,211,22)" fg:x="268522040" fg:w="611330"/><text x="52.4868%" y="543.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (611,330 samples, 0.12%)</title><rect x="52.2368%" y="517" width="0.1189%" height="15" fill="rgb(251,179,42)" fg:x="268522040" fg:w="611330"/><text x="52.4868%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (611,330 samples, 0.12%)</title><rect x="52.2368%" y="501" width="0.1189%" height="15" fill="rgb(208,216,51)" fg:x="268522040" fg:w="611330"/><text x="52.4868%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (611,330 samples, 0.12%)</title><rect x="52.2368%" y="485" width="0.1189%" height="15" fill="rgb(235,36,11)" fg:x="268522040" fg:w="611330"/><text x="52.4868%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (611,330 samples, 0.12%)</title><rect x="52.2368%" y="469" width="0.1189%" height="15" fill="rgb(213,189,28)" fg:x="268522040" fg:w="611330"/><text x="52.4868%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (611,330 samples, 0.12%)</title><rect x="52.2368%" y="453" width="0.1189%" height="15" fill="rgb(227,203,42)" fg:x="268522040" fg:w="611330"/><text x="52.4868%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (611,330 samples, 0.12%)</title><rect x="52.2368%" y="437" width="0.1189%" height="15" fill="rgb(244,72,36)" fg:x="268522040" fg:w="611330"/><text x="52.4868%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (611,330 samples, 0.12%)</title><rect x="52.2368%" y="421" width="0.1189%" height="15" fill="rgb(213,53,17)" fg:x="268522040" fg:w="611330"/><text x="52.4868%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (611,330 samples, 0.12%)</title><rect x="52.2368%" y="405" width="0.1189%" height="15" fill="rgb(207,167,3)" fg:x="268522040" fg:w="611330"/><text x="52.4868%" y="415.50"></text></g><g><title>rmcp::model::_::&lt;impl serde::ser::Serialize for rmcp::model::ServerResult&gt;::serialize (2,666,623 samples, 0.52%)</title><rect x="51.9372%" y="885" width="0.5188%" height="15" fill="rgb(216,98,30)" fg:x="266981686" fg:w="2666623"/><text x="52.1872%" y="895.50"></text></g><g><title>rmcp::model::_::&lt;impl serde::ser::Serialize for rmcp::model::CallToolResult&gt;::serialize (2,172,116 samples, 0.42%)</title><rect x="52.0334%" y="869" width="0.4226%" height="15" fill="rgb(236,123,15)" fg:x="267476193" fg:w="2172116"/><text x="52.2834%" y="879.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2,172,116 samples, 0.42%)</title><rect x="52.0334%" y="853" width="0.4226%" height="15" fill="rgb(248,81,50)" fg:x="267476193" fg:w="2172116"/><text x="52.2834%" y="863.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2,172,116 samples, 0.42%)</title><rect x="52.0334%" y="837" width="0.4226%" height="15" fill="rgb(214,120,4)" fg:x="267476193" fg:w="2172116"/><text x="52.2834%" y="847.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2,172,116 samples, 0.42%)</title><rect x="52.0334%" y="821" width="0.4226%" height="15" fill="rgb(208,179,34)" fg:x="267476193" fg:w="2172116"/><text x="52.2834%" y="831.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (2,172,116 samples, 0.42%)</title><rect x="52.0334%" y="805" width="0.4226%" height="15" fill="rgb(227,140,7)" fg:x="267476193" fg:w="2172116"/><text x="52.2834%" y="815.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2,172,116 samples, 0.42%)</title><rect x="52.0334%" y="789" width="0.4226%" height="15" fill="rgb(214,22,6)" fg:x="267476193" fg:w="2172116"/><text x="52.2834%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2,172,116 samples, 0.42%)</title><rect x="52.0334%" y="773" width="0.4226%" height="15" fill="rgb(207,137,27)" fg:x="267476193" fg:w="2172116"/><text x="52.2834%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,172,116 samples, 0.42%)</title><rect x="52.0334%" y="757" width="0.4226%" height="15" fill="rgb(210,8,46)" fg:x="267476193" fg:w="2172116"/><text x="52.2834%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (2,172,116 samples, 0.42%)</title><rect x="52.0334%" y="741" width="0.4226%" height="15" fill="rgb(240,16,54)" fg:x="267476193" fg:w="2172116"/><text x="52.2834%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (2,172,116 samples, 0.42%)</title><rect x="52.0334%" y="725" width="0.4226%" height="15" fill="rgb(211,209,29)" fg:x="267476193" fg:w="2172116"/><text x="52.2834%" y="735.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (2,172,116 samples, 0.42%)</title><rect x="52.0334%" y="709" width="0.4226%" height="15" fill="rgb(226,228,24)" fg:x="267476193" fg:w="2172116"/><text x="52.2834%" y="719.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2,172,116 samples, 0.42%)</title><rect x="52.0334%" y="693" width="0.4226%" height="15" fill="rgb(222,84,9)" fg:x="267476193" fg:w="2172116"/><text x="52.2834%" y="703.50"></text></g><g><title>rmcp::model::annotated::_::&lt;impl serde::ser::Serialize for rmcp::model::annotated::Annotated&lt;T&gt;&gt;::serialize (2,172,116 samples, 0.42%)</title><rect x="52.0334%" y="677" width="0.4226%" height="15" fill="rgb(234,203,30)" fg:x="267476193" fg:w="2172116"/><text x="52.2834%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2,172,116 samples, 0.42%)</title><rect x="52.0334%" y="661" width="0.4226%" height="15" fill="rgb(238,109,14)" fg:x="267476193" fg:w="2172116"/><text x="52.2834%" y="671.50"></text></g><g><title>rmcp::model::content::_::&lt;impl serde::ser::Serialize for rmcp::model::content::RawContent&gt;::serialize (2,172,116 samples, 0.42%)</title><rect x="52.0334%" y="645" width="0.4226%" height="15" fill="rgb(233,206,34)" fg:x="267476193" fg:w="2172116"/><text x="52.2834%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1,126,269 samples, 0.22%)</title><rect x="52.2368%" y="629" width="0.2191%" height="15" fill="rgb(220,167,47)" fg:x="268522040" fg:w="1126269"/><text x="52.4868%" y="639.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1,126,269 samples, 0.22%)</title><rect x="52.2368%" y="613" width="0.2191%" height="15" fill="rgb(238,105,10)" fg:x="268522040" fg:w="1126269"/><text x="52.4868%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (1,126,269 samples, 0.22%)</title><rect x="52.2368%" y="597" width="0.2191%" height="15" fill="rgb(213,227,17)" fg:x="268522040" fg:w="1126269"/><text x="52.4868%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1,126,269 samples, 0.22%)</title><rect x="52.2368%" y="581" width="0.2191%" height="15" fill="rgb(217,132,38)" fg:x="268522040" fg:w="1126269"/><text x="52.4868%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1,126,269 samples, 0.22%)</title><rect x="52.2368%" y="565" width="0.2191%" height="15" fill="rgb(242,146,4)" fg:x="268522040" fg:w="1126269"/><text x="52.4868%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (514,939 samples, 0.10%)</title><rect x="52.3557%" y="549" width="0.1002%" height="15" fill="rgb(212,61,9)" fg:x="269133370" fg:w="514939"/><text x="52.6057%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (514,939 samples, 0.10%)</title><rect x="52.3557%" y="533" width="0.1002%" height="15" fill="rgb(247,126,22)" fg:x="269133370" fg:w="514939"/><text x="52.6057%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (514,939 samples, 0.10%)</title><rect x="52.3557%" y="517" width="0.1002%" height="15" fill="rgb(220,196,2)" fg:x="269133370" fg:w="514939"/><text x="52.6057%" y="527.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (514,939 samples, 0.10%)</title><rect x="52.3557%" y="501" width="0.1002%" height="15" fill="rgb(208,46,4)" fg:x="269133370" fg:w="514939"/><text x="52.6057%" y="511.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (451,044 samples, 0.09%)</title><rect x="52.5421%" y="869" width="0.0877%" height="15" fill="rgb(252,104,46)" fg:x="270091228" fg:w="451044"/><text x="52.7921%" y="879.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (451,044 samples, 0.09%)</title><rect x="52.5421%" y="853" width="0.0877%" height="15" fill="rgb(237,152,48)" fg:x="270091228" fg:w="451044"/><text x="52.7921%" y="863.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (451,044 samples, 0.09%)</title><rect x="52.5421%" y="837" width="0.0877%" height="15" fill="rgb(221,59,37)" fg:x="270091228" fg:w="451044"/><text x="52.7921%" y="847.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (451,044 samples, 0.09%)</title><rect x="52.5421%" y="821" width="0.0877%" height="15" fill="rgb(209,202,51)" fg:x="270091228" fg:w="451044"/><text x="52.7921%" y="831.50"></text></g><g><title>serde_json::ser::format_escaped_str (451,044 samples, 0.09%)</title><rect x="52.5421%" y="805" width="0.0877%" height="15" fill="rgb(228,81,30)" fg:x="270091228" fg:w="451044"/><text x="52.7921%" y="815.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (451,044 samples, 0.09%)</title><rect x="52.5421%" y="789" width="0.0877%" height="15" fill="rgb(227,42,39)" fg:x="270091228" fg:w="451044"/><text x="52.7921%" y="799.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (451,044 samples, 0.09%)</title><rect x="52.5421%" y="773" width="0.0877%" height="15" fill="rgb(221,26,2)" fg:x="270091228" fg:w="451044"/><text x="52.7921%" y="783.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (451,044 samples, 0.09%)</title><rect x="52.5421%" y="757" width="0.0877%" height="15" fill="rgb(254,61,31)" fg:x="270091228" fg:w="451044"/><text x="52.7921%" y="767.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (451,044 samples, 0.09%)</title><rect x="52.5421%" y="741" width="0.0877%" height="15" fill="rgb(222,173,38)" fg:x="270091228" fg:w="451044"/><text x="52.7921%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (451,044 samples, 0.09%)</title><rect x="52.5421%" y="725" width="0.0877%" height="15" fill="rgb(218,50,12)" fg:x="270091228" fg:w="451044"/><text x="52.7921%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (451,044 samples, 0.09%)</title><rect x="52.5421%" y="709" width="0.0877%" height="15" fill="rgb(223,88,40)" fg:x="270091228" fg:w="451044"/><text x="52.7921%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (451,044 samples, 0.09%)</title><rect x="52.5421%" y="693" width="0.0877%" height="15" fill="rgb(237,54,19)" fg:x="270091228" fg:w="451044"/><text x="52.7921%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (451,044 samples, 0.09%)</title><rect x="52.5421%" y="677" width="0.0877%" height="15" fill="rgb(251,129,25)" fg:x="270091228" fg:w="451044"/><text x="52.7921%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (451,044 samples, 0.09%)</title><rect x="52.5421%" y="661" width="0.0877%" height="15" fill="rgb(238,97,19)" fg:x="270091228" fg:w="451044"/><text x="52.7921%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (451,044 samples, 0.09%)</title><rect x="52.5421%" y="645" width="0.0877%" height="15" fill="rgb(240,169,18)" fg:x="270091228" fg:w="451044"/><text x="52.7921%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (451,044 samples, 0.09%)</title><rect x="52.5421%" y="629" width="0.0877%" height="15" fill="rgb(230,187,49)" fg:x="270091228" fg:w="451044"/><text x="52.7921%" y="639.50"></text></g><g><title>&lt;axum_core::body::Body as http_body::Body&gt;::poll_frame (8,350,251 samples, 1.62%)</title><rect x="51.2457%" y="1141" width="1.6244%" height="15" fill="rgb(209,44,26)" fg:x="263427324" fg:w="8350251"/><text x="51.4957%" y="1151.50"></text></g><g><title>&lt;http_body_util::combinators::box_body::UnsyncBoxBody&lt;D,E&gt; as http_body::Body&gt;::poll_frame (8,350,251 samples, 1.62%)</title><rect x="51.2457%" y="1125" width="1.6244%" height="15" fill="rgb(244,0,6)" fg:x="263427324" fg:w="8350251"/><text x="51.4957%" y="1135.50"></text></g><g><title>&lt;http_body_util::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::poll_frame (7,848,065 samples, 1.53%)</title><rect x="51.3434%" y="1109" width="1.5267%" height="15" fill="rgb(248,18,21)" fg:x="263929510" fg:w="7848065"/><text x="51.5934%" y="1119.50"></text></g><g><title>&lt;http_body_util::combinators::box_body::BoxBody&lt;D,E&gt; as http_body::Body&gt;::poll_frame (7,848,065 samples, 1.53%)</title><rect x="51.3434%" y="1093" width="1.5267%" height="15" fill="rgb(245,180,19)" fg:x="263929510" fg:w="7848065"/><text x="51.5934%" y="1103.50"></text></g><g><title>&lt;sse_stream::body::SseBody&lt;S,T&gt; as http_body::Body&gt;::poll_frame (7,848,065 samples, 1.53%)</title><rect x="51.3434%" y="1077" width="1.5267%" height="15" fill="rgb(252,118,36)" fg:x="263929510" fg:w="7848065"/><text x="51.5934%" y="1087.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,103,292 samples, 0.99%)</title><rect x="51.8774%" y="1061" width="0.9928%" height="15" fill="rgb(210,224,19)" fg:x="266674283" fg:w="5103292"/><text x="52.1274%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5,103,292 samples, 0.99%)</title><rect x="51.8774%" y="1045" width="0.9928%" height="15" fill="rgb(218,30,24)" fg:x="266674283" fg:w="5103292"/><text x="52.1274%" y="1055.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (5,103,292 samples, 0.99%)</title><rect x="51.8774%" y="1029" width="0.9928%" height="15" fill="rgb(219,75,50)" fg:x="266674283" fg:w="5103292"/><text x="52.1274%" y="1039.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (5,103,292 samples, 0.99%)</title><rect x="51.8774%" y="1013" width="0.9928%" height="15" fill="rgb(234,72,50)" fg:x="266674283" fg:w="5103292"/><text x="52.1274%" y="1023.50"></text></g><g><title>rmcp::transport::common::server_side_http::sse_stream_response::{{closure}} (5,103,292 samples, 0.99%)</title><rect x="51.8774%" y="997" width="0.9928%" height="15" fill="rgb(219,100,48)" fg:x="266674283" fg:w="5103292"/><text x="52.1274%" y="1007.50"></text></g><g><title>serde_json::ser::to_string (4,795,889 samples, 0.93%)</title><rect x="51.9372%" y="981" width="0.9330%" height="15" fill="rgb(253,5,41)" fg:x="266981686" fg:w="4795889"/><text x="52.1872%" y="991.50"></text></g><g><title>serde_json::ser::to_vec (4,795,889 samples, 0.93%)</title><rect x="51.9372%" y="965" width="0.9330%" height="15" fill="rgb(247,181,11)" fg:x="266981686" fg:w="4795889"/><text x="52.1872%" y="975.50"></text></g><g><title>serde_json::ser::to_writer (4,795,889 samples, 0.93%)</title><rect x="51.9372%" y="949" width="0.9330%" height="15" fill="rgb(222,223,25)" fg:x="266981686" fg:w="4795889"/><text x="52.1872%" y="959.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::sync::Arc&lt;T&gt;&gt;::serialize (4,795,889 samples, 0.93%)</title><rect x="51.9372%" y="933" width="0.9330%" height="15" fill="rgb(214,198,28)" fg:x="266981686" fg:w="4795889"/><text x="52.1872%" y="943.50"></text></g><g><title>rmcp::model::_::&lt;impl serde::ser::Serialize for rmcp::model::JsonRpcResponse&lt;R&gt;&gt;::serialize (4,795,889 samples, 0.93%)</title><rect x="51.9372%" y="917" width="0.9330%" height="15" fill="rgb(230,46,43)" fg:x="266981686" fg:w="4795889"/><text x="52.1872%" y="927.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4,795,889 samples, 0.93%)</title><rect x="51.9372%" y="901" width="0.9330%" height="15" fill="rgb(233,65,53)" fg:x="266981686" fg:w="4795889"/><text x="52.1872%" y="911.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2,129,266 samples, 0.41%)</title><rect x="52.4559%" y="885" width="0.4142%" height="15" fill="rgb(221,121,27)" fg:x="269648309" fg:w="2129266"/><text x="52.7059%" y="895.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1,235,303 samples, 0.24%)</title><rect x="52.6298%" y="869" width="0.2403%" height="15" fill="rgb(247,70,47)" fg:x="270542272" fg:w="1235303"/><text x="52.8798%" y="879.50"></text></g><g><title>&lt;rmcp::model::JsonRpcVersion2_0 as serde::ser::Serialize&gt;::serialize (1,235,303 samples, 0.24%)</title><rect x="52.6298%" y="853" width="0.2403%" height="15" fill="rgb(228,85,35)" fg:x="270542272" fg:w="1235303"/><text x="52.8798%" y="863.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1,235,303 samples, 0.24%)</title><rect x="52.6298%" y="837" width="0.2403%" height="15" fill="rgb(209,50,18)" fg:x="270542272" fg:w="1235303"/><text x="52.8798%" y="847.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1,235,303 samples, 0.24%)</title><rect x="52.6298%" y="821" width="0.2403%" height="15" fill="rgb(250,19,35)" fg:x="270542272" fg:w="1235303"/><text x="52.8798%" y="831.50"></text></g><g><title>serde_json::ser::format_escaped_str (1,235,303 samples, 0.24%)</title><rect x="52.6298%" y="805" width="0.2403%" height="15" fill="rgb(253,107,29)" fg:x="270542272" fg:w="1235303"/><text x="52.8798%" y="815.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1,235,303 samples, 0.24%)</title><rect x="52.6298%" y="789" width="0.2403%" height="15" fill="rgb(252,179,29)" fg:x="270542272" fg:w="1235303"/><text x="52.8798%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (481,601 samples, 0.09%)</title><rect x="53.6101%" y="821" width="0.0937%" height="15" fill="rgb(238,194,6)" fg:x="275581189" fg:w="481601"/><text x="53.8601%" y="831.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (481,601 samples, 0.09%)</title><rect x="53.6101%" y="805" width="0.0937%" height="15" fill="rgb(238,164,29)" fg:x="275581189" fg:w="481601"/><text x="53.8601%" y="815.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as core::clone::Clone&gt;::clone (2,824,513 samples, 0.55%)</title><rect x="53.2711%" y="997" width="0.5495%" height="15" fill="rgb(224,25,9)" fg:x="273838513" fg:w="2824513"/><text x="53.5211%" y="1007.50"></text></g><g><title>&lt;axum::util::MapIntoResponse&lt;S&gt; as core::clone::Clone&gt;::clone (2,824,513 samples, 0.55%)</title><rect x="53.2711%" y="981" width="0.5495%" height="15" fill="rgb(244,153,23)" fg:x="273838513" fg:w="2824513"/><text x="53.5211%" y="991.50"></text></g><g><title>&lt;tower::util::map_err::MapErr&lt;S,F&gt; as core::clone::Clone&gt;::clone (2,824,513 samples, 0.55%)</title><rect x="53.2711%" y="965" width="0.5495%" height="15" fill="rgb(212,203,14)" fg:x="273838513" fg:w="2824513"/><text x="53.5211%" y="975.50"></text></g><g><title>&lt;axum::middleware::from_fn::FromFn&lt;F,S,I,T&gt; as core::clone::Clone&gt;::clone (2,824,513 samples, 0.55%)</title><rect x="53.2711%" y="949" width="0.5495%" height="15" fill="rgb(220,164,20)" fg:x="273838513" fg:w="2824513"/><text x="53.5211%" y="959.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (2,824,513 samples, 0.55%)</title><rect x="53.2711%" y="933" width="0.5495%" height="15" fill="rgb(222,203,48)" fg:x="273838513" fg:w="2824513"/><text x="53.5211%" y="943.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (2,824,513 samples, 0.55%)</title><rect x="53.2711%" y="917" width="0.5495%" height="15" fill="rgb(215,159,22)" fg:x="273838513" fg:w="2824513"/><text x="53.5211%" y="927.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (1,081,837 samples, 0.21%)</title><rect x="53.6101%" y="901" width="0.2105%" height="15" fill="rgb(216,183,47)" fg:x="275581189" fg:w="1081837"/><text x="53.8601%" y="911.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as core::clone::Clone&gt;::clone (1,081,837 samples, 0.21%)</title><rect x="53.6101%" y="885" width="0.2105%" height="15" fill="rgb(229,195,25)" fg:x="275581189" fg:w="1081837"/><text x="53.8601%" y="895.50"></text></g><g><title>&lt;axum::util::MapIntoResponse&lt;S&gt; as core::clone::Clone&gt;::clone (1,081,837 samples, 0.21%)</title><rect x="53.6101%" y="869" width="0.2105%" height="15" fill="rgb(224,132,51)" fg:x="275581189" fg:w="1081837"/><text x="53.8601%" y="879.50"></text></g><g><title>&lt;rmcp::transport::streamable_http_server::tower::StreamableHttpService&lt;S,M&gt; as core::clone::Clone&gt;::clone (1,081,837 samples, 0.21%)</title><rect x="53.6101%" y="853" width="0.2105%" height="15" fill="rgb(240,63,7)" fg:x="275581189" fg:w="1081837"/><text x="53.8601%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,081,837 samples, 0.21%)</title><rect x="53.6101%" y="837" width="0.2105%" height="15" fill="rgb(249,182,41)" fg:x="275581189" fg:w="1081837"/><text x="53.8601%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (600,236 samples, 0.12%)</title><rect x="53.7038%" y="821" width="0.1168%" height="15" fill="rgb(243,47,26)" fg:x="276062790" fg:w="600236"/><text x="53.9538%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_add (600,236 samples, 0.12%)</title><rect x="53.7038%" y="805" width="0.1168%" height="15" fill="rgb(233,48,2)" fg:x="276062790" fg:w="600236"/><text x="53.9538%" y="815.50"></text></g><g><title>__aarch64_ldadd8_relax (600,236 samples, 0.12%)</title><rect x="53.7038%" y="789" width="0.1168%" height="15" fill="rgb(244,165,34)" fg:x="276062790" fg:w="600236"/><text x="53.9538%" y="799.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (4,795,617 samples, 0.93%)</title><rect x="53.2711%" y="1045" width="0.9329%" height="15" fill="rgb(207,89,7)" fg:x="273838513" fg:w="4795617"/><text x="53.5211%" y="1055.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (4,795,617 samples, 0.93%)</title><rect x="53.2711%" y="1029" width="0.9329%" height="15" fill="rgb(244,117,36)" fg:x="273838513" fg:w="4795617"/><text x="53.5211%" y="1039.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (4,795,617 samples, 0.93%)</title><rect x="53.2711%" y="1013" width="0.9329%" height="15" fill="rgb(226,144,34)" fg:x="273838513" fg:w="4795617"/><text x="53.5211%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,971,104 samples, 0.38%)</title><rect x="53.8205%" y="997" width="0.3834%" height="15" fill="rgb(213,23,19)" fg:x="276663026" fg:w="1971104"/><text x="54.0705%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,971,104 samples, 0.38%)</title><rect x="53.8205%" y="981" width="0.3834%" height="15" fill="rgb(217,75,12)" fg:x="276663026" fg:w="1971104"/><text x="54.0705%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,971,104 samples, 0.38%)</title><rect x="53.8205%" y="965" width="0.3834%" height="15" fill="rgb(224,159,17)" fg:x="276663026" fg:w="1971104"/><text x="54.0705%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,971,104 samples, 0.38%)</title><rect x="53.8205%" y="949" width="0.3834%" height="15" fill="rgb(217,118,1)" fg:x="276663026" fg:w="1971104"/><text x="54.0705%" y="959.50"></text></g><g><title>alloc::alloc::alloc (1,971,104 samples, 0.38%)</title><rect x="53.8205%" y="933" width="0.3834%" height="15" fill="rgb(232,180,48)" fg:x="276663026" fg:w="1971104"/><text x="54.0705%" y="943.50"></text></g><g><title>__GI___libc_malloc (1,971,104 samples, 0.38%)</title><rect x="53.8205%" y="917" width="0.3834%" height="15" fill="rgb(230,27,33)" fg:x="276663026" fg:w="1971104"/><text x="54.0705%" y="927.50"></text></g><g><title>axum::routing::path_router::Node::at (3,371,739 samples, 0.66%)</title><rect x="54.2040%" y="1045" width="0.6559%" height="15" fill="rgb(205,31,21)" fg:x="278634130" fg:w="3371739"/><text x="54.4540%" y="1055.50"></text></g><g><title>matchit::router::Router&lt;T&gt;::at (560,665 samples, 0.11%)</title><rect x="54.7508%" y="1029" width="0.1091%" height="15" fill="rgb(253,59,4)" fg:x="281445204" fg:w="560665"/><text x="55.0008%" y="1039.50"></text></g><g><title>matchit::tree::Node&lt;T&gt;::at (560,665 samples, 0.11%)</title><rect x="54.7508%" y="1013" width="0.1091%" height="15" fill="rgb(224,201,9)" fg:x="281445204" fg:w="560665"/><text x="55.0008%" y="1023.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (560,665 samples, 0.11%)</title><rect x="54.7508%" y="997" width="0.1091%" height="15" fill="rgb(229,206,30)" fg:x="281445204" fg:w="560665"/><text x="55.0008%" y="1007.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (560,665 samples, 0.11%)</title><rect x="54.7508%" y="981" width="0.1091%" height="15" fill="rgb(212,67,47)" fg:x="281445204" fg:w="560665"/><text x="55.0008%" y="991.50"></text></g><g><title>__GI_memcmp (560,665 samples, 0.11%)</title><rect x="54.7508%" y="965" width="0.1091%" height="15" fill="rgb(211,96,50)" fg:x="281445204" fg:w="560665"/><text x="55.0008%" y="975.50"></text></g><g><title>axum::routing::url_params::insert_url_params (518,423 samples, 0.10%)</title><rect x="54.8599%" y="1045" width="0.1009%" height="15" fill="rgb(252,114,18)" fg:x="282005869" fg:w="518423"/><text x="55.1099%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (518,423 samples, 0.10%)</title><rect x="54.8599%" y="1029" width="0.1009%" height="15" fill="rgb(223,58,37)" fg:x="282005869" fg:w="518423"/><text x="55.1099%" y="1039.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (518,423 samples, 0.10%)</title><rect x="54.8599%" y="1013" width="0.1009%" height="15" fill="rgb(237,70,4)" fg:x="282005869" fg:w="518423"/><text x="55.1099%" y="1023.50"></text></g><g><title>core::iter::adapters::try_process (518,423 samples, 0.10%)</title><rect x="54.8599%" y="997" width="0.1009%" height="15" fill="rgb(244,85,46)" fg:x="282005869" fg:w="518423"/><text x="55.1099%" y="1007.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (518,423 samples, 0.10%)</title><rect x="54.8599%" y="981" width="0.1009%" height="15" fill="rgb(223,39,52)" fg:x="282005869" fg:w="518423"/><text x="55.1099%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (518,423 samples, 0.10%)</title><rect x="54.8599%" y="965" width="0.1009%" height="15" fill="rgb(218,200,14)" fg:x="282005869" fg:w="518423"/><text x="55.1099%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (518,423 samples, 0.10%)</title><rect x="54.8599%" y="949" width="0.1009%" height="15" fill="rgb(208,171,16)" fg:x="282005869" fg:w="518423"/><text x="55.1099%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (518,423 samples, 0.10%)</title><rect x="54.8599%" y="933" width="0.1009%" height="15" fill="rgb(234,200,18)" fg:x="282005869" fg:w="518423"/><text x="55.1099%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (518,423 samples, 0.10%)</title><rect x="54.8599%" y="917" width="0.1009%" height="15" fill="rgb(228,45,11)" fg:x="282005869" fg:w="518423"/><text x="55.1099%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (518,423 samples, 0.10%)</title><rect x="54.8599%" y="901" width="0.1009%" height="15" fill="rgb(237,182,11)" fg:x="282005869" fg:w="518423"/><text x="55.1099%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (518,423 samples, 0.10%)</title><rect x="54.8599%" y="885" width="0.1009%" height="15" fill="rgb(241,175,49)" fg:x="282005869" fg:w="518423"/><text x="55.1099%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (518,423 samples, 0.10%)</title><rect x="54.8599%" y="869" width="0.1009%" height="15" fill="rgb(247,38,35)" fg:x="282005869" fg:w="518423"/><text x="55.1099%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (518,423 samples, 0.10%)</title><rect x="54.8599%" y="853" width="0.1009%" height="15" fill="rgb(228,39,49)" fg:x="282005869" fg:w="518423"/><text x="55.1099%" y="863.50"></text></g><g><title>&lt;T as http::extensions::AnyClone&gt;::as_any (440,882 samples, 0.09%)</title><rect x="54.9607%" y="997" width="0.0858%" height="15" fill="rgb(226,101,26)" fg:x="282524292" fg:w="440882"/><text x="55.2107%" y="1007.50"></text></g><g><title>http::extensions::Extensions::get (3,424,758 samples, 0.67%)</title><rect x="54.9607%" y="1045" width="0.6662%" height="15" fill="rgb(206,141,19)" fg:x="282524292" fg:w="3424758"/><text x="55.2107%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (3,424,758 samples, 0.67%)</title><rect x="54.9607%" y="1029" width="0.6662%" height="15" fill="rgb(211,200,13)" fg:x="282524292" fg:w="3424758"/><text x="55.2107%" y="1039.50"></text></g><g><title>http::extensions::Extensions::get::{{closure}} (3,424,758 samples, 0.67%)</title><rect x="54.9607%" y="1013" width="0.6662%" height="15" fill="rgb(241,121,6)" fg:x="282524292" fg:w="3424758"/><text x="55.2107%" y="1023.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (2,983,876 samples, 0.58%)</title><rect x="55.0465%" y="997" width="0.5805%" height="15" fill="rgb(234,221,29)" fg:x="282965174" fg:w="2983876"/><text x="55.2965%" y="1007.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (2,983,876 samples, 0.58%)</title><rect x="55.0465%" y="981" width="0.5805%" height="15" fill="rgb(229,136,5)" fg:x="282965174" fg:w="2983876"/><text x="55.2965%" y="991.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (2,983,876 samples, 0.58%)</title><rect x="55.0465%" y="965" width="0.5805%" height="15" fill="rgb(238,36,11)" fg:x="282965174" fg:w="2983876"/><text x="55.2965%" y="975.50"></text></g><g><title>http::extensions::Extensions::insert (1,629,933 samples, 0.32%)</title><rect x="55.6270%" y="1045" width="0.3171%" height="15" fill="rgb(251,55,41)" fg:x="285949050" fg:w="1629933"/><text x="55.8770%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1,629,933 samples, 0.32%)</title><rect x="55.6270%" y="1029" width="0.3171%" height="15" fill="rgb(242,34,40)" fg:x="285949050" fg:w="1629933"/><text x="55.8770%" y="1039.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,629,933 samples, 0.32%)</title><rect x="55.6270%" y="1013" width="0.3171%" height="15" fill="rgb(215,42,17)" fg:x="285949050" fg:w="1629933"/><text x="55.8770%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (1,629,933 samples, 0.32%)</title><rect x="55.6270%" y="997" width="0.3171%" height="15" fill="rgb(207,44,46)" fg:x="285949050" fg:w="1629933"/><text x="55.8770%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (1,629,933 samples, 0.32%)</title><rect x="55.6270%" y="981" width="0.3171%" height="15" fill="rgb(211,206,28)" fg:x="285949050" fg:w="1629933"/><text x="55.8770%" y="991.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1,629,933 samples, 0.32%)</title><rect x="55.6270%" y="965" width="0.3171%" height="15" fill="rgb(237,167,16)" fg:x="285949050" fg:w="1629933"/><text x="55.8770%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1,629,933 samples, 0.32%)</title><rect x="55.6270%" y="949" width="0.3171%" height="15" fill="rgb(233,66,6)" fg:x="285949050" fg:w="1629933"/><text x="55.8770%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,629,933 samples, 0.32%)</title><rect x="55.6270%" y="933" width="0.3171%" height="15" fill="rgb(246,123,29)" fg:x="285949050" fg:w="1629933"/><text x="55.8770%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,629,933 samples, 0.32%)</title><rect x="55.6270%" y="917" width="0.3171%" height="15" fill="rgb(209,62,40)" fg:x="285949050" fg:w="1629933"/><text x="55.8770%" y="927.50"></text></g><g><title>alloc::alloc::alloc (1,629,933 samples, 0.32%)</title><rect x="55.6270%" y="901" width="0.3171%" height="15" fill="rgb(218,4,25)" fg:x="285949050" fg:w="1629933"/><text x="55.8770%" y="911.50"></text></g><g><title>__GI___libc_malloc (1,629,933 samples, 0.32%)</title><rect x="55.6270%" y="885" width="0.3171%" height="15" fill="rgb(253,91,49)" fg:x="285949050" fg:w="1629933"/><text x="55.8770%" y="895.50"></text></g><g><title>&lt;axum::routing::Router as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (15,073,047 samples, 2.93%)</title><rect x="53.0667%" y="1093" width="2.9322%" height="15" fill="rgb(228,155,29)" fg:x="272788019" fg:w="15073047"/><text x="53.3167%" y="1103.50">&lt;a..</text></g><g><title>axum::routing::Router&lt;S&gt;::call_with_state (15,073,047 samples, 2.93%)</title><rect x="53.0667%" y="1077" width="2.9322%" height="15" fill="rgb(243,57,37)" fg:x="272788019" fg:w="15073047"/><text x="53.3167%" y="1087.50">ax..</text></g><g><title>axum::routing::path_router::PathRouter&lt;S,_&gt;::call_with_state (15,073,047 samples, 2.93%)</title><rect x="53.0667%" y="1061" width="2.9322%" height="15" fill="rgb(244,167,17)" fg:x="272788019" fg:w="15073047"/><text x="53.3167%" y="1071.50">ax..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (282,083 samples, 0.05%)</title><rect x="55.9441%" y="1045" width="0.0549%" height="15" fill="rgb(207,181,38)" fg:x="287578983" fg:w="282083"/><text x="56.1941%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (282,083 samples, 0.05%)</title><rect x="55.9441%" y="1029" width="0.0549%" height="15" fill="rgb(211,8,23)" fg:x="287578983" fg:w="282083"/><text x="56.1941%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (282,083 samples, 0.05%)</title><rect x="55.9441%" y="1013" width="0.0549%" height="15" fill="rgb(235,11,44)" fg:x="287578983" fg:w="282083"/><text x="56.1941%" y="1023.50"></text></g><g><title>hashbrown::map::make_hash (282,083 samples, 0.05%)</title><rect x="55.9441%" y="997" width="0.0549%" height="15" fill="rgb(248,18,52)" fg:x="287578983" fg:w="282083"/><text x="56.1941%" y="1007.50"></text></g><g><title>core::hash::BuildHasher::hash_one (282,083 samples, 0.05%)</title><rect x="55.9441%" y="981" width="0.0549%" height="15" fill="rgb(208,4,7)" fg:x="287578983" fg:w="282083"/><text x="56.1941%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (791,570 samples, 0.15%)</title><rect x="56.8709%" y="677" width="0.1540%" height="15" fill="rgb(240,17,39)" fg:x="292343429" fg:w="791570"/><text x="57.1209%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (791,570 samples, 0.15%)</title><rect x="56.8709%" y="661" width="0.1540%" height="15" fill="rgb(207,170,3)" fg:x="292343429" fg:w="791570"/><text x="57.1209%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;[T]&gt; as alloc::sync::ArcFromSlice&lt;T&gt;&gt;::from_slice (791,570 samples, 0.15%)</title><rect x="56.8709%" y="645" width="0.1540%" height="15" fill="rgb(236,100,52)" fg:x="292343429" fg:w="791570"/><text x="57.1209%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::copy_from_slice (791,570 samples, 0.15%)</title><rect x="56.8709%" y="629" width="0.1540%" height="15" fill="rgb(246,78,51)" fg:x="292343429" fg:w="791570"/><text x="57.1209%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::allocate_for_slice (791,570 samples, 0.15%)</title><rect x="56.8709%" y="613" width="0.1540%" height="15" fill="rgb(211,17,15)" fg:x="292343429" fg:w="791570"/><text x="57.1209%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_layout (791,570 samples, 0.15%)</title><rect x="56.8709%" y="597" width="0.1540%" height="15" fill="rgb(209,59,46)" fg:x="292343429" fg:w="791570"/><text x="57.1209%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::allocate_for_slice::{{closure}} (791,570 samples, 0.15%)</title><rect x="56.8709%" y="581" width="0.1540%" height="15" fill="rgb(210,92,25)" fg:x="292343429" fg:w="791570"/><text x="57.1209%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (791,570 samples, 0.15%)</title><rect x="56.8709%" y="565" width="0.1540%" height="15" fill="rgb(238,174,52)" fg:x="292343429" fg:w="791570"/><text x="57.1209%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (791,570 samples, 0.15%)</title><rect x="56.8709%" y="549" width="0.1540%" height="15" fill="rgb(230,73,7)" fg:x="292343429" fg:w="791570"/><text x="57.1209%" y="559.50"></text></g><g><title>alloc::alloc::alloc (791,570 samples, 0.15%)</title><rect x="56.8709%" y="533" width="0.1540%" height="15" fill="rgb(243,124,40)" fg:x="292343429" fg:w="791570"/><text x="57.1209%" y="543.50"></text></g><g><title>__GI___libc_malloc (791,570 samples, 0.15%)</title><rect x="56.8709%" y="517" width="0.1540%" height="15" fill="rgb(244,170,11)" fg:x="292343429" fg:w="791570"/><text x="57.1209%" y="527.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,181,266 samples, 0.23%)</title><rect x="56.8709%" y="709" width="0.2298%" height="15" fill="rgb(207,114,54)" fg:x="292343429" fg:w="1181266"/><text x="57.1209%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;str&gt; as core::convert::From&lt;alloc::string::String&gt;&gt;::from (1,181,266 samples, 0.23%)</title><rect x="56.8709%" y="693" width="0.2298%" height="15" fill="rgb(205,42,20)" fg:x="292343429" fg:w="1181266"/><text x="57.1209%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (389,696 samples, 0.08%)</title><rect x="57.0249%" y="677" width="0.0758%" height="15" fill="rgb(230,30,28)" fg:x="293134999" fg:w="389696"/><text x="57.2749%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (389,696 samples, 0.08%)</title><rect x="57.0249%" y="661" width="0.0758%" height="15" fill="rgb(205,73,54)" fg:x="293134999" fg:w="389696"/><text x="57.2749%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (389,696 samples, 0.08%)</title><rect x="57.0249%" y="645" width="0.0758%" height="15" fill="rgb(254,227,23)" fg:x="293134999" fg:w="389696"/><text x="57.2749%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (389,696 samples, 0.08%)</title><rect x="57.0249%" y="629" width="0.0758%" height="15" fill="rgb(228,202,34)" fg:x="293134999" fg:w="389696"/><text x="57.2749%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (389,696 samples, 0.08%)</title><rect x="57.0249%" y="613" width="0.0758%" height="15" fill="rgb(222,225,37)" fg:x="293134999" fg:w="389696"/><text x="57.2749%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (389,696 samples, 0.08%)</title><rect x="57.0249%" y="597" width="0.0758%" height="15" fill="rgb(221,14,54)" fg:x="293134999" fg:w="389696"/><text x="57.2749%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (389,696 samples, 0.08%)</title><rect x="57.0249%" y="581" width="0.0758%" height="15" fill="rgb(254,102,2)" fg:x="293134999" fg:w="389696"/><text x="57.2749%" y="591.50"></text></g><g><title>__free (389,696 samples, 0.08%)</title><rect x="57.0249%" y="565" width="0.0758%" height="15" fill="rgb(232,104,17)" fg:x="293134999" fg:w="389696"/><text x="57.2749%" y="575.50"></text></g><g><title>_int_free (389,696 samples, 0.08%)</title><rect x="57.0249%" y="549" width="0.0758%" height="15" fill="rgb(250,220,14)" fg:x="293134999" fg:w="389696"/><text x="57.2749%" y="559.50"></text></g><g><title>&lt;rmcp::model::ClientRequest as rmcp::model::meta::GetExtensions&gt;::extensions_mut (1,646,734 samples, 0.32%)</title><rect x="57.1007%" y="709" width="0.3203%" height="15" fill="rgb(241,158,9)" fg:x="293524695" fg:w="1646734"/><text x="57.3507%" y="719.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (1,057,486 samples, 0.21%)</title><rect x="58.3889%" y="677" width="0.2057%" height="15" fill="rgb(246,9,43)" fg:x="300146719" fg:w="1057486"/><text x="58.6389%" y="687.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (1,057,486 samples, 0.21%)</title><rect x="58.3889%" y="661" width="0.2057%" height="15" fill="rgb(206,73,33)" fg:x="300146719" fg:w="1057486"/><text x="58.6389%" y="671.50"></text></g><g><title>tokio::task::coop::poll_proceed (1,057,486 samples, 0.21%)</title><rect x="58.3889%" y="645" width="0.2057%" height="15" fill="rgb(222,79,8)" fg:x="300146719" fg:w="1057486"/><text x="58.6389%" y="655.50"></text></g><g><title>tokio::runtime::context::budget (1,057,486 samples, 0.21%)</title><rect x="58.3889%" y="629" width="0.2057%" height="15" fill="rgb(234,8,54)" fg:x="300146719" fg:w="1057486"/><text x="58.6389%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,057,486 samples, 0.21%)</title><rect x="58.3889%" y="613" width="0.2057%" height="15" fill="rgb(209,134,38)" fg:x="300146719" fg:w="1057486"/><text x="58.6389%" y="623.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1,340,907 samples, 0.26%)</title><rect x="58.5946%" y="613" width="0.2609%" height="15" fill="rgb(230,127,29)" fg:x="301204205" fg:w="1340907"/><text x="58.8446%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (942,505 samples, 0.18%)</title><rect x="58.6721%" y="597" width="0.1833%" height="15" fill="rgb(242,44,41)" fg:x="301602607" fg:w="942505"/><text x="58.9221%" y="607.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (942,505 samples, 0.18%)</title><rect x="58.6721%" y="581" width="0.1833%" height="15" fill="rgb(222,56,43)" fg:x="301602607" fg:w="942505"/><text x="58.9221%" y="591.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (942,505 samples, 0.18%)</title><rect x="58.6721%" y="565" width="0.1833%" height="15" fill="rgb(238,39,47)" fg:x="301602607" fg:w="942505"/><text x="58.9221%" y="575.50"></text></g><g><title>tokio::runtime::task::state::State::load (942,505 samples, 0.18%)</title><rect x="58.6721%" y="549" width="0.1833%" height="15" fill="rgb(226,79,43)" fg:x="301602607" fg:w="942505"/><text x="58.9221%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (942,505 samples, 0.18%)</title><rect x="58.6721%" y="533" width="0.1833%" height="15" fill="rgb(242,105,53)" fg:x="301602607" fg:w="942505"/><text x="58.9221%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (942,505 samples, 0.18%)</title><rect x="58.6721%" y="517" width="0.1833%" height="15" fill="rgb(251,132,46)" fg:x="301602607" fg:w="942505"/><text x="58.9221%" y="527.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (611,637 samples, 0.12%)</title><rect x="58.8555%" y="613" width="0.1190%" height="15" fill="rgb(231,77,14)" fg:x="302545112" fg:w="611637"/><text x="59.1055%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (611,637 samples, 0.12%)</title><rect x="58.8555%" y="597" width="0.1190%" height="15" fill="rgb(240,135,9)" fg:x="302545112" fg:w="611637"/><text x="59.1055%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (611,637 samples, 0.12%)</title><rect x="58.8555%" y="581" width="0.1190%" height="15" fill="rgb(248,109,14)" fg:x="302545112" fg:w="611637"/><text x="59.1055%" y="591.50"></text></g><g><title>__aarch64_ldadd8_acq (611,637 samples, 0.12%)</title><rect x="58.8555%" y="565" width="0.1190%" height="15" fill="rgb(227,146,52)" fg:x="302545112" fg:w="611637"/><text x="59.1055%" y="575.50"></text></g><g><title>tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (2,534,236 samples, 0.49%)</title><rect x="58.5946%" y="661" width="0.4930%" height="15" fill="rgb(232,54,3)" fg:x="301204205" fg:w="2534236"/><text x="58.8446%" y="671.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (2,534,236 samples, 0.49%)</title><rect x="58.5946%" y="645" width="0.4930%" height="15" fill="rgb(229,201,43)" fg:x="301204205" fg:w="2534236"/><text x="58.8446%" y="655.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (2,534,236 samples, 0.49%)</title><rect x="58.5946%" y="629" width="0.4930%" height="15" fill="rgb(252,161,33)" fg:x="301204205" fg:w="2534236"/><text x="58.8446%" y="639.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (581,692 samples, 0.11%)</title><rect x="58.9745%" y="613" width="0.1132%" height="15" fill="rgb(226,146,40)" fg:x="303156749" fg:w="581692"/><text x="59.2245%" y="623.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (581,692 samples, 0.11%)</title><rect x="58.9745%" y="597" width="0.1132%" height="15" fill="rgb(219,47,25)" fg:x="303156749" fg:w="581692"/><text x="59.2245%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (581,692 samples, 0.11%)</title><rect x="58.9745%" y="581" width="0.1132%" height="15" fill="rgb(250,135,13)" fg:x="303156749" fg:w="581692"/><text x="59.2245%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (581,692 samples, 0.11%)</title><rect x="58.9745%" y="565" width="0.1132%" height="15" fill="rgb(219,229,18)" fg:x="303156749" fg:w="581692"/><text x="59.2245%" y="575.50"></text></g><g><title>__aarch64_ldset8_acq_rel (581,692 samples, 0.11%)</title><rect x="58.9745%" y="549" width="0.1132%" height="15" fill="rgb(217,152,27)" fg:x="303156749" fg:w="581692"/><text x="59.2245%" y="559.50"></text></g><g><title>rmcp::transport::streamable_http_server::session::local::LocalSessionHandle::establish_request_wise_channel::{{closure}} (7,184,547 samples, 1.40%)</title><rect x="57.8152%" y="693" width="1.3976%" height="15" fill="rgb(225,71,47)" fg:x="297197391" fg:w="7184547"/><text x="58.0652%" y="703.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::{{closure}} (3,177,733 samples, 0.62%)</title><rect x="58.5946%" y="677" width="0.6182%" height="15" fill="rgb(220,139,14)" fg:x="301204205" fg:w="3177733"/><text x="58.8446%" y="687.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve::{{closure}} (643,497 samples, 0.13%)</title><rect x="59.0876%" y="661" width="0.1252%" height="15" fill="rgb(247,54,32)" fg:x="303738441" fg:w="643497"/><text x="59.3376%" y="671.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve_inner::{{closure}} (643,497 samples, 0.13%)</title><rect x="59.0876%" y="645" width="0.1252%" height="15" fill="rgb(252,131,39)" fg:x="303738441" fg:w="643497"/><text x="59.3376%" y="655.50"></text></g><g><title>rmcp::transport::streamable_http_server::session::local::LocalSessionHandle::push_message::{{closure}} (745,213 samples, 0.14%)</title><rect x="59.2128%" y="693" width="0.1450%" height="15" fill="rgb(210,108,39)" fg:x="304381938" fg:w="745213"/><text x="59.4628%" y="703.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::{{closure}} (745,213 samples, 0.14%)</title><rect x="59.2128%" y="677" width="0.1450%" height="15" fill="rgb(205,23,29)" fg:x="304381938" fg:w="745213"/><text x="59.4628%" y="687.50"></text></g><g><title>tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (745,213 samples, 0.14%)</title><rect x="59.2128%" y="661" width="0.1450%" height="15" fill="rgb(246,139,46)" fg:x="304381938" fg:w="745213"/><text x="59.4628%" y="671.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (745,213 samples, 0.14%)</title><rect x="59.2128%" y="645" width="0.1450%" height="15" fill="rgb(250,81,26)" fg:x="304381938" fg:w="745213"/><text x="59.4628%" y="655.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (745,213 samples, 0.14%)</title><rect x="59.2128%" y="629" width="0.1450%" height="15" fill="rgb(214,104,7)" fg:x="304381938" fg:w="745213"/><text x="59.4628%" y="639.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (745,213 samples, 0.14%)</title><rect x="59.2128%" y="613" width="0.1450%" height="15" fill="rgb(233,189,8)" fg:x="304381938" fg:w="745213"/><text x="59.4628%" y="623.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::write (745,213 samples, 0.14%)</title><rect x="59.2128%" y="597" width="0.1450%" height="15" fill="rgb(228,141,17)" fg:x="304381938" fg:w="745213"/><text x="59.4628%" y="607.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::set_ready (745,213 samples, 0.14%)</title><rect x="59.2128%" y="581" width="0.1450%" height="15" fill="rgb(247,157,1)" fg:x="304381938" fg:w="745213"/><text x="59.4628%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (745,213 samples, 0.14%)</title><rect x="59.2128%" y="565" width="0.1450%" height="15" fill="rgb(249,225,5)" fg:x="304381938" fg:w="745213"/><text x="59.4628%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_or (745,213 samples, 0.14%)</title><rect x="59.2128%" y="549" width="0.1450%" height="15" fill="rgb(242,55,13)" fg:x="304381938" fg:w="745213"/><text x="59.4628%" y="559.50"></text></g><g><title>__aarch64_ldset8_rel (745,213 samples, 0.14%)</title><rect x="59.2128%" y="533" width="0.1450%" height="15" fill="rgb(230,49,50)" fg:x="304381938" fg:w="745213"/><text x="59.4628%" y="543.50"></text></g><g><title>&lt;rmcp::transport::streamable_http_server::session::local::LocalSessionManager as rmcp::transport::streamable_http_server::session::SessionManager&gt;::create_stream::{{closure}} (12,803,321 samples, 2.49%)</title><rect x="57.4210%" y="709" width="2.4907%" height="15" fill="rgb(241,111,38)" fg:x="295171429" fg:w="12803321"/><text x="57.6710%" y="719.50">&lt;r..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,847,599 samples, 0.55%)</title><rect x="59.3578%" y="693" width="0.5540%" height="15" fill="rgb(252,155,4)" fg:x="305127151" fg:w="2847599"/><text x="59.6078%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,847,599 samples, 0.55%)</title><rect x="59.3578%" y="677" width="0.5540%" height="15" fill="rgb(212,69,32)" fg:x="305127151" fg:w="2847599"/><text x="59.6078%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,847,599 samples, 0.55%)</title><rect x="59.3578%" y="661" width="0.5540%" height="15" fill="rgb(243,107,47)" fg:x="305127151" fg:w="2847599"/><text x="59.6078%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (2,847,599 samples, 0.55%)</title><rect x="59.3578%" y="645" width="0.5540%" height="15" fill="rgb(247,130,12)" fg:x="305127151" fg:w="2847599"/><text x="59.6078%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,847,599 samples, 0.55%)</title><rect x="59.3578%" y="629" width="0.5540%" height="15" fill="rgb(233,74,16)" fg:x="305127151" fg:w="2847599"/><text x="59.6078%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,847,599 samples, 0.55%)</title><rect x="59.3578%" y="613" width="0.5540%" height="15" fill="rgb(208,58,18)" fg:x="305127151" fg:w="2847599"/><text x="59.6078%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::hash::Hash&gt;::hash (984,708 samples, 0.19%)</title><rect x="59.7202%" y="597" width="0.1916%" height="15" fill="rgb(242,225,1)" fg:x="306990042" fg:w="984708"/><text x="59.9702%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (984,708 samples, 0.19%)</title><rect x="59.7202%" y="581" width="0.1916%" height="15" fill="rgb(249,39,40)" fg:x="306990042" fg:w="984708"/><text x="59.9702%" y="591.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (984,708 samples, 0.19%)</title><rect x="59.7202%" y="565" width="0.1916%" height="15" fill="rgb(207,72,44)" fg:x="306990042" fg:w="984708"/><text x="59.9702%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (984,708 samples, 0.19%)</title><rect x="59.7202%" y="549" width="0.1916%" height="15" fill="rgb(215,193,12)" fg:x="306990042" fg:w="984708"/><text x="59.9702%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (984,708 samples, 0.19%)</title><rect x="59.7202%" y="533" width="0.1916%" height="15" fill="rgb(248,41,39)" fg:x="306990042" fg:w="984708"/><text x="59.9702%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (984,708 samples, 0.19%)</title><rect x="59.7202%" y="517" width="0.1916%" height="15" fill="rgb(253,85,4)" fg:x="306990042" fg:w="984708"/><text x="59.9702%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (984,708 samples, 0.19%)</title><rect x="59.7202%" y="501" width="0.1916%" height="15" fill="rgb(243,70,31)" fg:x="306990042" fg:w="984708"/><text x="59.9702%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (984,708 samples, 0.19%)</title><rect x="59.7202%" y="485" width="0.1916%" height="15" fill="rgb(253,195,26)" fg:x="306990042" fg:w="984708"/><text x="59.9702%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (503,289 samples, 0.10%)</title><rect x="60.0219%" y="645" width="0.0979%" height="15" fill="rgb(243,42,11)" fg:x="308541064" fg:w="503289"/><text x="60.2719%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (503,289 samples, 0.10%)</title><rect x="60.0219%" y="629" width="0.0979%" height="15" fill="rgb(239,66,17)" fg:x="308541064" fg:w="503289"/><text x="60.2719%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (503,289 samples, 0.10%)</title><rect x="60.0219%" y="613" width="0.0979%" height="15" fill="rgb(217,132,21)" fg:x="308541064" fg:w="503289"/><text x="60.2719%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::hash::Hash&gt;::hash (503,289 samples, 0.10%)</title><rect x="60.0219%" y="597" width="0.0979%" height="15" fill="rgb(252,202,21)" fg:x="308541064" fg:w="503289"/><text x="60.2719%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (503,289 samples, 0.10%)</title><rect x="60.0219%" y="581" width="0.0979%" height="15" fill="rgb(233,98,36)" fg:x="308541064" fg:w="503289"/><text x="60.2719%" y="591.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (503,289 samples, 0.10%)</title><rect x="60.0219%" y="565" width="0.0979%" height="15" fill="rgb(216,153,54)" fg:x="308541064" fg:w="503289"/><text x="60.2719%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (503,289 samples, 0.10%)</title><rect x="60.0219%" y="549" width="0.0979%" height="15" fill="rgb(250,99,7)" fg:x="308541064" fg:w="503289"/><text x="60.2719%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (503,289 samples, 0.10%)</title><rect x="60.0219%" y="533" width="0.0979%" height="15" fill="rgb(207,56,50)" fg:x="308541064" fg:w="503289"/><text x="60.2719%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (503,289 samples, 0.10%)</title><rect x="60.0219%" y="517" width="0.0979%" height="15" fill="rgb(244,61,34)" fg:x="308541064" fg:w="503289"/><text x="60.2719%" y="527.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (758,411 samples, 0.15%)</title><rect x="60.1198%" y="597" width="0.1475%" height="15" fill="rgb(241,50,38)" fg:x="309044353" fg:w="758411"/><text x="60.3698%" y="607.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (758,411 samples, 0.15%)</title><rect x="60.1198%" y="581" width="0.1475%" height="15" fill="rgb(212,166,30)" fg:x="309044353" fg:w="758411"/><text x="60.3698%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (1,564,811 samples, 0.30%)</title><rect x="60.0219%" y="693" width="0.3044%" height="15" fill="rgb(249,127,32)" fg:x="308541064" fg:w="1564811"/><text x="60.2719%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,564,811 samples, 0.30%)</title><rect x="60.0219%" y="677" width="0.3044%" height="15" fill="rgb(209,103,0)" fg:x="308541064" fg:w="1564811"/><text x="60.2719%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,564,811 samples, 0.30%)</title><rect x="60.0219%" y="661" width="0.3044%" height="15" fill="rgb(238,209,51)" fg:x="308541064" fg:w="1564811"/><text x="60.2719%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,061,522 samples, 0.21%)</title><rect x="60.1198%" y="645" width="0.2065%" height="15" fill="rgb(237,56,23)" fg:x="309044353" fg:w="1061522"/><text x="60.3698%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,061,522 samples, 0.21%)</title><rect x="60.1198%" y="629" width="0.2065%" height="15" fill="rgb(215,153,46)" fg:x="309044353" fg:w="1061522"/><text x="60.3698%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,061,522 samples, 0.21%)</title><rect x="60.1198%" y="613" width="0.2065%" height="15" fill="rgb(224,49,31)" fg:x="309044353" fg:w="1061522"/><text x="60.3698%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (303,111 samples, 0.06%)</title><rect x="60.2673%" y="597" width="0.0590%" height="15" fill="rgb(250,18,42)" fg:x="309802764" fg:w="303111"/><text x="60.5173%" y="607.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (303,111 samples, 0.06%)</title><rect x="60.2673%" y="581" width="0.0590%" height="15" fill="rgb(215,176,39)" fg:x="309802764" fg:w="303111"/><text x="60.5173%" y="591.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (303,111 samples, 0.06%)</title><rect x="60.2673%" y="565" width="0.0590%" height="15" fill="rgb(223,77,29)" fg:x="309802764" fg:w="303111"/><text x="60.5173%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (303,111 samples, 0.06%)</title><rect x="60.2673%" y="549" width="0.0590%" height="15" fill="rgb(234,94,52)" fg:x="309802764" fg:w="303111"/><text x="60.5173%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (303,111 samples, 0.06%)</title><rect x="60.2673%" y="533" width="0.0590%" height="15" fill="rgb(220,154,50)" fg:x="309802764" fg:w="303111"/><text x="60.5173%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as alloc::sync::ArcEqIdent&lt;T,A&gt;&gt;::eq (303,111 samples, 0.06%)</title><rect x="60.2673%" y="517" width="0.0590%" height="15" fill="rgb(212,11,10)" fg:x="309802764" fg:w="303111"/><text x="60.5173%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (303,111 samples, 0.06%)</title><rect x="60.2673%" y="501" width="0.0590%" height="15" fill="rgb(205,166,19)" fg:x="309802764" fg:w="303111"/><text x="60.5173%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (303,111 samples, 0.06%)</title><rect x="60.2673%" y="485" width="0.0590%" height="15" fill="rgb(244,198,16)" fg:x="309802764" fg:w="303111"/><text x="60.5173%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (303,111 samples, 0.06%)</title><rect x="60.2673%" y="469" width="0.0590%" height="15" fill="rgb(219,69,12)" fg:x="309802764" fg:w="303111"/><text x="60.5173%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (303,111 samples, 0.06%)</title><rect x="60.2673%" y="453" width="0.0590%" height="15" fill="rgb(245,30,7)" fg:x="309802764" fg:w="303111"/><text x="60.5173%" y="463.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (543,574 samples, 0.11%)</title><rect x="60.3263%" y="661" width="0.1057%" height="15" fill="rgb(218,221,48)" fg:x="310105875" fg:w="543574"/><text x="60.5763%" y="671.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (543,574 samples, 0.11%)</title><rect x="60.3263%" y="645" width="0.1057%" height="15" fill="rgb(216,66,15)" fg:x="310105875" fg:w="543574"/><text x="60.5763%" y="655.50"></text></g><g><title>&lt;rmcp::transport::streamable_http_server::session::local::LocalSessionManager as rmcp::transport::streamable_http_server::session::SessionManager&gt;::has_session::{{closure}} (3,042,149 samples, 0.59%)</title><rect x="59.9117%" y="709" width="0.5918%" height="15" fill="rgb(226,122,50)" fg:x="307974750" fg:w="3042149"/><text x="60.1617%" y="719.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::read::{{closure}} (911,024 samples, 0.18%)</title><rect x="60.3263%" y="693" width="0.1772%" height="15" fill="rgb(239,156,16)" fg:x="310105875" fg:w="911024"/><text x="60.5763%" y="703.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::read::{{closure}}::{{closure}} (911,024 samples, 0.18%)</title><rect x="60.3263%" y="677" width="0.1772%" height="15" fill="rgb(224,27,38)" fg:x="310105875" fg:w="911024"/><text x="60.5763%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::batch_semaphore::Acquire&gt; (367,450 samples, 0.07%)</title><rect x="60.4321%" y="661" width="0.0715%" height="15" fill="rgb(224,39,27)" fg:x="310649449" fg:w="367450"/><text x="60.6821%" y="671.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (367,450 samples, 0.07%)</title><rect x="60.4321%" y="645" width="0.0715%" height="15" fill="rgb(215,92,29)" fg:x="310649449" fg:w="367450"/><text x="60.6821%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (575,942 samples, 0.11%)</title><rect x="60.5035%" y="709" width="0.1120%" height="15" fill="rgb(207,159,16)" fg:x="311016899" fg:w="575942"/><text x="60.7535%" y="719.50"></text></g><g><title>rmcp::transport::streamable_http_server::tower::StreamableHttpService&lt;S,M&gt;::handle_post::{{closure}}::{{closure}} (575,942 samples, 0.11%)</title><rect x="60.5035%" y="693" width="0.1120%" height="15" fill="rgb(238,163,47)" fg:x="311016899" fg:w="575942"/><text x="60.7535%" y="703.50"></text></g><g><title>http::header::value::HeaderValue::to_str (575,942 samples, 0.11%)</title><rect x="60.5035%" y="677" width="0.1120%" height="15" fill="rgb(219,91,49)" fg:x="311016899" fg:w="575942"/><text x="60.7535%" y="687.50"></text></g><g><title>core::str::&lt;impl str&gt;::contains (4,876,535 samples, 0.95%)</title><rect x="60.6156%" y="677" width="0.9487%" height="15" fill="rgb(227,167,31)" fg:x="311592841" fg:w="4876535"/><text x="60.8656%" y="687.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_contained_in (4,876,535 samples, 0.95%)</title><rect x="60.6156%" y="661" width="0.9487%" height="15" fill="rgb(234,80,54)" fg:x="311592841" fg:w="4876535"/><text x="60.8656%" y="671.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (2,860,438 samples, 0.56%)</title><rect x="61.0078%" y="645" width="0.5565%" height="15" fill="rgb(212,114,2)" fg:x="313608938" fg:w="2860438"/><text x="61.2578%" y="655.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2,860,438 samples, 0.56%)</title><rect x="61.0078%" y="629" width="0.5565%" height="15" fill="rgb(234,50,24)" fg:x="313608938" fg:w="2860438"/><text x="61.2578%" y="639.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (2,347,933 samples, 0.46%)</title><rect x="61.1075%" y="613" width="0.4568%" height="15" fill="rgb(221,68,8)" fg:x="314121443" fg:w="2347933"/><text x="61.3575%" y="623.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (2,347,933 samples, 0.46%)</title><rect x="61.1075%" y="597" width="0.4568%" height="15" fill="rgb(254,180,31)" fg:x="314121443" fg:w="2347933"/><text x="61.3575%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (7,803,254 samples, 1.52%)</title><rect x="60.6156%" y="709" width="1.5180%" height="15" fill="rgb(247,130,50)" fg:x="311592841" fg:w="7803254"/><text x="60.8656%" y="719.50"></text></g><g><title>rmcp::transport::streamable_http_server::tower::StreamableHttpService&lt;S,M&gt;::handle_post::{{closure}}::{{closure}} (7,803,254 samples, 1.52%)</title><rect x="60.6156%" y="693" width="1.5180%" height="15" fill="rgb(211,109,4)" fg:x="311592841" fg:w="7803254"/><text x="60.8656%" y="703.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (2,926,719 samples, 0.57%)</title><rect x="61.5642%" y="677" width="0.5693%" height="15" fill="rgb(238,50,21)" fg:x="316469376" fg:w="2926719"/><text x="61.8142%" y="687.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (2,926,719 samples, 0.57%)</title><rect x="61.5642%" y="661" width="0.5693%" height="15" fill="rgb(225,57,45)" fg:x="316469376" fg:w="2926719"/><text x="61.8142%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (2,926,719 samples, 0.57%)</title><rect x="61.5642%" y="645" width="0.5693%" height="15" fill="rgb(209,196,50)" fg:x="316469376" fg:w="2926719"/><text x="61.8142%" y="655.50"></text></g><g><title>&lt;&amp;str as http::header::map::as_header_name::Sealed&gt;::find::{{closure}} (602,797 samples, 0.12%)</title><rect x="62.1336%" y="645" width="0.1173%" height="15" fill="rgb(242,140,13)" fg:x="319396095" fg:w="602797"/><text x="62.3836%" y="655.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::find (602,797 samples, 0.12%)</title><rect x="62.1336%" y="629" width="0.1173%" height="15" fill="rgb(217,111,7)" fg:x="319396095" fg:w="602797"/><text x="62.3836%" y="639.50"></text></g><g><title>http::header::map::hash_elem_using (602,797 samples, 0.12%)</title><rect x="62.1336%" y="613" width="0.1173%" height="15" fill="rgb(253,193,51)" fg:x="319396095" fg:w="602797"/><text x="62.3836%" y="623.50"></text></g><g><title>&lt;http::header::name::HdrName as core::hash::Hash&gt;::hash (602,797 samples, 0.12%)</title><rect x="62.1336%" y="597" width="0.1173%" height="15" fill="rgb(252,70,29)" fg:x="319396095" fg:w="602797"/><text x="62.3836%" y="607.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash (602,797 samples, 0.12%)</title><rect x="62.1336%" y="581" width="0.1173%" height="15" fill="rgb(232,127,12)" fg:x="319396095" fg:w="602797"/><text x="62.3836%" y="591.50"></text></g><g><title>&lt;http::header::name::MaybeLower as core::hash::Hash&gt;::hash (602,797 samples, 0.12%)</title><rect x="62.1336%" y="565" width="0.1173%" height="15" fill="rgb(211,180,21)" fg:x="319396095" fg:w="602797"/><text x="62.3836%" y="575.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (602,797 samples, 0.12%)</title><rect x="62.1336%" y="549" width="0.1173%" height="15" fill="rgb(229,72,13)" fg:x="319396095" fg:w="602797"/><text x="62.3836%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (602,797 samples, 0.12%)</title><rect x="62.1336%" y="533" width="0.1173%" height="15" fill="rgb(240,211,49)" fg:x="319396095" fg:w="602797"/><text x="62.3836%" y="543.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (602,797 samples, 0.12%)</title><rect x="62.1336%" y="517" width="0.1173%" height="15" fill="rgb(219,149,40)" fg:x="319396095" fg:w="602797"/><text x="62.3836%" y="527.50"></text></g><g><title>&lt;&amp;str as http::header::map::as_header_name::Sealed&gt;::find (3,282,878 samples, 0.64%)</title><rect x="62.1336%" y="677" width="0.6386%" height="15" fill="rgb(210,127,46)" fg:x="319396095" fg:w="3282878"/><text x="62.3836%" y="687.50"></text></g><g><title>http::header::name::HdrName::from_bytes (3,282,878 samples, 0.64%)</title><rect x="62.1336%" y="661" width="0.6386%" height="15" fill="rgb(220,106,7)" fg:x="319396095" fg:w="3282878"/><text x="62.3836%" y="671.50"></text></g><g><title>http::header::name::parse_hdr (2,680,081 samples, 0.52%)</title><rect x="62.2508%" y="645" width="0.5214%" height="15" fill="rgb(249,31,22)" fg:x="319998892" fg:w="2680081"/><text x="62.5008%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (817,190 samples, 0.16%)</title><rect x="62.6132%" y="629" width="0.1590%" height="15" fill="rgb(253,1,49)" fg:x="321861783" fg:w="817190"/><text x="62.8632%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (817,190 samples, 0.16%)</title><rect x="62.6132%" y="613" width="0.1590%" height="15" fill="rgb(227,144,33)" fg:x="321861783" fg:w="817190"/><text x="62.8632%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (817,190 samples, 0.16%)</title><rect x="62.6132%" y="597" width="0.1590%" height="15" fill="rgb(249,163,44)" fg:x="321861783" fg:w="817190"/><text x="62.8632%" y="607.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get (5,145,769 samples, 1.00%)</title><rect x="62.1336%" y="709" width="1.0010%" height="15" fill="rgb(234,15,39)" fg:x="319396095" fg:w="5145769"/><text x="62.3836%" y="719.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get2 (5,145,769 samples, 1.00%)</title><rect x="62.1336%" y="693" width="1.0010%" height="15" fill="rgb(207,66,16)" fg:x="319396095" fg:w="5145769"/><text x="62.3836%" y="703.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::as_header_name::Sealed&gt;::find (1,862,891 samples, 0.36%)</title><rect x="62.7722%" y="677" width="0.3624%" height="15" fill="rgb(233,112,24)" fg:x="322678973" fg:w="1862891"/><text x="63.0222%" y="687.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::find (1,862,891 samples, 0.36%)</title><rect x="62.7722%" y="661" width="0.3624%" height="15" fill="rgb(230,90,22)" fg:x="322678973" fg:w="1862891"/><text x="63.0222%" y="671.50"></text></g><g><title>http::header::map::hash_elem_using (1,862,891 samples, 0.36%)</title><rect x="62.7722%" y="645" width="0.3624%" height="15" fill="rgb(229,61,13)" fg:x="322678973" fg:w="1862891"/><text x="63.0222%" y="655.50"></text></g><g><title>rmcp::model::extension::Extensions::insert (2,740,968 samples, 0.53%)</title><rect x="63.1346%" y="709" width="0.5332%" height="15" fill="rgb(225,57,24)" fg:x="324541864" fg:w="2740968"/><text x="63.3846%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2,052,795 samples, 0.40%)</title><rect x="63.2685%" y="693" width="0.3993%" height="15" fill="rgb(208,169,48)" fg:x="325230037" fg:w="2052795"/><text x="63.5185%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (2,052,795 samples, 0.40%)</title><rect x="63.2685%" y="677" width="0.3993%" height="15" fill="rgb(244,218,51)" fg:x="325230037" fg:w="2052795"/><text x="63.5185%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,052,795 samples, 0.40%)</title><rect x="63.2685%" y="661" width="0.3993%" height="15" fill="rgb(214,148,10)" fg:x="325230037" fg:w="2052795"/><text x="63.5185%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,052,795 samples, 0.40%)</title><rect x="63.2685%" y="645" width="0.3993%" height="15" fill="rgb(225,174,27)" fg:x="325230037" fg:w="2052795"/><text x="63.5185%" y="655.50"></text></g><g><title>alloc::alloc::alloc (2,052,795 samples, 0.40%)</title><rect x="63.2685%" y="629" width="0.3993%" height="15" fill="rgb(230,96,26)" fg:x="325230037" fg:w="2052795"/><text x="63.5185%" y="639.50"></text></g><g><title>__GI___libc_malloc (2,052,795 samples, 0.40%)</title><rect x="63.2685%" y="613" width="0.3993%" height="15" fill="rgb(232,10,30)" fg:x="325230037" fg:w="2052795"/><text x="63.5185%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex&lt;futures_channel::mpsc::SenderTask&gt;&gt;&gt; (678,785 samples, 0.13%)</title><rect x="63.8927%" y="565" width="0.1320%" height="15" fill="rgb(222,8,50)" fg:x="328438706" fg:w="678785"/><text x="64.1427%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (678,785 samples, 0.13%)</title><rect x="63.8927%" y="549" width="0.1320%" height="15" fill="rgb(213,81,27)" fg:x="328438706" fg:w="678785"/><text x="64.1427%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (678,785 samples, 0.13%)</title><rect x="63.8927%" y="533" width="0.1320%" height="15" fill="rgb(245,50,10)" fg:x="328438706" fg:w="678785"/><text x="64.1427%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (678,785 samples, 0.13%)</title><rect x="63.8927%" y="517" width="0.1320%" height="15" fill="rgb(216,100,18)" fg:x="328438706" fg:w="678785"/><text x="64.1427%" y="527.50"></text></g><g><title>__aarch64_ldadd8_rel (678,785 samples, 0.13%)</title><rect x="63.8927%" y="501" width="0.1320%" height="15" fill="rgb(236,147,54)" fg:x="328438706" fg:w="678785"/><text x="64.1427%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;futures_channel::mpsc::SenderTask&gt;&gt; (441,048 samples, 0.09%)</title><rect x="64.0247%" y="565" width="0.0858%" height="15" fill="rgb(205,143,26)" fg:x="329117491" fg:w="441048"/><text x="64.2747%" y="575.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (441,048 samples, 0.09%)</title><rect x="64.0247%" y="549" width="0.0858%" height="15" fill="rgb(236,26,9)" fg:x="329117491" fg:w="441048"/><text x="64.2747%" y="559.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (441,048 samples, 0.09%)</title><rect x="64.0247%" y="533" width="0.0858%" height="15" fill="rgb(221,165,53)" fg:x="329117491" fg:w="441048"/><text x="64.2747%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (441,048 samples, 0.09%)</title><rect x="64.0247%" y="517" width="0.0858%" height="15" fill="rgb(214,110,17)" fg:x="329117491" fg:w="441048"/><text x="64.2747%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (441,048 samples, 0.09%)</title><rect x="64.0247%" y="501" width="0.0858%" height="15" fill="rgb(237,197,12)" fg:x="329117491" fg:w="441048"/><text x="64.2747%" y="511.50"></text></g><g><title>__aarch64_swp4_rel (441,048 samples, 0.09%)</title><rect x="64.0247%" y="485" width="0.0858%" height="15" fill="rgb(205,84,17)" fg:x="329117491" fg:w="441048"/><text x="64.2747%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (373,872 samples, 0.07%)</title><rect x="64.3310%" y="501" width="0.0727%" height="15" fill="rgb(237,18,45)" fg:x="330691742" fg:w="373872"/><text x="64.5810%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (373,872 samples, 0.07%)</title><rect x="64.3310%" y="485" width="0.0727%" height="15" fill="rgb(221,87,14)" fg:x="330691742" fg:w="373872"/><text x="64.5810%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (373,872 samples, 0.07%)</title><rect x="64.3310%" y="469" width="0.0727%" height="15" fill="rgb(238,186,15)" fg:x="330691742" fg:w="373872"/><text x="64.5810%" y="479.50"></text></g><g><title>__free (373,872 samples, 0.07%)</title><rect x="64.3310%" y="453" width="0.0727%" height="15" fill="rgb(208,115,11)" fg:x="330691742" fg:w="373872"/><text x="64.5810%" y="463.50"></text></g><g><title>_int_free (373,872 samples, 0.07%)</title><rect x="64.3310%" y="437" width="0.0727%" height="15" fill="rgb(254,175,0)" fg:x="330691742" fg:w="373872"/><text x="64.5810%" y="447.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::unpark_one (3,028,461 samples, 0.59%)</title><rect x="63.8927%" y="581" width="0.5891%" height="15" fill="rgb(227,24,42)" fg:x="328438706" fg:w="3028461"/><text x="64.1427%" y="591.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (1,908,628 samples, 0.37%)</title><rect x="64.1105%" y="565" width="0.3713%" height="15" fill="rgb(223,211,37)" fg:x="329558539" fg:w="1908628"/><text x="64.3605%" y="575.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (1,908,628 samples, 0.37%)</title><rect x="64.1105%" y="549" width="0.3713%" height="15" fill="rgb(235,49,27)" fg:x="329558539" fg:w="1908628"/><text x="64.3605%" y="559.50"></text></g><g><title>core::mem::drop (775,425 samples, 0.15%)</title><rect x="64.3310%" y="533" width="0.1508%" height="15" fill="rgb(254,97,51)" fg:x="330691742" fg:w="775425"/><text x="64.5810%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;futures_channel::mpsc::queue::Node&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex&lt;futures_channel::mpsc::SenderTask&gt;&gt;&gt;&gt;&gt; (775,425 samples, 0.15%)</title><rect x="64.3310%" y="517" width="0.1508%" height="15" fill="rgb(249,51,40)" fg:x="330691742" fg:w="775425"/><text x="64.5810%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::queue::Node&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex&lt;futures_channel::mpsc::SenderTask&gt;&gt;&gt;&gt; (401,553 samples, 0.08%)</title><rect x="64.4037%" y="501" width="0.0781%" height="15" fill="rgb(210,128,45)" fg:x="331065614" fg:w="401553"/><text x="64.6537%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex&lt;futures_channel::mpsc::SenderTask&gt;&gt;&gt;&gt; (401,553 samples, 0.08%)</title><rect x="64.4037%" y="485" width="0.0781%" height="15" fill="rgb(224,137,50)" fg:x="331065614" fg:w="401553"/><text x="64.6537%" y="495.50"></text></g><g><title>__rustc::__rdl_dealloc (678,785 samples, 0.13%)</title><rect x="64.4818%" y="469" width="0.1320%" height="15" fill="rgb(242,15,9)" fg:x="331467167" fg:w="678785"/><text x="64.7318%" y="479.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (678,785 samples, 0.13%)</title><rect x="64.4818%" y="453" width="0.1320%" height="15" fill="rgb(233,187,41)" fg:x="331467167" fg:w="678785"/><text x="64.7318%" y="463.50"></text></g><g><title>&lt;http_body_util::combinators::collect::Collect&lt;T&gt; as core::future::future::Future&gt;::poll (4,147,362 samples, 0.81%)</title><rect x="63.8927%" y="693" width="0.8068%" height="15" fill="rgb(227,2,29)" fg:x="328438706" fg:w="4147362"/><text x="64.1427%" y="703.50"></text></g><g><title>&lt;axum_core::body::Body as http_body::Body&gt;::poll_frame (4,147,362 samples, 0.81%)</title><rect x="63.8927%" y="677" width="0.8068%" height="15" fill="rgb(222,70,3)" fg:x="328438706" fg:w="4147362"/><text x="64.1427%" y="687.50"></text></g><g><title>&lt;http_body_util::combinators::box_body::UnsyncBoxBody&lt;D,E&gt; as http_body::Body&gt;::poll_frame (4,147,362 samples, 0.81%)</title><rect x="63.8927%" y="661" width="0.8068%" height="15" fill="rgb(213,11,42)" fg:x="328438706" fg:w="4147362"/><text x="64.1427%" y="671.50"></text></g><g><title>&lt;http_body_util::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::poll_frame (4,147,362 samples, 0.81%)</title><rect x="63.8927%" y="645" width="0.8068%" height="15" fill="rgb(225,150,9)" fg:x="328438706" fg:w="4147362"/><text x="64.1427%" y="655.50"></text></g><g><title>&lt;hyper::body::incoming::Incoming as http_body::Body&gt;::poll_frame (4,147,362 samples, 0.81%)</title><rect x="63.8927%" y="629" width="0.8068%" height="15" fill="rgb(230,162,45)" fg:x="328438706" fg:w="4147362"/><text x="64.1427%" y="639.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,147,362 samples, 0.81%)</title><rect x="63.8927%" y="613" width="0.8068%" height="15" fill="rgb(222,14,52)" fg:x="328438706" fg:w="4147362"/><text x="64.1427%" y="623.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (4,147,362 samples, 0.81%)</title><rect x="63.8927%" y="597" width="0.8068%" height="15" fill="rgb(254,198,14)" fg:x="328438706" fg:w="4147362"/><text x="64.1427%" y="607.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (1,118,901 samples, 0.22%)</title><rect x="64.4818%" y="581" width="0.2177%" height="15" fill="rgb(220,217,30)" fg:x="331467167" fg:w="1118901"/><text x="64.7318%" y="591.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (1,118,901 samples, 0.22%)</title><rect x="64.4818%" y="565" width="0.2177%" height="15" fill="rgb(215,146,41)" fg:x="331467167" fg:w="1118901"/><text x="64.7318%" y="575.50"></text></g><g><title>core::mem::drop (1,118,901 samples, 0.22%)</title><rect x="64.4818%" y="549" width="0.2177%" height="15" fill="rgb(217,27,36)" fg:x="331467167" fg:w="1118901"/><text x="64.7318%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;futures_channel::mpsc::queue::Node&lt;core::result::Result&lt;bytes::bytes::Bytes,hyper::error::Error&gt;&gt;&gt;&gt; (1,118,901 samples, 0.22%)</title><rect x="64.4818%" y="533" width="0.2177%" height="15" fill="rgb(219,218,39)" fg:x="331467167" fg:w="1118901"/><text x="64.7318%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,118,901 samples, 0.22%)</title><rect x="64.4818%" y="517" width="0.2177%" height="15" fill="rgb(219,4,42)" fg:x="331467167" fg:w="1118901"/><text x="64.7318%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,118,901 samples, 0.22%)</title><rect x="64.4818%" y="501" width="0.2177%" height="15" fill="rgb(249,119,36)" fg:x="331467167" fg:w="1118901"/><text x="64.7318%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (1,118,901 samples, 0.22%)</title><rect x="64.4818%" y="485" width="0.2177%" height="15" fill="rgb(209,23,33)" fg:x="331467167" fg:w="1118901"/><text x="64.7318%" y="495.50"></text></g><g><title>__rustc::__rust_dealloc (440,116 samples, 0.09%)</title><rect x="64.6139%" y="469" width="0.0856%" height="15" fill="rgb(211,10,0)" fg:x="332145952" fg:w="440116"/><text x="64.8639%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::de::Deserializer&lt;serde_json::read::IoRead&lt;bytes::buf::reader::Reader&lt;http_body_util::util::BufList&lt;bytes::bytes::Bytes&gt;&gt;&gt;&gt;&gt; (1,300,923 samples, 0.25%)</title><rect x="64.8212%" y="661" width="0.2531%" height="15" fill="rgb(208,99,37)" fg:x="333211906" fg:w="1300923"/><text x="65.0712%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::read::IoRead&lt;bytes::buf::reader::Reader&lt;http_body_util::util::BufList&lt;bytes::bytes::Bytes&gt;&gt;&gt;&gt; (337,324 samples, 0.07%)</title><rect x="65.0087%" y="645" width="0.0656%" height="15" fill="rgb(213,132,31)" fg:x="334175505" fg:w="337324"/><text x="65.2587%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::iter::LineColIterator&lt;std::io::Bytes&lt;bytes::buf::reader::Reader&lt;http_body_util::util::BufList&lt;bytes::bytes::Bytes&gt;&gt;&gt;&gt;&gt; (337,324 samples, 0.07%)</title><rect x="65.0087%" y="629" width="0.0656%" height="15" fill="rgb(243,129,40)" fg:x="334175505" fg:w="337324"/><text x="65.2587%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::Bytes&lt;bytes::buf::reader::Reader&lt;http_body_util::util::BufList&lt;bytes::bytes::Bytes&gt;&gt;&gt;&gt; (337,324 samples, 0.07%)</title><rect x="65.0087%" y="613" width="0.0656%" height="15" fill="rgb(210,66,33)" fg:x="334175505" fg:w="337324"/><text x="65.2587%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::buf::reader::Reader&lt;http_body_util::util::BufList&lt;bytes::bytes::Bytes&gt;&gt;&gt; (337,324 samples, 0.07%)</title><rect x="65.0087%" y="597" width="0.0656%" height="15" fill="rgb(209,189,4)" fg:x="334175505" fg:w="337324"/><text x="65.2587%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::util::BufList&lt;bytes::bytes::Bytes&gt;&gt; (337,324 samples, 0.07%)</title><rect x="65.0087%" y="581" width="0.0656%" height="15" fill="rgb(214,107,37)" fg:x="334175505" fg:w="337324"/><text x="65.2587%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;bytes::bytes::Bytes&gt;&gt; (337,324 samples, 0.07%)</title><rect x="65.0087%" y="565" width="0.0656%" height="15" fill="rgb(245,88,54)" fg:x="334175505" fg:w="337324"/><text x="65.2587%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bytes::bytes::Bytes&gt;&gt; (337,324 samples, 0.07%)</title><rect x="65.0087%" y="549" width="0.0656%" height="15" fill="rgb(205,146,20)" fg:x="334175505" fg:w="337324"/><text x="65.2587%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (337,324 samples, 0.07%)</title><rect x="65.0087%" y="533" width="0.0656%" height="15" fill="rgb(220,161,25)" fg:x="334175505" fg:w="337324"/><text x="65.2587%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (337,324 samples, 0.07%)</title><rect x="65.0087%" y="517" width="0.0656%" height="15" fill="rgb(215,152,15)" fg:x="334175505" fg:w="337324"/><text x="65.2587%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (337,324 samples, 0.07%)</title><rect x="65.0087%" y="501" width="0.0656%" height="15" fill="rgb(233,192,44)" fg:x="334175505" fg:w="337324"/><text x="65.2587%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (337,324 samples, 0.07%)</title><rect x="65.0087%" y="485" width="0.0656%" height="15" fill="rgb(240,170,46)" fg:x="334175505" fg:w="337324"/><text x="65.2587%" y="495.50"></text></g><g><title>__rustc::__rdl_dealloc (337,324 samples, 0.07%)</title><rect x="65.0087%" y="469" width="0.0656%" height="15" fill="rgb(207,104,33)" fg:x="334175505" fg:w="337324"/><text x="65.2587%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,738,366 samples, 0.34%)</title><rect x="65.1974%" y="581" width="0.3382%" height="15" fill="rgb(219,21,39)" fg:x="335145763" fg:w="1738366"/><text x="65.4474%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,738,366 samples, 0.34%)</title><rect x="65.1974%" y="565" width="0.3382%" height="15" fill="rgb(214,133,29)" fg:x="335145763" fg:w="1738366"/><text x="65.4474%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,738,366 samples, 0.34%)</title><rect x="65.1974%" y="549" width="0.3382%" height="15" fill="rgb(226,93,6)" fg:x="335145763" fg:w="1738366"/><text x="65.4474%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,738,366 samples, 0.34%)</title><rect x="65.1974%" y="533" width="0.3382%" height="15" fill="rgb(252,222,34)" fg:x="335145763" fg:w="1738366"/><text x="65.4474%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,738,366 samples, 0.34%)</title><rect x="65.1974%" y="517" width="0.3382%" height="15" fill="rgb(252,92,48)" fg:x="335145763" fg:w="1738366"/><text x="65.4474%" y="527.50"></text></g><g><title>__GI___libc_malloc (1,738,366 samples, 0.34%)</title><rect x="65.1974%" y="501" width="0.3382%" height="15" fill="rgb(245,223,24)" fg:x="335145763" fg:w="1738366"/><text x="65.4474%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (447,823 samples, 0.09%)</title><rect x="65.5356%" y="581" width="0.0871%" height="15" fill="rgb(205,176,3)" fg:x="336884129" fg:w="447823"/><text x="65.7856%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (447,823 samples, 0.09%)</title><rect x="65.5356%" y="565" width="0.0871%" height="15" fill="rgb(235,151,15)" fg:x="336884129" fg:w="447823"/><text x="65.7856%" y="575.50"></text></g><g><title>&lt;http_body_util::util::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::remaining (593,790 samples, 0.12%)</title><rect x="66.0271%" y="325" width="0.1155%" height="15" fill="rgb(237,209,11)" fg:x="339410860" fg:w="593790"/><text x="66.2771%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (593,790 samples, 0.12%)</title><rect x="66.0271%" y="309" width="0.1155%" height="15" fill="rgb(243,227,24)" fg:x="339410860" fg:w="593790"/><text x="66.2771%" y="319.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (593,790 samples, 0.12%)</title><rect x="66.0271%" y="293" width="0.1155%" height="15" fill="rgb(239,193,16)" fg:x="339410860" fg:w="593790"/><text x="66.2771%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (593,790 samples, 0.12%)</title><rect x="66.0271%" y="277" width="0.1155%" height="15" fill="rgb(231,27,9)" fg:x="339410860" fg:w="593790"/><text x="66.2771%" y="287.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (593,790 samples, 0.12%)</title><rect x="66.0271%" y="261" width="0.1155%" height="15" fill="rgb(219,169,10)" fg:x="339410860" fg:w="593790"/><text x="66.2771%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (593,790 samples, 0.12%)</title><rect x="66.0271%" y="245" width="0.1155%" height="15" fill="rgb(244,229,43)" fg:x="339410860" fg:w="593790"/><text x="66.2771%" y="255.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (598,044 samples, 0.12%)</title><rect x="66.1427%" y="293" width="0.1163%" height="15" fill="rgb(254,38,20)" fg:x="340004650" fg:w="598044"/><text x="66.3927%" y="303.50"></text></g><g><title>&lt;http_body_util::util::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::remaining (598,044 samples, 0.12%)</title><rect x="66.1427%" y="277" width="0.1163%" height="15" fill="rgb(250,47,30)" fg:x="340004650" fg:w="598044"/><text x="66.3927%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (598,044 samples, 0.12%)</title><rect x="66.1427%" y="261" width="0.1163%" height="15" fill="rgb(224,124,36)" fg:x="340004650" fg:w="598044"/><text x="66.3927%" y="271.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (598,044 samples, 0.12%)</title><rect x="66.1427%" y="245" width="0.1163%" height="15" fill="rgb(246,68,51)" fg:x="340004650" fg:w="598044"/><text x="66.3927%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (598,044 samples, 0.12%)</title><rect x="66.1427%" y="229" width="0.1163%" height="15" fill="rgb(253,43,49)" fg:x="340004650" fg:w="598044"/><text x="66.3927%" y="239.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (598,044 samples, 0.12%)</title><rect x="66.1427%" y="213" width="0.1163%" height="15" fill="rgb(219,54,36)" fg:x="340004650" fg:w="598044"/><text x="66.3927%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (598,044 samples, 0.12%)</title><rect x="66.1427%" y="197" width="0.1163%" height="15" fill="rgb(227,133,34)" fg:x="340004650" fg:w="598044"/><text x="66.3927%" y="207.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (3,241,139 samples, 0.63%)</title><rect x="65.7292%" y="469" width="0.6305%" height="15" fill="rgb(247,227,15)" fg:x="337879353" fg:w="3241139"/><text x="65.9792%" y="479.50"></text></g><g><title>serde_json::read::IoRead&lt;R&gt;::parse_str_bytes (3,241,139 samples, 0.63%)</title><rect x="65.7292%" y="453" width="0.6305%" height="15" fill="rgb(229,96,14)" fg:x="337879353" fg:w="3241139"/><text x="65.9792%" y="463.50"></text></g><g><title>serde_json::read::next_or_eof (3,241,139 samples, 0.63%)</title><rect x="65.7292%" y="437" width="0.6305%" height="15" fill="rgb(220,79,17)" fg:x="337879353" fg:w="3241139"/><text x="65.9792%" y="447.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::next (2,837,510 samples, 0.55%)</title><rect x="65.8077%" y="421" width="0.5520%" height="15" fill="rgb(205,131,53)" fg:x="338282982" fg:w="2837510"/><text x="66.0577%" y="431.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,285,809 samples, 0.44%)</title><rect x="65.9151%" y="405" width="0.4447%" height="15" fill="rgb(209,50,29)" fg:x="338834683" fg:w="2285809"/><text x="66.1651%" y="415.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,709,632 samples, 0.33%)</title><rect x="66.0271%" y="389" width="0.3326%" height="15" fill="rgb(245,86,46)" fg:x="339410860" fg:w="1709632"/><text x="66.2771%" y="399.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (1,709,632 samples, 0.33%)</title><rect x="66.0271%" y="373" width="0.3326%" height="15" fill="rgb(235,66,46)" fg:x="339410860" fg:w="1709632"/><text x="66.2771%" y="383.50"></text></g><g><title>std::io::inlined_slow_read_byte (1,709,632 samples, 0.33%)</title><rect x="66.0271%" y="357" width="0.3326%" height="15" fill="rgb(232,148,31)" fg:x="339410860" fg:w="1709632"/><text x="66.2771%" y="367.50"></text></g><g><title>&lt;bytes::buf::reader::Reader&lt;B&gt; as std::io::Read&gt;::read (1,709,632 samples, 0.33%)</title><rect x="66.0271%" y="341" width="0.3326%" height="15" fill="rgb(217,149,8)" fg:x="339410860" fg:w="1709632"/><text x="66.2771%" y="351.50"></text></g><g><title>bytes::buf::buf_impl::Buf::copy_to_slice (1,115,842 samples, 0.22%)</title><rect x="66.1427%" y="325" width="0.2171%" height="15" fill="rgb(209,183,11)" fg:x="340004650" fg:w="1115842"/><text x="66.3927%" y="335.50"></text></g><g><title>bytes::buf::buf_impl::Buf::try_copy_to_slice (1,115,842 samples, 0.22%)</title><rect x="66.1427%" y="309" width="0.2171%" height="15" fill="rgb(208,55,20)" fg:x="340004650" fg:w="1115842"/><text x="66.3927%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (517,798 samples, 0.10%)</title><rect x="66.2590%" y="293" width="0.1007%" height="15" fill="rgb(218,39,14)" fg:x="340602694" fg:w="517798"/><text x="66.5090%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (517,798 samples, 0.10%)</title><rect x="66.2590%" y="277" width="0.1007%" height="15" fill="rgb(216,169,33)" fg:x="340602694" fg:w="517798"/><text x="66.5090%" y="287.50"></text></g><g><title>__GI___memcpy_simd (517,798 samples, 0.10%)</title><rect x="66.2590%" y="261" width="0.1007%" height="15" fill="rgb(233,80,24)" fg:x="340602694" fg:w="517798"/><text x="66.5090%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4,418,746 samples, 0.86%)</title><rect x="65.6227%" y="549" width="0.8596%" height="15" fill="rgb(213,179,31)" fg:x="337331952" fg:w="4418746"/><text x="65.8727%" y="559.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,871,345 samples, 0.75%)</title><rect x="65.7292%" y="533" width="0.7531%" height="15" fill="rgb(209,19,5)" fg:x="337879353" fg:w="3871345"/><text x="65.9792%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (3,871,345 samples, 0.75%)</title><rect x="65.7292%" y="517" width="0.7531%" height="15" fill="rgb(219,18,35)" fg:x="337879353" fg:w="3871345"/><text x="65.9792%" y="527.50"></text></g><g><title>serde::de::Deserializer::__deserialize_content (3,871,345 samples, 0.75%)</title><rect x="65.7292%" y="501" width="0.7531%" height="15" fill="rgb(209,169,16)" fg:x="337879353" fg:w="3871345"/><text x="65.9792%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,871,345 samples, 0.75%)</title><rect x="65.7292%" y="485" width="0.7531%" height="15" fill="rgb(245,90,51)" fg:x="337879353" fg:w="3871345"/><text x="65.9792%" y="495.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (630,206 samples, 0.12%)</title><rect x="66.3597%" y="469" width="0.1226%" height="15" fill="rgb(220,99,45)" fg:x="341120492" fg:w="630206"/><text x="66.6097%" y="479.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::discard (630,206 samples, 0.12%)</title><rect x="66.3597%" y="453" width="0.1226%" height="15" fill="rgb(249,89,25)" fg:x="341120492" fg:w="630206"/><text x="66.6097%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (630,206 samples, 0.12%)</title><rect x="66.3597%" y="437" width="0.1226%" height="15" fill="rgb(239,193,0)" fg:x="341120492" fg:w="630206"/><text x="66.6097%" y="447.50"></text></g><g><title>core::mem::replace (630,206 samples, 0.12%)</title><rect x="66.3597%" y="421" width="0.1226%" height="15" fill="rgb(231,126,1)" fg:x="341120492" fg:w="630206"/><text x="66.6097%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_str (1,120,196 samples, 0.22%)</title><rect x="66.5580%" y="389" width="0.2179%" height="15" fill="rgb(243,166,3)" fg:x="342139471" fg:w="1120196"/><text x="66.8080%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,120,196 samples, 0.22%)</title><rect x="66.5580%" y="373" width="0.2179%" height="15" fill="rgb(223,22,34)" fg:x="342139471" fg:w="1120196"/><text x="66.8080%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,120,196 samples, 0.22%)</title><rect x="66.5580%" y="357" width="0.2179%" height="15" fill="rgb(251,52,51)" fg:x="342139471" fg:w="1120196"/><text x="66.8080%" y="367.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,120,196 samples, 0.22%)</title><rect x="66.5580%" y="341" width="0.2179%" height="15" fill="rgb(221,165,28)" fg:x="342139471" fg:w="1120196"/><text x="66.8080%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,120,196 samples, 0.22%)</title><rect x="66.5580%" y="325" width="0.2179%" height="15" fill="rgb(218,121,47)" fg:x="342139471" fg:w="1120196"/><text x="66.8080%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,120,196 samples, 0.22%)</title><rect x="66.5580%" y="309" width="0.2179%" height="15" fill="rgb(209,120,9)" fg:x="342139471" fg:w="1120196"/><text x="66.8080%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,120,196 samples, 0.22%)</title><rect x="66.5580%" y="293" width="0.2179%" height="15" fill="rgb(236,68,12)" fg:x="342139471" fg:w="1120196"/><text x="66.8080%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (1,120,196 samples, 0.22%)</title><rect x="66.5580%" y="277" width="0.2179%" height="15" fill="rgb(225,194,26)" fg:x="342139471" fg:w="1120196"/><text x="66.8080%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,120,196 samples, 0.22%)</title><rect x="66.5580%" y="261" width="0.2179%" height="15" fill="rgb(231,84,39)" fg:x="342139471" fg:w="1120196"/><text x="66.8080%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,120,196 samples, 0.22%)</title><rect x="66.5580%" y="245" width="0.2179%" height="15" fill="rgb(210,11,45)" fg:x="342139471" fg:w="1120196"/><text x="66.8080%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,120,196 samples, 0.22%)</title><rect x="66.5580%" y="229" width="0.2179%" height="15" fill="rgb(224,54,52)" fg:x="342139471" fg:w="1120196"/><text x="66.8080%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,120,196 samples, 0.22%)</title><rect x="66.5580%" y="213" width="0.2179%" height="15" fill="rgb(238,102,14)" fg:x="342139471" fg:w="1120196"/><text x="66.8080%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,120,196 samples, 0.22%)</title><rect x="66.5580%" y="197" width="0.2179%" height="15" fill="rgb(243,160,52)" fg:x="342139471" fg:w="1120196"/><text x="66.8080%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,120,196 samples, 0.22%)</title><rect x="66.5580%" y="181" width="0.2179%" height="15" fill="rgb(216,114,19)" fg:x="342139471" fg:w="1120196"/><text x="66.8080%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1,120,196 samples, 0.22%)</title><rect x="66.5580%" y="165" width="0.2179%" height="15" fill="rgb(244,166,37)" fg:x="342139471" fg:w="1120196"/><text x="66.8080%" y="175.50"></text></g><g><title>__GI___libc_malloc (537,736 samples, 0.10%)</title><rect x="66.6713%" y="149" width="0.1046%" height="15" fill="rgb(246,29,44)" fg:x="342721931" fg:w="537736"/><text x="66.9213%" y="159.50"></text></g><g><title>core::ops::function::FnOnce::call_once (575,664 samples, 0.11%)</title><rect x="66.7759%" y="357" width="0.1120%" height="15" fill="rgb(215,56,53)" fg:x="343259667" fg:w="575664"/><text x="67.0259%" y="367.50"></text></g><g><title>serde_json::read::as_str (575,664 samples, 0.11%)</title><rect x="66.7759%" y="341" width="0.1120%" height="15" fill="rgb(217,60,2)" fg:x="343259667" fg:w="575664"/><text x="67.0259%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,083,357 samples, 0.41%)</title><rect x="66.5580%" y="469" width="0.4053%" height="15" fill="rgb(207,26,24)" fg:x="342139471" fg:w="2083357"/><text x="66.8080%" y="479.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,083,357 samples, 0.41%)</title><rect x="66.5580%" y="453" width="0.4053%" height="15" fill="rgb(252,210,15)" fg:x="342139471" fg:w="2083357"/><text x="66.8080%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (2,083,357 samples, 0.41%)</title><rect x="66.5580%" y="437" width="0.4053%" height="15" fill="rgb(253,209,26)" fg:x="342139471" fg:w="2083357"/><text x="66.8080%" y="447.50"></text></g><g><title>serde::de::Deserializer::__deserialize_content (2,083,357 samples, 0.41%)</title><rect x="66.5580%" y="421" width="0.4053%" height="15" fill="rgb(238,170,14)" fg:x="342139471" fg:w="2083357"/><text x="66.8080%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,083,357 samples, 0.41%)</title><rect x="66.5580%" y="405" width="0.4053%" height="15" fill="rgb(216,178,15)" fg:x="342139471" fg:w="2083357"/><text x="66.8080%" y="415.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (963,161 samples, 0.19%)</title><rect x="66.7759%" y="389" width="0.1874%" height="15" fill="rgb(250,197,2)" fg:x="343259667" fg:w="963161"/><text x="67.0259%" y="399.50"></text></g><g><title>serde_json::read::IoRead&lt;R&gt;::parse_str_bytes (963,161 samples, 0.19%)</title><rect x="66.7759%" y="373" width="0.1874%" height="15" fill="rgb(212,70,42)" fg:x="343259667" fg:w="963161"/><text x="67.0259%" y="383.50"></text></g><g><title>serde_json::read::next_or_eof (387,497 samples, 0.08%)</title><rect x="66.8879%" y="357" width="0.0754%" height="15" fill="rgb(227,213,9)" fg:x="343835331" fg:w="387497"/><text x="67.1379%" y="367.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::next (387,497 samples, 0.08%)</title><rect x="66.8879%" y="341" width="0.0754%" height="15" fill="rgb(245,99,25)" fg:x="343835331" fg:w="387497"/><text x="67.1379%" y="351.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (387,497 samples, 0.08%)</title><rect x="66.8879%" y="325" width="0.0754%" height="15" fill="rgb(250,82,29)" fg:x="343835331" fg:w="387497"/><text x="67.1379%" y="335.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (387,497 samples, 0.08%)</title><rect x="66.8879%" y="309" width="0.0754%" height="15" fill="rgb(241,226,54)" fg:x="343835331" fg:w="387497"/><text x="67.1379%" y="319.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (387,497 samples, 0.08%)</title><rect x="66.8879%" y="293" width="0.0754%" height="15" fill="rgb(221,99,41)" fg:x="343835331" fg:w="387497"/><text x="67.1379%" y="303.50"></text></g><g><title>std::io::inlined_slow_read_byte (387,497 samples, 0.08%)</title><rect x="66.8879%" y="277" width="0.0754%" height="15" fill="rgb(213,90,21)" fg:x="343835331" fg:w="387497"/><text x="67.1379%" y="287.50"></text></g><g><title>&lt;bytes::buf::reader::Reader&lt;B&gt; as std::io::Read&gt;::read (387,497 samples, 0.08%)</title><rect x="66.8879%" y="261" width="0.0754%" height="15" fill="rgb(205,208,24)" fg:x="343835331" fg:w="387497"/><text x="67.1379%" y="271.50"></text></g><g><title>&lt;http_body_util::util::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::remaining (387,497 samples, 0.08%)</title><rect x="66.8879%" y="245" width="0.0754%" height="15" fill="rgb(246,31,12)" fg:x="343835331" fg:w="387497"/><text x="67.1379%" y="255.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::iter (387,497 samples, 0.08%)</title><rect x="66.8879%" y="229" width="0.0754%" height="15" fill="rgb(213,154,6)" fg:x="343835331" fg:w="387497"/><text x="67.1379%" y="239.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::as_slices (387,497 samples, 0.08%)</title><rect x="66.8879%" y="213" width="0.0754%" height="15" fill="rgb(222,163,29)" fg:x="343835331" fg:w="387497"/><text x="67.1379%" y="223.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::slice_ranges (387,497 samples, 0.08%)</title><rect x="66.8879%" y="197" width="0.0754%" height="15" fill="rgb(227,201,8)" fg:x="343835331" fg:w="387497"/><text x="67.1379%" y="207.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (387,497 samples, 0.08%)</title><rect x="66.8879%" y="181" width="0.0754%" height="15" fill="rgb(233,9,32)" fg:x="343835331" fg:w="387497"/><text x="67.1379%" y="191.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (387,497 samples, 0.08%)</title><rect x="66.8879%" y="165" width="0.0754%" height="15" fill="rgb(217,54,24)" fg:x="343835331" fg:w="387497"/><text x="67.1379%" y="175.50"></text></g><g><title>alloc::collections::vec_deque::wrap_index (387,497 samples, 0.08%)</title><rect x="66.8879%" y="149" width="0.0754%" height="15" fill="rgb(235,192,0)" fg:x="343835331" fg:w="387497"/><text x="67.1379%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,874,481 samples, 0.36%)</title><rect x="66.9632%" y="389" width="0.3647%" height="15" fill="rgb(235,45,9)" fg:x="344222828" fg:w="1874481"/><text x="67.2132%" y="399.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,382,837 samples, 0.27%)</title><rect x="67.0589%" y="373" width="0.2690%" height="15" fill="rgb(246,42,40)" fg:x="344714472" fg:w="1382837"/><text x="67.3089%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (1,382,837 samples, 0.27%)</title><rect x="67.0589%" y="357" width="0.2690%" height="15" fill="rgb(248,111,24)" fg:x="344714472" fg:w="1382837"/><text x="67.3089%" y="367.50"></text></g><g><title>serde::de::Deserializer::__deserialize_content (1,382,837 samples, 0.27%)</title><rect x="67.0589%" y="341" width="0.2690%" height="15" fill="rgb(249,65,22)" fg:x="344714472" fg:w="1382837"/><text x="67.3089%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,382,837 samples, 0.27%)</title><rect x="67.0589%" y="325" width="0.2690%" height="15" fill="rgb(238,111,51)" fg:x="344714472" fg:w="1382837"/><text x="67.3089%" y="335.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (1,382,837 samples, 0.27%)</title><rect x="67.0589%" y="309" width="0.2690%" height="15" fill="rgb(250,118,22)" fg:x="344714472" fg:w="1382837"/><text x="67.3089%" y="319.50"></text></g><g><title>serde_json::read::IoRead&lt;R&gt;::parse_str_bytes (1,382,837 samples, 0.27%)</title><rect x="67.0589%" y="293" width="0.2690%" height="15" fill="rgb(234,84,26)" fg:x="344714472" fg:w="1382837"/><text x="67.3089%" y="303.50"></text></g><g><title>serde_json::read::next_or_eof (1,382,837 samples, 0.27%)</title><rect x="67.0589%" y="277" width="0.2690%" height="15" fill="rgb(243,172,12)" fg:x="344714472" fg:w="1382837"/><text x="67.3089%" y="287.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::next (1,382,837 samples, 0.27%)</title><rect x="67.0589%" y="261" width="0.2690%" height="15" fill="rgb(236,150,49)" fg:x="344714472" fg:w="1382837"/><text x="67.3089%" y="271.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,382,837 samples, 0.27%)</title><rect x="67.0589%" y="245" width="0.2690%" height="15" fill="rgb(225,197,26)" fg:x="344714472" fg:w="1382837"/><text x="67.3089%" y="255.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,022,537 samples, 0.20%)</title><rect x="67.1290%" y="229" width="0.1989%" height="15" fill="rgb(214,17,42)" fg:x="345074772" fg:w="1022537"/><text x="67.3790%" y="239.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (1,022,537 samples, 0.20%)</title><rect x="67.1290%" y="213" width="0.1989%" height="15" fill="rgb(224,165,40)" fg:x="345074772" fg:w="1022537"/><text x="67.3790%" y="223.50"></text></g><g><title>std::io::inlined_slow_read_byte (1,022,537 samples, 0.20%)</title><rect x="67.1290%" y="197" width="0.1989%" height="15" fill="rgb(246,100,4)" fg:x="345074772" fg:w="1022537"/><text x="67.3790%" y="207.50"></text></g><g><title>&lt;bytes::buf::reader::Reader&lt;B&gt; as std::io::Read&gt;::read (1,022,537 samples, 0.20%)</title><rect x="67.1290%" y="181" width="0.1989%" height="15" fill="rgb(222,103,0)" fg:x="345074772" fg:w="1022537"/><text x="67.3790%" y="191.50"></text></g><g><title>bytes::buf::buf_impl::Buf::copy_to_slice (1,022,537 samples, 0.20%)</title><rect x="67.1290%" y="165" width="0.1989%" height="15" fill="rgb(227,189,26)" fg:x="345074772" fg:w="1022537"/><text x="67.3790%" y="175.50"></text></g><g><title>bytes::buf::buf_impl::Buf::try_copy_to_slice (1,022,537 samples, 0.20%)</title><rect x="67.1290%" y="149" width="0.1989%" height="15" fill="rgb(214,202,17)" fg:x="345074772" fg:w="1022537"/><text x="67.3790%" y="159.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (1,022,537 samples, 0.20%)</title><rect x="67.1290%" y="133" width="0.1989%" height="15" fill="rgb(229,111,3)" fg:x="345074772" fg:w="1022537"/><text x="67.3790%" y="143.50"></text></g><g><title>&lt;http_body_util::util::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::remaining (1,022,537 samples, 0.20%)</title><rect x="67.1290%" y="117" width="0.1989%" height="15" fill="rgb(229,172,15)" fg:x="345074772" fg:w="1022537"/><text x="67.3790%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,022,537 samples, 0.20%)</title><rect x="67.1290%" y="101" width="0.1989%" height="15" fill="rgb(230,224,35)" fg:x="345074772" fg:w="1022537"/><text x="67.3790%" y="111.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,022,537 samples, 0.20%)</title><rect x="67.1290%" y="85" width="0.1989%" height="15" fill="rgb(251,141,6)" fg:x="345074772" fg:w="1022537"/><text x="67.3790%" y="95.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,022,537 samples, 0.20%)</title><rect x="67.1290%" y="69" width="0.1989%" height="15" fill="rgb(225,208,6)" fg:x="345074772" fg:w="1022537"/><text x="67.3790%" y="79.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,022,537 samples, 0.20%)</title><rect x="67.1290%" y="53" width="0.1989%" height="15" fill="rgb(246,181,16)" fg:x="345074772" fg:w="1022537"/><text x="67.3790%" y="63.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,022,537 samples, 0.20%)</title><rect x="67.1290%" y="37" width="0.1989%" height="15" fill="rgb(227,129,36)" fg:x="345074772" fg:w="1022537"/><text x="67.3790%" y="47.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2,448,643 samples, 0.48%)</title><rect x="66.9632%" y="437" width="0.4763%" height="15" fill="rgb(248,117,24)" fg:x="344222828" fg:w="2448643"/><text x="67.2132%" y="447.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,448,643 samples, 0.48%)</title><rect x="66.9632%" y="421" width="0.4763%" height="15" fill="rgb(214,185,35)" fg:x="344222828" fg:w="2448643"/><text x="67.2132%" y="431.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,448,643 samples, 0.48%)</title><rect x="66.9632%" y="405" width="0.4763%" height="15" fill="rgb(236,150,34)" fg:x="344222828" fg:w="2448643"/><text x="67.2132%" y="415.50"></text></g><g><title>serde::de::Deserializer::__deserialize_content (574,162 samples, 0.11%)</title><rect x="67.3279%" y="389" width="0.1117%" height="15" fill="rgb(243,228,27)" fg:x="346097309" fg:w="574162"/><text x="67.5779%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (574,162 samples, 0.11%)</title><rect x="67.3279%" y="373" width="0.1117%" height="15" fill="rgb(245,77,44)" fg:x="346097309" fg:w="574162"/><text x="67.5779%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_str (2,374,142 samples, 0.46%)</title><rect x="67.4396%" y="437" width="0.4619%" height="15" fill="rgb(235,214,42)" fg:x="346671471" fg:w="2374142"/><text x="67.6896%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2,374,142 samples, 0.46%)</title><rect x="67.4396%" y="421" width="0.4619%" height="15" fill="rgb(221,74,3)" fg:x="346671471" fg:w="2374142"/><text x="67.6896%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (2,374,142 samples, 0.46%)</title><rect x="67.4396%" y="405" width="0.4619%" height="15" fill="rgb(206,121,29)" fg:x="346671471" fg:w="2374142"/><text x="67.6896%" y="415.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2,374,142 samples, 0.46%)</title><rect x="67.4396%" y="389" width="0.4619%" height="15" fill="rgb(249,131,53)" fg:x="346671471" fg:w="2374142"/><text x="67.6896%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2,374,142 samples, 0.46%)</title><rect x="67.4396%" y="373" width="0.4619%" height="15" fill="rgb(236,170,29)" fg:x="346671471" fg:w="2374142"/><text x="67.6896%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,374,142 samples, 0.46%)</title><rect x="67.4396%" y="357" width="0.4619%" height="15" fill="rgb(247,96,15)" fg:x="346671471" fg:w="2374142"/><text x="67.6896%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,374,142 samples, 0.46%)</title><rect x="67.4396%" y="341" width="0.4619%" height="15" fill="rgb(211,210,7)" fg:x="346671471" fg:w="2374142"/><text x="67.6896%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (2,374,142 samples, 0.46%)</title><rect x="67.4396%" y="325" width="0.4619%" height="15" fill="rgb(240,88,50)" fg:x="346671471" fg:w="2374142"/><text x="67.6896%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,374,142 samples, 0.46%)</title><rect x="67.4396%" y="309" width="0.4619%" height="15" fill="rgb(209,229,26)" fg:x="346671471" fg:w="2374142"/><text x="67.6896%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,374,142 samples, 0.46%)</title><rect x="67.4396%" y="293" width="0.4619%" height="15" fill="rgb(210,68,23)" fg:x="346671471" fg:w="2374142"/><text x="67.6896%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,374,142 samples, 0.46%)</title><rect x="67.4396%" y="277" width="0.4619%" height="15" fill="rgb(229,180,13)" fg:x="346671471" fg:w="2374142"/><text x="67.6896%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,374,142 samples, 0.46%)</title><rect x="67.4396%" y="261" width="0.4619%" height="15" fill="rgb(236,53,44)" fg:x="346671471" fg:w="2374142"/><text x="67.6896%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,374,142 samples, 0.46%)</title><rect x="67.4396%" y="245" width="0.4619%" height="15" fill="rgb(244,214,29)" fg:x="346671471" fg:w="2374142"/><text x="67.6896%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,374,142 samples, 0.46%)</title><rect x="67.4396%" y="229" width="0.4619%" height="15" fill="rgb(220,75,29)" fg:x="346671471" fg:w="2374142"/><text x="67.6896%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2,374,142 samples, 0.46%)</title><rect x="67.4396%" y="213" width="0.4619%" height="15" fill="rgb(214,183,37)" fg:x="346671471" fg:w="2374142"/><text x="67.6896%" y="223.50"></text></g><g><title>__GI___libc_malloc (2,374,142 samples, 0.46%)</title><rect x="67.4396%" y="197" width="0.4619%" height="15" fill="rgb(239,117,29)" fg:x="346671471" fg:w="2374142"/><text x="67.6896%" y="207.50"></text></g><g><title>_int_malloc (2,374,142 samples, 0.46%)</title><rect x="67.4396%" y="181" width="0.4619%" height="15" fill="rgb(237,171,35)" fg:x="346671471" fg:w="2374142"/><text x="67.6896%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (7,761,032 samples, 1.51%)</title><rect x="66.4823%" y="517" width="1.5098%" height="15" fill="rgb(229,178,53)" fg:x="341750698" fg:w="7761032"/><text x="66.7323%" y="527.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,761,032 samples, 1.51%)</title><rect x="66.4823%" y="501" width="1.5098%" height="15" fill="rgb(210,102,19)" fg:x="341750698" fg:w="7761032"/><text x="66.7323%" y="511.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (7,761,032 samples, 1.51%)</title><rect x="66.4823%" y="485" width="1.5098%" height="15" fill="rgb(235,127,22)" fg:x="341750698" fg:w="7761032"/><text x="66.7323%" y="495.50"></text></g><g><title>serde::de::Deserializer::__deserialize_content (5,288,902 samples, 1.03%)</title><rect x="66.9632%" y="469" width="1.0289%" height="15" fill="rgb(244,31,31)" fg:x="344222828" fg:w="5288902"/><text x="67.2132%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,288,902 samples, 1.03%)</title><rect x="66.9632%" y="453" width="1.0289%" height="15" fill="rgb(231,43,21)" fg:x="344222828" fg:w="5288902"/><text x="67.2132%" y="463.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (466,117 samples, 0.09%)</title><rect x="67.9014%" y="437" width="0.0907%" height="15" fill="rgb(217,131,35)" fg:x="349045613" fg:w="466117"/><text x="68.1514%" y="447.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (466,117 samples, 0.09%)</title><rect x="67.9014%" y="421" width="0.0907%" height="15" fill="rgb(221,149,4)" fg:x="349045613" fg:w="466117"/><text x="68.1514%" y="431.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (466,117 samples, 0.09%)</title><rect x="67.9014%" y="405" width="0.0907%" height="15" fill="rgb(232,170,28)" fg:x="349045613" fg:w="466117"/><text x="68.1514%" y="415.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (466,117 samples, 0.09%)</title><rect x="67.9014%" y="389" width="0.0907%" height="15" fill="rgb(238,56,10)" fg:x="349045613" fg:w="466117"/><text x="68.1514%" y="399.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (466,117 samples, 0.09%)</title><rect x="67.9014%" y="373" width="0.0907%" height="15" fill="rgb(235,196,14)" fg:x="349045613" fg:w="466117"/><text x="68.1514%" y="383.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (466,117 samples, 0.09%)</title><rect x="67.9014%" y="357" width="0.0907%" height="15" fill="rgb(216,45,48)" fg:x="349045613" fg:w="466117"/><text x="68.1514%" y="367.50"></text></g><g><title>std::io::inlined_slow_read_byte (466,117 samples, 0.09%)</title><rect x="67.9014%" y="341" width="0.0907%" height="15" fill="rgb(238,213,17)" fg:x="349045613" fg:w="466117"/><text x="68.1514%" y="351.50"></text></g><g><title>&lt;bytes::buf::reader::Reader&lt;B&gt; as std::io::Read&gt;::read (466,117 samples, 0.09%)</title><rect x="67.9014%" y="325" width="0.0907%" height="15" fill="rgb(212,13,2)" fg:x="349045613" fg:w="466117"/><text x="68.1514%" y="335.50"></text></g><g><title>bytes::buf::buf_impl::Buf::copy_to_slice (466,117 samples, 0.09%)</title><rect x="67.9014%" y="309" width="0.0907%" height="15" fill="rgb(240,114,20)" fg:x="349045613" fg:w="466117"/><text x="68.1514%" y="319.50"></text></g><g><title>bytes::buf::buf_impl::Buf::try_copy_to_slice (466,117 samples, 0.09%)</title><rect x="67.9014%" y="293" width="0.0907%" height="15" fill="rgb(228,41,40)" fg:x="349045613" fg:w="466117"/><text x="68.1514%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_str (1,449,263 samples, 0.28%)</title><rect x="67.9921%" y="517" width="0.2819%" height="15" fill="rgb(244,132,35)" fg:x="349511730" fg:w="1449263"/><text x="68.2421%" y="527.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,449,263 samples, 0.28%)</title><rect x="67.9921%" y="501" width="0.2819%" height="15" fill="rgb(253,189,4)" fg:x="349511730" fg:w="1449263"/><text x="68.2421%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,449,263 samples, 0.28%)</title><rect x="67.9921%" y="485" width="0.2819%" height="15" fill="rgb(224,37,19)" fg:x="349511730" fg:w="1449263"/><text x="68.2421%" y="495.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,449,263 samples, 0.28%)</title><rect x="67.9921%" y="469" width="0.2819%" height="15" fill="rgb(235,223,18)" fg:x="349511730" fg:w="1449263"/><text x="68.2421%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,449,263 samples, 0.28%)</title><rect x="67.9921%" y="453" width="0.2819%" height="15" fill="rgb(235,163,25)" fg:x="349511730" fg:w="1449263"/><text x="68.2421%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,449,263 samples, 0.28%)</title><rect x="67.9921%" y="437" width="0.2819%" height="15" fill="rgb(217,145,28)" fg:x="349511730" fg:w="1449263"/><text x="68.2421%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,449,263 samples, 0.28%)</title><rect x="67.9921%" y="421" width="0.2819%" height="15" fill="rgb(223,223,32)" fg:x="349511730" fg:w="1449263"/><text x="68.2421%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (1,449,263 samples, 0.28%)</title><rect x="67.9921%" y="405" width="0.2819%" height="15" fill="rgb(227,189,39)" fg:x="349511730" fg:w="1449263"/><text x="68.2421%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,449,263 samples, 0.28%)</title><rect x="67.9921%" y="389" width="0.2819%" height="15" fill="rgb(248,10,22)" fg:x="349511730" fg:w="1449263"/><text x="68.2421%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,449,263 samples, 0.28%)</title><rect x="67.9921%" y="373" width="0.2819%" height="15" fill="rgb(248,46,39)" fg:x="349511730" fg:w="1449263"/><text x="68.2421%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,449,263 samples, 0.28%)</title><rect x="67.9921%" y="357" width="0.2819%" height="15" fill="rgb(248,113,48)" fg:x="349511730" fg:w="1449263"/><text x="68.2421%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,449,263 samples, 0.28%)</title><rect x="67.9921%" y="341" width="0.2819%" height="15" fill="rgb(245,16,25)" fg:x="349511730" fg:w="1449263"/><text x="68.2421%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,449,263 samples, 0.28%)</title><rect x="67.9921%" y="325" width="0.2819%" height="15" fill="rgb(249,152,16)" fg:x="349511730" fg:w="1449263"/><text x="68.2421%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,449,263 samples, 0.28%)</title><rect x="67.9921%" y="309" width="0.2819%" height="15" fill="rgb(250,16,1)" fg:x="349511730" fg:w="1449263"/><text x="68.2421%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1,449,263 samples, 0.28%)</title><rect x="67.9921%" y="293" width="0.2819%" height="15" fill="rgb(249,138,3)" fg:x="349511730" fg:w="1449263"/><text x="68.2421%" y="303.50"></text></g><g><title>__GI___libc_malloc (1,449,263 samples, 0.28%)</title><rect x="67.9921%" y="277" width="0.2819%" height="15" fill="rgb(227,71,41)" fg:x="349511730" fg:w="1449263"/><text x="68.2421%" y="287.50"></text></g><g><title>_int_malloc (1,449,263 samples, 0.28%)</title><rect x="67.9921%" y="261" width="0.2819%" height="15" fill="rgb(209,184,23)" fg:x="349511730" fg:w="1449263"/><text x="68.2421%" y="271.50"></text></g><g><title>core::ops::function::FnOnce::call_once (882,965 samples, 0.17%)</title><rect x="68.2740%" y="485" width="0.1718%" height="15" fill="rgb(223,215,31)" fg:x="350960993" fg:w="882965"/><text x="68.5240%" y="495.50"></text></g><g><title>serde_json::read::as_str (882,965 samples, 0.17%)</title><rect x="68.2740%" y="469" width="0.1718%" height="15" fill="rgb(210,146,28)" fg:x="350960993" fg:w="882965"/><text x="68.5240%" y="479.50"></text></g><g><title>core::str::converts::from_utf8 (882,965 samples, 0.17%)</title><rect x="68.2740%" y="453" width="0.1718%" height="15" fill="rgb(209,183,41)" fg:x="350960993" fg:w="882965"/><text x="68.5240%" y="463.50"></text></g><g><title>core::str::validations::run_utf8_validation (882,965 samples, 0.17%)</title><rect x="68.2740%" y="437" width="0.1718%" height="15" fill="rgb(209,224,45)" fg:x="350960993" fg:w="882965"/><text x="68.5240%" y="447.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (1,939,981 samples, 0.38%)</title><rect x="68.2740%" y="517" width="0.3774%" height="15" fill="rgb(224,209,51)" fg:x="350960993" fg:w="1939981"/><text x="68.5240%" y="527.50"></text></g><g><title>serde_json::read::IoRead&lt;R&gt;::parse_str_bytes (1,939,981 samples, 0.38%)</title><rect x="68.2740%" y="501" width="0.3774%" height="15" fill="rgb(223,17,39)" fg:x="350960993" fg:w="1939981"/><text x="68.5240%" y="511.50"></text></g><g><title>serde_json::read::next_or_eof (1,057,016 samples, 0.21%)</title><rect x="68.4458%" y="485" width="0.2056%" height="15" fill="rgb(234,204,37)" fg:x="351843958" fg:w="1057016"/><text x="68.6958%" y="495.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::next (1,057,016 samples, 0.21%)</title><rect x="68.4458%" y="469" width="0.2056%" height="15" fill="rgb(236,120,5)" fg:x="351843958" fg:w="1057016"/><text x="68.6958%" y="479.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,057,016 samples, 0.21%)</title><rect x="68.4458%" y="453" width="0.2056%" height="15" fill="rgb(248,97,27)" fg:x="351843958" fg:w="1057016"/><text x="68.6958%" y="463.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,057,016 samples, 0.21%)</title><rect x="68.4458%" y="437" width="0.2056%" height="15" fill="rgb(240,66,17)" fg:x="351843958" fg:w="1057016"/><text x="68.6958%" y="447.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (1,057,016 samples, 0.21%)</title><rect x="68.4458%" y="421" width="0.2056%" height="15" fill="rgb(210,79,3)" fg:x="351843958" fg:w="1057016"/><text x="68.6958%" y="431.50"></text></g><g><title>std::io::inlined_slow_read_byte (1,057,016 samples, 0.21%)</title><rect x="68.4458%" y="405" width="0.2056%" height="15" fill="rgb(214,176,27)" fg:x="351843958" fg:w="1057016"/><text x="68.6958%" y="415.50"></text></g><g><title>&lt;bytes::buf::reader::Reader&lt;B&gt; as std::io::Read&gt;::read (1,057,016 samples, 0.21%)</title><rect x="68.4458%" y="389" width="0.2056%" height="15" fill="rgb(235,185,3)" fg:x="351843958" fg:w="1057016"/><text x="68.6958%" y="399.50"></text></g><g><title>bytes::buf::buf_impl::Buf::copy_to_slice (1,057,016 samples, 0.21%)</title><rect x="68.4458%" y="373" width="0.2056%" height="15" fill="rgb(227,24,12)" fg:x="351843958" fg:w="1057016"/><text x="68.6958%" y="383.50"></text></g><g><title>bytes::buf::buf_impl::Buf::try_copy_to_slice (1,057,016 samples, 0.21%)</title><rect x="68.4458%" y="357" width="0.2056%" height="15" fill="rgb(252,169,48)" fg:x="351843958" fg:w="1057016"/><text x="68.6958%" y="367.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (1,057,016 samples, 0.21%)</title><rect x="68.4458%" y="341" width="0.2056%" height="15" fill="rgb(212,65,1)" fg:x="351843958" fg:w="1057016"/><text x="68.6958%" y="351.50"></text></g><g><title>&lt;http_body_util::util::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::remaining (1,057,016 samples, 0.21%)</title><rect x="68.4458%" y="325" width="0.2056%" height="15" fill="rgb(242,39,24)" fg:x="351843958" fg:w="1057016"/><text x="68.6958%" y="335.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::iter (1,057,016 samples, 0.21%)</title><rect x="68.4458%" y="309" width="0.2056%" height="15" fill="rgb(249,32,23)" fg:x="351843958" fg:w="1057016"/><text x="68.6958%" y="319.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::as_slices (1,057,016 samples, 0.21%)</title><rect x="68.4458%" y="293" width="0.2056%" height="15" fill="rgb(251,195,23)" fg:x="351843958" fg:w="1057016"/><text x="68.6958%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (18,826,314 samples, 3.66%)</title><rect x="65.1974%" y="597" width="3.6624%" height="15" fill="rgb(236,174,8)" fg:x="335145763" fg:w="18826314"/><text x="65.4474%" y="607.50">&lt;ser..</text></g><g><title>serde::de::MapAccess::next_entry (16,640,125 samples, 3.24%)</title><rect x="65.6227%" y="581" width="3.2371%" height="15" fill="rgb(220,197,8)" fg:x="337331952" fg:w="16640125"/><text x="65.8727%" y="591.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (16,640,125 samples, 3.24%)</title><rect x="65.6227%" y="565" width="3.2371%" height="15" fill="rgb(240,108,37)" fg:x="337331952" fg:w="16640125"/><text x="65.8727%" y="575.50">ser..</text></g><g><title>serde::de::Deserializer::__deserialize_content (12,221,379 samples, 2.38%)</title><rect x="66.4823%" y="549" width="2.3775%" height="15" fill="rgb(232,176,24)" fg:x="341750698" fg:w="12221379"/><text x="66.7323%" y="559.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,221,379 samples, 2.38%)</title><rect x="66.4823%" y="533" width="2.3775%" height="15" fill="rgb(243,35,29)" fg:x="341750698" fg:w="12221379"/><text x="66.7323%" y="543.50">&lt;&amp;..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_any_number (1,071,103 samples, 0.21%)</title><rect x="68.6514%" y="517" width="0.2084%" height="15" fill="rgb(210,37,18)" fg:x="352900974" fg:w="1071103"/><text x="68.9014%" y="527.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1,071,103 samples, 0.21%)</title><rect x="68.6514%" y="501" width="0.2084%" height="15" fill="rgb(224,184,40)" fg:x="352900974" fg:w="1071103"/><text x="68.9014%" y="511.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (575,091 samples, 0.11%)</title><rect x="68.7479%" y="485" width="0.1119%" height="15" fill="rgb(236,39,29)" fg:x="353396986" fg:w="575091"/><text x="68.9979%" y="495.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::discard (575,091 samples, 0.11%)</title><rect x="68.7479%" y="469" width="0.1119%" height="15" fill="rgb(232,48,39)" fg:x="353396986" fg:w="575091"/><text x="68.9979%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (575,091 samples, 0.11%)</title><rect x="68.7479%" y="453" width="0.1119%" height="15" fill="rgb(236,34,42)" fg:x="353396986" fg:w="575091"/><text x="68.9979%" y="463.50"></text></g><g><title>core::mem::replace (575,091 samples, 0.11%)</title><rect x="68.7479%" y="437" width="0.1119%" height="15" fill="rgb(243,106,37)" fg:x="353396986" fg:w="575091"/><text x="68.9979%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (21,901,794 samples, 4.26%)</title><rect x="65.0743%" y="645" width="4.2607%" height="15" fill="rgb(218,96,6)" fg:x="334512829" fg:w="21901794"/><text x="65.3243%" y="655.50">&lt;serd..</text></g><g><title>serde::de::Deserializer::__deserialize_content (21,901,794 samples, 4.26%)</title><rect x="65.0743%" y="629" width="4.2607%" height="15" fill="rgb(235,130,12)" fg:x="334512829" fg:w="21901794"/><text x="65.3243%" y="639.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (21,901,794 samples, 4.26%)</title><rect x="65.0743%" y="613" width="4.2607%" height="15" fill="rgb(231,95,0)" fg:x="334512829" fg:w="21901794"/><text x="65.3243%" y="623.50">&lt;&amp;mut..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (2,442,546 samples, 0.48%)</title><rect x="68.8598%" y="597" width="0.4752%" height="15" fill="rgb(228,12,23)" fg:x="353972077" fg:w="2442546"/><text x="69.1098%" y="607.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (2,442,546 samples, 0.48%)</title><rect x="68.8598%" y="581" width="0.4752%" height="15" fill="rgb(216,12,1)" fg:x="353972077" fg:w="2442546"/><text x="69.1098%" y="591.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (2,442,546 samples, 0.48%)</title><rect x="68.8598%" y="565" width="0.4752%" height="15" fill="rgb(219,59,3)" fg:x="353972077" fg:w="2442546"/><text x="69.1098%" y="575.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,862,891 samples, 0.36%)</title><rect x="68.9726%" y="549" width="0.3624%" height="15" fill="rgb(215,208,46)" fg:x="354551732" fg:w="1862891"/><text x="69.2226%" y="559.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,862,891 samples, 0.36%)</title><rect x="68.9726%" y="533" width="0.3624%" height="15" fill="rgb(254,224,29)" fg:x="354551732" fg:w="1862891"/><text x="69.2226%" y="543.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (1,862,891 samples, 0.36%)</title><rect x="68.9726%" y="517" width="0.3624%" height="15" fill="rgb(232,14,29)" fg:x="354551732" fg:w="1862891"/><text x="69.2226%" y="527.50"></text></g><g><title>std::io::inlined_slow_read_byte (1,862,891 samples, 0.36%)</title><rect x="68.9726%" y="501" width="0.3624%" height="15" fill="rgb(208,45,52)" fg:x="354551732" fg:w="1862891"/><text x="69.2226%" y="511.50"></text></g><g><title>&lt;bytes::buf::reader::Reader&lt;B&gt; as std::io::Read&gt;::read (1,862,891 samples, 0.36%)</title><rect x="68.9726%" y="485" width="0.3624%" height="15" fill="rgb(234,191,28)" fg:x="354551732" fg:w="1862891"/><text x="69.2226%" y="495.50"></text></g><g><title>bytes::buf::buf_impl::Buf::copy_to_slice (1,862,891 samples, 0.36%)</title><rect x="68.9726%" y="469" width="0.3624%" height="15" fill="rgb(244,67,43)" fg:x="354551732" fg:w="1862891"/><text x="69.2226%" y="479.50"></text></g><g><title>bytes::buf::buf_impl::Buf::try_copy_to_slice (1,862,891 samples, 0.36%)</title><rect x="68.9726%" y="453" width="0.3624%" height="15" fill="rgb(236,189,24)" fg:x="354551732" fg:w="1862891"/><text x="69.2226%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1,862,891 samples, 0.36%)</title><rect x="68.9726%" y="437" width="0.3624%" height="15" fill="rgb(239,214,33)" fg:x="354551732" fg:w="1862891"/><text x="69.2226%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,862,891 samples, 0.36%)</title><rect x="68.9726%" y="421" width="0.3624%" height="15" fill="rgb(226,176,41)" fg:x="354551732" fg:w="1862891"/><text x="69.2226%" y="431.50"></text></g><g><title>__GI___memcpy_simd (1,862,891 samples, 0.36%)</title><rect x="68.9726%" y="405" width="0.3624%" height="15" fill="rgb(248,47,8)" fg:x="354551732" fg:w="1862891"/><text x="69.2226%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (805,848 samples, 0.16%)</title><rect x="69.3350%" y="645" width="0.1568%" height="15" fill="rgb(218,81,44)" fg:x="356414623" fg:w="805848"/><text x="69.5850%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt;&gt; (805,848 samples, 0.16%)</title><rect x="69.3350%" y="629" width="0.1568%" height="15" fill="rgb(213,98,6)" fg:x="356414623" fg:w="805848"/><text x="69.5850%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (805,848 samples, 0.16%)</title><rect x="69.3350%" y="613" width="0.1568%" height="15" fill="rgb(222,85,22)" fg:x="356414623" fg:w="805848"/><text x="69.5850%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(serde::__private::de::content::Content,serde::__private::de::content::Content)]&gt; (805,848 samples, 0.16%)</title><rect x="69.3350%" y="597" width="0.1568%" height="15" fill="rgb(239,46,39)" fg:x="356414623" fg:w="805848"/><text x="69.5850%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt; (805,848 samples, 0.16%)</title><rect x="69.3350%" y="581" width="0.1568%" height="15" fill="rgb(237,12,29)" fg:x="356414623" fg:w="805848"/><text x="69.5850%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (805,848 samples, 0.16%)</title><rect x="69.3350%" y="565" width="0.1568%" height="15" fill="rgb(214,77,8)" fg:x="356414623" fg:w="805848"/><text x="69.5850%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt;&gt; (462,212 samples, 0.09%)</title><rect x="69.4018%" y="549" width="0.0899%" height="15" fill="rgb(217,168,37)" fg:x="356758259" fg:w="462212"/><text x="69.6518%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (462,212 samples, 0.09%)</title><rect x="69.4018%" y="533" width="0.0899%" height="15" fill="rgb(221,217,23)" fg:x="356758259" fg:w="462212"/><text x="69.6518%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(serde::__private::de::content::Content,serde::__private::de::content::Content)]&gt; (462,212 samples, 0.09%)</title><rect x="69.4018%" y="517" width="0.0899%" height="15" fill="rgb(243,229,36)" fg:x="356758259" fg:w="462212"/><text x="69.6518%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt; (462,212 samples, 0.09%)</title><rect x="69.4018%" y="501" width="0.0899%" height="15" fill="rgb(251,163,40)" fg:x="356758259" fg:w="462212"/><text x="69.6518%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (462,212 samples, 0.09%)</title><rect x="69.4018%" y="485" width="0.0899%" height="15" fill="rgb(237,222,12)" fg:x="356758259" fg:w="462212"/><text x="69.6518%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt;&gt; (462,212 samples, 0.09%)</title><rect x="69.4018%" y="469" width="0.0899%" height="15" fill="rgb(248,132,6)" fg:x="356758259" fg:w="462212"/><text x="69.6518%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (462,212 samples, 0.09%)</title><rect x="69.4018%" y="453" width="0.0899%" height="15" fill="rgb(227,167,50)" fg:x="356758259" fg:w="462212"/><text x="69.6518%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(serde::__private::de::content::Content,serde::__private::de::content::Content)]&gt; (462,212 samples, 0.09%)</title><rect x="69.4018%" y="437" width="0.0899%" height="15" fill="rgb(242,84,37)" fg:x="356758259" fg:w="462212"/><text x="69.6518%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt; (462,212 samples, 0.09%)</title><rect x="69.4018%" y="421" width="0.0899%" height="15" fill="rgb(212,4,50)" fg:x="356758259" fg:w="462212"/><text x="69.6518%" y="431.50"></text></g><g><title>__free (462,212 samples, 0.09%)</title><rect x="69.4018%" y="405" width="0.0899%" height="15" fill="rgb(230,228,32)" fg:x="356758259" fg:w="462212"/><text x="69.6518%" y="415.50"></text></g><g><title>_int_free (462,212 samples, 0.09%)</title><rect x="69.4018%" y="389" width="0.0899%" height="15" fill="rgb(248,217,23)" fg:x="356758259" fg:w="462212"/><text x="69.6518%" y="399.50"></text></g><g><title>&lt;rmcp::model::JsonRpcVersion2_0 as serde::de::Deserialize&gt;::deserialize (1,355,519 samples, 0.26%)</title><rect x="69.7945%" y="517" width="0.2637%" height="15" fill="rgb(238,197,32)" fg:x="358777023" fg:w="1355519"/><text x="70.0445%" y="527.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,355,519 samples, 0.26%)</title><rect x="69.7945%" y="501" width="0.2637%" height="15" fill="rgb(236,106,1)" fg:x="358777023" fg:w="1355519"/><text x="70.0445%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1,355,519 samples, 0.26%)</title><rect x="69.7945%" y="485" width="0.2637%" height="15" fill="rgb(219,228,13)" fg:x="358777023" fg:w="1355519"/><text x="70.0445%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1,355,519 samples, 0.26%)</title><rect x="69.7945%" y="469" width="0.2637%" height="15" fill="rgb(238,30,35)" fg:x="358777023" fg:w="1355519"/><text x="70.0445%" y="479.50"></text></g><g><title>__GI___libc_malloc (1,355,519 samples, 0.26%)</title><rect x="69.7945%" y="453" width="0.2637%" height="15" fill="rgb(236,70,23)" fg:x="358777023" fg:w="1355519"/><text x="70.0445%" y="463.50"></text></g><g><title>_int_malloc (1,355,519 samples, 0.26%)</title><rect x="69.7945%" y="437" width="0.2637%" height="15" fill="rgb(249,104,48)" fg:x="358777023" fg:w="1355519"/><text x="70.0445%" y="447.50"></text></g><g><title>unlink_chunk.constprop.0 (1,355,519 samples, 0.26%)</title><rect x="69.7945%" y="421" width="0.2637%" height="15" fill="rgb(254,117,50)" fg:x="358777023" fg:w="1355519"/><text x="70.0445%" y="431.50"></text></g><g><title>&lt;rmcp::model::NumberOrString as serde::de::Deserialize&gt;::deserialize (851,377 samples, 0.17%)</title><rect x="70.0582%" y="517" width="0.1656%" height="15" fill="rgb(223,152,4)" fg:x="360132542" fg:w="851377"/><text x="70.3082%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (851,377 samples, 0.17%)</title><rect x="70.0582%" y="501" width="0.1656%" height="15" fill="rgb(245,6,2)" fg:x="360132542" fg:w="851377"/><text x="70.3082%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (851,377 samples, 0.17%)</title><rect x="70.0582%" y="485" width="0.1656%" height="15" fill="rgb(249,150,24)" fg:x="360132542" fg:w="851377"/><text x="70.3082%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (335,773 samples, 0.07%)</title><rect x="70.4609%" y="421" width="0.0653%" height="15" fill="rgb(228,185,42)" fg:x="362202657" fg:w="335773"/><text x="70.7109%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (335,773 samples, 0.07%)</title><rect x="70.4609%" y="405" width="0.0653%" height="15" fill="rgb(226,39,33)" fg:x="362202657" fg:w="335773"/><text x="70.7109%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (335,773 samples, 0.07%)</title><rect x="70.4609%" y="389" width="0.0653%" height="15" fill="rgb(221,166,19)" fg:x="362202657" fg:w="335773"/><text x="70.7109%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (335,773 samples, 0.07%)</title><rect x="70.4609%" y="373" width="0.0653%" height="15" fill="rgb(209,109,2)" fg:x="362202657" fg:w="335773"/><text x="70.7109%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (335,773 samples, 0.07%)</title><rect x="70.4609%" y="357" width="0.0653%" height="15" fill="rgb(252,216,26)" fg:x="362202657" fg:w="335773"/><text x="70.7109%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (335,773 samples, 0.07%)</title><rect x="70.4609%" y="341" width="0.0653%" height="15" fill="rgb(227,173,36)" fg:x="362202657" fg:w="335773"/><text x="70.7109%" y="351.50"></text></g><g><title>alloc::alloc::alloc (335,773 samples, 0.07%)</title><rect x="70.4609%" y="325" width="0.0653%" height="15" fill="rgb(209,90,7)" fg:x="362202657" fg:w="335773"/><text x="70.7109%" y="335.50"></text></g><g><title>__GI___libc_malloc (335,773 samples, 0.07%)</title><rect x="70.4609%" y="309" width="0.0653%" height="15" fill="rgb(250,194,11)" fg:x="362202657" fg:w="335773"/><text x="70.7109%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,386,132 samples, 0.66%)</title><rect x="70.5263%" y="389" width="0.6587%" height="15" fill="rgb(220,72,50)" fg:x="362538430" fg:w="3386132"/><text x="70.7763%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,386,132 samples, 0.66%)</title><rect x="70.5263%" y="373" width="0.6587%" height="15" fill="rgb(222,106,48)" fg:x="362538430" fg:w="3386132"/><text x="70.7763%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,386,132 samples, 0.66%)</title><rect x="70.5263%" y="357" width="0.6587%" height="15" fill="rgb(216,220,45)" fg:x="362538430" fg:w="3386132"/><text x="70.7763%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (3,386,132 samples, 0.66%)</title><rect x="70.5263%" y="341" width="0.6587%" height="15" fill="rgb(234,112,18)" fg:x="362538430" fg:w="3386132"/><text x="70.7763%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,386,132 samples, 0.66%)</title><rect x="70.5263%" y="325" width="0.6587%" height="15" fill="rgb(206,179,9)" fg:x="362538430" fg:w="3386132"/><text x="70.7763%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,386,132 samples, 0.66%)</title><rect x="70.5263%" y="309" width="0.6587%" height="15" fill="rgb(215,115,40)" fg:x="362538430" fg:w="3386132"/><text x="70.7763%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,386,132 samples, 0.66%)</title><rect x="70.5263%" y="293" width="0.6587%" height="15" fill="rgb(222,69,34)" fg:x="362538430" fg:w="3386132"/><text x="70.7763%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,386,132 samples, 0.66%)</title><rect x="70.5263%" y="277" width="0.6587%" height="15" fill="rgb(209,161,10)" fg:x="362538430" fg:w="3386132"/><text x="70.7763%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,386,132 samples, 0.66%)</title><rect x="70.5263%" y="261" width="0.6587%" height="15" fill="rgb(217,6,38)" fg:x="362538430" fg:w="3386132"/><text x="70.7763%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,386,132 samples, 0.66%)</title><rect x="70.5263%" y="245" width="0.6587%" height="15" fill="rgb(229,229,48)" fg:x="362538430" fg:w="3386132"/><text x="70.7763%" y="255.50"></text></g><g><title>alloc::alloc::alloc (3,386,132 samples, 0.66%)</title><rect x="70.5263%" y="229" width="0.6587%" height="15" fill="rgb(225,21,28)" fg:x="362538430" fg:w="3386132"/><text x="70.7763%" y="239.50"></text></g><g><title>__GI___libc_malloc (3,386,132 samples, 0.66%)</title><rect x="70.5263%" y="213" width="0.6587%" height="15" fill="rgb(206,33,13)" fg:x="362538430" fg:w="3386132"/><text x="70.7763%" y="223.50"></text></g><g><title>_int_malloc (3,386,132 samples, 0.66%)</title><rect x="70.5263%" y="197" width="0.6587%" height="15" fill="rgb(242,178,17)" fg:x="362538430" fg:w="3386132"/><text x="70.7763%" y="207.50"></text></g><g><title>&lt;&amp;mut A as serde::de::MapAccess&gt;::next_value (8,158,311 samples, 1.59%)</title><rect x="69.6944%" y="581" width="1.5871%" height="15" fill="rgb(220,162,5)" fg:x="358262129" fg:w="8158311"/><text x="69.9444%" y="591.50"></text></g><g><title>serde::de::MapAccess::next_value (8,158,311 samples, 1.59%)</title><rect x="69.6944%" y="565" width="1.5871%" height="15" fill="rgb(210,33,43)" fg:x="358262129" fg:w="8158311"/><text x="69.9444%" y="575.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_value_seed (8,158,311 samples, 1.59%)</title><rect x="69.6944%" y="549" width="1.5871%" height="15" fill="rgb(216,116,54)" fg:x="358262129" fg:w="8158311"/><text x="69.9444%" y="559.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8,158,311 samples, 1.59%)</title><rect x="69.6944%" y="533" width="1.5871%" height="15" fill="rgb(249,92,24)" fg:x="358262129" fg:w="8158311"/><text x="69.9444%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (5,436,521 samples, 1.06%)</title><rect x="70.2239%" y="517" width="1.0576%" height="15" fill="rgb(231,189,14)" fg:x="360983919" fg:w="5436521"/><text x="70.4739%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::__deserialize_content (5,436,521 samples, 1.06%)</title><rect x="70.2239%" y="501" width="1.0576%" height="15" fill="rgb(230,8,41)" fg:x="360983919" fg:w="5436521"/><text x="70.4739%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::Content as core::clone::Clone&gt;::clone (5,436,521 samples, 1.06%)</title><rect x="70.2239%" y="485" width="1.0576%" height="15" fill="rgb(249,7,27)" fg:x="360983919" fg:w="5436521"/><text x="70.4739%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,042,869 samples, 0.98%)</title><rect x="70.3004%" y="469" width="0.9810%" height="15" fill="rgb(232,86,5)" fg:x="361377571" fg:w="5042869"/><text x="70.5504%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,042,869 samples, 0.98%)</title><rect x="70.3004%" y="453" width="0.9810%" height="15" fill="rgb(224,175,18)" fg:x="361377571" fg:w="5042869"/><text x="70.5504%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (5,042,869 samples, 0.98%)</title><rect x="70.3004%" y="437" width="0.9810%" height="15" fill="rgb(220,129,12)" fg:x="361377571" fg:w="5042869"/><text x="70.5504%" y="447.50"></text></g><g><title>core::clone::Clone::clone (3,882,010 samples, 0.76%)</title><rect x="70.5263%" y="421" width="0.7552%" height="15" fill="rgb(210,19,36)" fg:x="362538430" fg:w="3882010"/><text x="70.7763%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::Content as core::clone::Clone&gt;::clone (3,882,010 samples, 0.76%)</title><rect x="70.5263%" y="405" width="0.7552%" height="15" fill="rgb(219,96,14)" fg:x="362538430" fg:w="3882010"/><text x="70.7763%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (495,878 samples, 0.10%)</title><rect x="71.1850%" y="389" width="0.0965%" height="15" fill="rgb(249,106,1)" fg:x="365924562" fg:w="495878"/><text x="71.4350%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (495,878 samples, 0.10%)</title><rect x="71.1850%" y="373" width="0.0965%" height="15" fill="rgb(249,155,20)" fg:x="365924562" fg:w="495878"/><text x="71.4350%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (495,878 samples, 0.10%)</title><rect x="71.1850%" y="357" width="0.0965%" height="15" fill="rgb(244,168,9)" fg:x="365924562" fg:w="495878"/><text x="71.4350%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (495,878 samples, 0.10%)</title><rect x="71.1850%" y="341" width="0.0965%" height="15" fill="rgb(216,23,50)" fg:x="365924562" fg:w="495878"/><text x="71.4350%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (495,878 samples, 0.10%)</title><rect x="71.1850%" y="325" width="0.0965%" height="15" fill="rgb(224,219,20)" fg:x="365924562" fg:w="495878"/><text x="71.4350%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (495,878 samples, 0.10%)</title><rect x="71.1850%" y="309" width="0.0965%" height="15" fill="rgb(222,156,15)" fg:x="365924562" fg:w="495878"/><text x="71.4350%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (495,878 samples, 0.10%)</title><rect x="71.1850%" y="293" width="0.0965%" height="15" fill="rgb(231,97,17)" fg:x="365924562" fg:w="495878"/><text x="71.4350%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,107,659 samples, 0.22%)</title><rect x="71.2814%" y="581" width="0.2155%" height="15" fill="rgb(218,70,48)" fg:x="366420440" fg:w="1107659"/><text x="71.5314%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,107,659 samples, 0.22%)</title><rect x="71.2814%" y="565" width="0.2155%" height="15" fill="rgb(212,196,52)" fg:x="366420440" fg:w="1107659"/><text x="71.5314%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,107,659 samples, 0.22%)</title><rect x="71.2814%" y="549" width="0.2155%" height="15" fill="rgb(243,203,18)" fg:x="366420440" fg:w="1107659"/><text x="71.5314%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,107,659 samples, 0.22%)</title><rect x="71.2814%" y="533" width="0.2155%" height="15" fill="rgb(252,125,41)" fg:x="366420440" fg:w="1107659"/><text x="71.5314%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,107,659 samples, 0.22%)</title><rect x="71.2814%" y="517" width="0.2155%" height="15" fill="rgb(223,180,33)" fg:x="366420440" fg:w="1107659"/><text x="71.5314%" y="527.50"></text></g><g><title>__GI___libc_malloc (1,107,659 samples, 0.22%)</title><rect x="71.2814%" y="501" width="0.2155%" height="15" fill="rgb(254,159,46)" fg:x="366420440" fg:w="1107659"/><text x="71.5314%" y="511.50"></text></g><g><title>__free (934,870 samples, 0.18%)</title><rect x="71.4969%" y="501" width="0.1819%" height="15" fill="rgb(254,38,10)" fg:x="367528099" fg:w="934870"/><text x="71.7469%" y="511.50"></text></g><g><title>_int_free (934,870 samples, 0.18%)</title><rect x="71.4969%" y="485" width="0.1819%" height="15" fill="rgb(208,217,32)" fg:x="367528099" fg:w="934870"/><text x="71.7469%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt;&gt;&gt; (1,339,317 samples, 0.26%)</title><rect x="71.4969%" y="581" width="0.2605%" height="15" fill="rgb(221,120,13)" fg:x="367528099" fg:w="1339317"/><text x="71.7469%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,339,317 samples, 0.26%)</title><rect x="71.4969%" y="565" width="0.2605%" height="15" fill="rgb(246,54,52)" fg:x="367528099" fg:w="1339317"/><text x="71.7469%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt;]&gt; (1,339,317 samples, 0.26%)</title><rect x="71.4969%" y="549" width="0.2605%" height="15" fill="rgb(242,34,25)" fg:x="367528099" fg:w="1339317"/><text x="71.7469%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt;&gt; (1,339,317 samples, 0.26%)</title><rect x="71.4969%" y="533" width="0.2605%" height="15" fill="rgb(247,209,9)" fg:x="367528099" fg:w="1339317"/><text x="71.7469%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt; (1,339,317 samples, 0.26%)</title><rect x="71.4969%" y="517" width="0.2605%" height="15" fill="rgb(228,71,26)" fg:x="367528099" fg:w="1339317"/><text x="71.7469%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (404,447 samples, 0.08%)</title><rect x="71.6788%" y="501" width="0.0787%" height="15" fill="rgb(222,145,49)" fg:x="368462969" fg:w="404447"/><text x="71.9288%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt;&gt; (404,447 samples, 0.08%)</title><rect x="71.6788%" y="485" width="0.0787%" height="15" fill="rgb(218,121,17)" fg:x="368462969" fg:w="404447"/><text x="71.9288%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (404,447 samples, 0.08%)</title><rect x="71.6788%" y="469" width="0.0787%" height="15" fill="rgb(244,50,7)" fg:x="368462969" fg:w="404447"/><text x="71.9288%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(serde::__private::de::content::Content,serde::__private::de::content::Content)]&gt; (404,447 samples, 0.08%)</title><rect x="71.6788%" y="453" width="0.0787%" height="15" fill="rgb(246,229,37)" fg:x="368462969" fg:w="404447"/><text x="71.9288%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt; (404,447 samples, 0.08%)</title><rect x="71.6788%" y="437" width="0.0787%" height="15" fill="rgb(225,18,5)" fg:x="368462969" fg:w="404447"/><text x="71.9288%" y="447.50"></text></g><g><title>__free (404,447 samples, 0.08%)</title><rect x="71.6788%" y="421" width="0.0787%" height="15" fill="rgb(213,204,8)" fg:x="368462969" fg:w="404447"/><text x="71.9288%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (485,986 samples, 0.09%)</title><rect x="71.9779%" y="565" width="0.0945%" height="15" fill="rgb(238,103,6)" fg:x="370000619" fg:w="485986"/><text x="72.2279%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="565" width="0.2891%" height="15" fill="rgb(222,25,35)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="575.50"></text></g><g><title>serde::de::Deserializer::__deserialize_content (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="549" width="0.2891%" height="15" fill="rgb(213,203,35)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="559.50"></text></g><g><title>&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="533" width="0.2891%" height="15" fill="rgb(221,79,53)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="543.50"></text></g><g><title>&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="517" width="0.2891%" height="15" fill="rgb(243,200,35)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="501" width="0.2891%" height="15" fill="rgb(248,60,25)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="511.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="485" width="0.2891%" height="15" fill="rgb(227,53,46)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="495.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="469" width="0.2891%" height="15" fill="rgb(216,120,32)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="479.50"></text></g><g><title>&lt;serde::__private::de::FlatMapAccess&lt;E&gt; as serde::de::MapAccess&gt;::next_value_seed (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="453" width="0.2891%" height="15" fill="rgb(220,134,1)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="463.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="437" width="0.2891%" height="15" fill="rgb(237,168,5)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="421" width="0.2891%" height="15" fill="rgb(231,100,33)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::__deserialize_content (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="405" width="0.2891%" height="15" fill="rgb(236,177,47)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::Content as core::clone::Clone&gt;::clone (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="389" width="0.2891%" height="15" fill="rgb(235,7,49)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="373" width="0.2891%" height="15" fill="rgb(232,119,22)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="357" width="0.2891%" height="15" fill="rgb(254,73,53)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="341" width="0.2891%" height="15" fill="rgb(251,35,20)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="351.50"></text></g><g><title>core::clone::Clone::clone (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="325" width="0.2891%" height="15" fill="rgb(241,119,20)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::Content as core::clone::Clone&gt;::clone (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="309" width="0.2891%" height="15" fill="rgb(207,102,14)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="293" width="0.2891%" height="15" fill="rgb(248,201,50)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="277" width="0.2891%" height="15" fill="rgb(222,185,44)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="261" width="0.2891%" height="15" fill="rgb(218,107,18)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="245" width="0.2891%" height="15" fill="rgb(237,177,39)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="229" width="0.2891%" height="15" fill="rgb(246,69,6)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="213" width="0.2891%" height="15" fill="rgb(234,208,37)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="197" width="0.2891%" height="15" fill="rgb(225,4,6)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="181" width="0.2891%" height="15" fill="rgb(233,45,0)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="165" width="0.2891%" height="15" fill="rgb(226,136,5)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="149" width="0.2891%" height="15" fill="rgb(211,91,47)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="133" width="0.2891%" height="15" fill="rgb(242,88,51)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="143.50"></text></g><g><title>__GI___libc_malloc (1,485,861 samples, 0.29%)</title><rect x="72.0725%" y="117" width="0.2891%" height="15" fill="rgb(230,91,28)" fg:x="370486605" fg:w="1485861"/><text x="72.3225%" y="127.50"></text></g><g><title>_int_malloc (944,197 samples, 0.18%)</title><rect x="72.1778%" y="101" width="0.1837%" height="15" fill="rgb(254,186,29)" fg:x="371028269" fg:w="944197"/><text x="72.4278%" y="111.50"></text></g><g><title>unlink_chunk.constprop.0 (539,079 samples, 0.10%)</title><rect x="72.2566%" y="85" width="0.1049%" height="15" fill="rgb(238,6,4)" fg:x="371433387" fg:w="539079"/><text x="72.5066%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;rmcp::model::ClientRequest,serde_json::error::Error&gt;&gt; (517,952 samples, 0.10%)</title><rect x="72.3615%" y="565" width="0.1008%" height="15" fill="rgb(221,151,16)" fg:x="371972466" fg:w="517952"/><text x="72.6115%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::error::Error&gt; (517,952 samples, 0.10%)</title><rect x="72.3615%" y="549" width="0.1008%" height="15" fill="rgb(251,143,52)" fg:x="371972466" fg:w="517952"/><text x="72.6115%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;serde_json::error::ErrorImpl&gt;&gt; (517,952 samples, 0.10%)</title><rect x="72.3615%" y="533" width="0.1008%" height="15" fill="rgb(206,90,15)" fg:x="371972466" fg:w="517952"/><text x="72.6115%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::error::ErrorImpl&gt; (517,952 samples, 0.10%)</title><rect x="72.3615%" y="517" width="0.1008%" height="15" fill="rgb(218,35,8)" fg:x="371972466" fg:w="517952"/><text x="72.6115%" y="527.50"></text></g><g><title>__free (517,952 samples, 0.10%)</title><rect x="72.3615%" y="501" width="0.1008%" height="15" fill="rgb(239,215,6)" fg:x="371972466" fg:w="517952"/><text x="72.6115%" y="511.50"></text></g><g><title>_int_free (517,952 samples, 0.10%)</title><rect x="72.3615%" y="485" width="0.1008%" height="15" fill="rgb(245,116,39)" fg:x="371972466" fg:w="517952"/><text x="72.6115%" y="495.50"></text></g><g><title>__free (662,779 samples, 0.13%)</title><rect x="72.4623%" y="485" width="0.1289%" height="15" fill="rgb(242,65,28)" fg:x="372490418" fg:w="662779"/><text x="72.7123%" y="495.50"></text></g><g><title>_int_free (662,779 samples, 0.13%)</title><rect x="72.4623%" y="469" width="0.1289%" height="15" fill="rgb(252,132,53)" fg:x="372490418" fg:w="662779"/><text x="72.7123%" y="479.50"></text></g><g><title>__free (1,384,493 samples, 0.27%)</title><rect x="72.8245%" y="405" width="0.2693%" height="15" fill="rgb(224,159,50)" fg:x="374352743" fg:w="1384493"/><text x="73.0745%" y="415.50"></text></g><g><title>_int_free (776,012 samples, 0.15%)</title><rect x="72.9429%" y="389" width="0.1510%" height="15" fill="rgb(224,93,4)" fg:x="374961224" fg:w="776012"/><text x="73.1929%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (5,190,253 samples, 1.01%)</title><rect x="72.4623%" y="565" width="1.0097%" height="15" fill="rgb(208,81,34)" fg:x="372490418" fg:w="5190253"/><text x="72.7123%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt;&gt; (5,190,253 samples, 1.01%)</title><rect x="72.4623%" y="549" width="1.0097%" height="15" fill="rgb(233,92,54)" fg:x="372490418" fg:w="5190253"/><text x="72.7123%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,190,253 samples, 1.01%)</title><rect x="72.4623%" y="533" width="1.0097%" height="15" fill="rgb(237,21,14)" fg:x="372490418" fg:w="5190253"/><text x="72.7123%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(serde::__private::de::content::Content,serde::__private::de::content::Content)]&gt; (5,190,253 samples, 1.01%)</title><rect x="72.4623%" y="517" width="1.0097%" height="15" fill="rgb(249,128,51)" fg:x="372490418" fg:w="5190253"/><text x="72.7123%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt; (5,190,253 samples, 1.01%)</title><rect x="72.4623%" y="501" width="1.0097%" height="15" fill="rgb(223,129,24)" fg:x="372490418" fg:w="5190253"/><text x="72.7123%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4,527,474 samples, 0.88%)</title><rect x="72.5912%" y="485" width="0.8808%" height="15" fill="rgb(231,168,25)" fg:x="373153197" fg:w="4527474"/><text x="72.8412%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt;&gt; (3,327,928 samples, 0.65%)</title><rect x="72.8245%" y="469" width="0.6474%" height="15" fill="rgb(224,39,20)" fg:x="374352743" fg:w="3327928"/><text x="73.0745%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,327,928 samples, 0.65%)</title><rect x="72.8245%" y="453" width="0.6474%" height="15" fill="rgb(225,152,53)" fg:x="374352743" fg:w="3327928"/><text x="73.0745%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(serde::__private::de::content::Content,serde::__private::de::content::Content)]&gt; (3,327,928 samples, 0.65%)</title><rect x="72.8245%" y="437" width="0.6474%" height="15" fill="rgb(252,17,24)" fg:x="374352743" fg:w="3327928"/><text x="73.0745%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt; (3,327,928 samples, 0.65%)</title><rect x="72.8245%" y="421" width="0.6474%" height="15" fill="rgb(250,114,30)" fg:x="374352743" fg:w="3327928"/><text x="73.0745%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1,943,435 samples, 0.38%)</title><rect x="73.0939%" y="405" width="0.3781%" height="15" fill="rgb(229,5,4)" fg:x="375737236" fg:w="1943435"/><text x="73.3439%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt;&gt; (1,342,632 samples, 0.26%)</title><rect x="73.2108%" y="389" width="0.2612%" height="15" fill="rgb(225,176,49)" fg:x="376338039" fg:w="1342632"/><text x="73.4608%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,342,632 samples, 0.26%)</title><rect x="73.2108%" y="373" width="0.2612%" height="15" fill="rgb(224,221,49)" fg:x="376338039" fg:w="1342632"/><text x="73.4608%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(serde::__private::de::content::Content,serde::__private::de::content::Content)]&gt; (1,342,632 samples, 0.26%)</title><rect x="73.2108%" y="357" width="0.2612%" height="15" fill="rgb(253,169,27)" fg:x="376338039" fg:w="1342632"/><text x="73.4608%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt; (1,342,632 samples, 0.26%)</title><rect x="73.2108%" y="341" width="0.2612%" height="15" fill="rgb(211,206,16)" fg:x="376338039" fg:w="1342632"/><text x="73.4608%" y="351.50"></text></g><g><title>__free (711,546 samples, 0.14%)</title><rect x="73.3335%" y="325" width="0.1384%" height="15" fill="rgb(244,87,35)" fg:x="376969125" fg:w="711546"/><text x="73.5835%" y="335.50"></text></g><g><title>_int_free (711,546 samples, 0.14%)</title><rect x="73.3335%" y="309" width="0.1384%" height="15" fill="rgb(246,28,10)" fg:x="376969125" fg:w="711546"/><text x="73.5835%" y="319.50"></text></g><g><title>rmcp::model::extension::Extensions::insert (517,545 samples, 0.10%)</title><rect x="73.6170%" y="549" width="0.1007%" height="15" fill="rgb(229,12,44)" fg:x="378426236" fg:w="517545"/><text x="73.8670%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (517,545 samples, 0.10%)</title><rect x="73.6170%" y="533" width="0.1007%" height="15" fill="rgb(210,145,37)" fg:x="378426236" fg:w="517545"/><text x="73.8670%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (517,545 samples, 0.10%)</title><rect x="73.6170%" y="517" width="0.1007%" height="15" fill="rgb(227,112,52)" fg:x="378426236" fg:w="517545"/><text x="73.8670%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (517,545 samples, 0.10%)</title><rect x="73.6170%" y="501" width="0.1007%" height="15" fill="rgb(238,155,34)" fg:x="378426236" fg:w="517545"/><text x="73.8670%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (517,545 samples, 0.10%)</title><rect x="73.6170%" y="485" width="0.1007%" height="15" fill="rgb(239,226,36)" fg:x="378426236" fg:w="517545"/><text x="73.8670%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (517,545 samples, 0.10%)</title><rect x="73.6170%" y="469" width="0.1007%" height="15" fill="rgb(230,16,23)" fg:x="378426236" fg:w="517545"/><text x="73.8670%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (517,545 samples, 0.10%)</title><rect x="73.6170%" y="453" width="0.1007%" height="15" fill="rgb(236,171,36)" fg:x="378426236" fg:w="517545"/><text x="73.8670%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (517,545 samples, 0.10%)</title><rect x="73.6170%" y="437" width="0.1007%" height="15" fill="rgb(221,22,14)" fg:x="378426236" fg:w="517545"/><text x="73.8670%" y="447.50"></text></g><g><title>&lt;&amp;mut A as serde::de::MapAccess&gt;::next_key (991,352 samples, 0.19%)</title><rect x="74.1967%" y="485" width="0.1929%" height="15" fill="rgb(242,43,11)" fg:x="381406437" fg:w="991352"/><text x="74.4467%" y="495.50"></text></g><g><title>serde::de::MapAccess::next_key (991,352 samples, 0.19%)</title><rect x="74.1967%" y="469" width="0.1929%" height="15" fill="rgb(232,69,23)" fg:x="381406437" fg:w="991352"/><text x="74.4467%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (991,352 samples, 0.19%)</title><rect x="74.1967%" y="453" width="0.1929%" height="15" fill="rgb(216,180,54)" fg:x="381406437" fg:w="991352"/><text x="74.4467%" y="463.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (367,015 samples, 0.07%)</title><rect x="74.3182%" y="437" width="0.0714%" height="15" fill="rgb(216,5,24)" fg:x="382030774" fg:w="367015"/><text x="74.5682%" y="447.50"></text></g><g><title>&lt;rmcp::model::serde_impl::_::&lt;impl serde::de::Deserialize for rmcp::model::serde_impl::Proxy&lt;M,P&gt;&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (367,015 samples, 0.07%)</title><rect x="74.3182%" y="421" width="0.0714%" height="15" fill="rgb(225,89,9)" fg:x="382030774" fg:w="367015"/><text x="74.5682%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (367,015 samples, 0.07%)</title><rect x="74.3182%" y="405" width="0.0714%" height="15" fill="rgb(243,75,33)" fg:x="382030774" fg:w="367015"/><text x="74.5682%" y="415.50"></text></g><g><title>&lt;rmcp::model::GetPromptRequestMethod as serde::de::Deserialize&gt;::deserialize (700,593 samples, 0.14%)</title><rect x="74.5939%" y="421" width="0.1363%" height="15" fill="rgb(247,141,45)" fg:x="383447822" fg:w="700593"/><text x="74.8439%" y="431.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (700,593 samples, 0.14%)</title><rect x="74.5939%" y="405" width="0.1363%" height="15" fill="rgb(232,177,36)" fg:x="383447822" fg:w="700593"/><text x="74.8439%" y="415.50"></text></g><g><title>serde_json::error::make_error (700,593 samples, 0.14%)</title><rect x="74.5939%" y="389" width="0.1363%" height="15" fill="rgb(219,125,36)" fg:x="383447822" fg:w="700593"/><text x="74.8439%" y="399.50"></text></g><g><title>serde_json::error::parse_line_col (700,593 samples, 0.14%)</title><rect x="74.5939%" y="373" width="0.1363%" height="15" fill="rgb(227,94,9)" fg:x="383447822" fg:w="700593"/><text x="74.8439%" y="383.50"></text></g><g><title>core::str::&lt;impl str&gt;::rfind (700,593 samples, 0.14%)</title><rect x="74.5939%" y="357" width="0.1363%" height="15" fill="rgb(240,34,52)" fg:x="383447822" fg:w="700593"/><text x="74.8439%" y="367.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (700,593 samples, 0.14%)</title><rect x="74.5939%" y="341" width="0.1363%" height="15" fill="rgb(216,45,12)" fg:x="383447822" fg:w="700593"/><text x="74.8439%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (700,593 samples, 0.14%)</title><rect x="74.5939%" y="325" width="0.1363%" height="15" fill="rgb(246,21,19)" fg:x="383447822" fg:w="700593"/><text x="74.8439%" y="335.50"></text></g><g><title>&lt;rmcp::model::SetLevelRequestMethod as serde::de::Deserialize&gt;::deserialize (370,417 samples, 0.07%)</title><rect x="74.7301%" y="421" width="0.0721%" height="15" fill="rgb(213,98,42)" fg:x="384148415" fg:w="370417"/><text x="74.9801%" y="431.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (370,417 samples, 0.07%)</title><rect x="74.7301%" y="405" width="0.0721%" height="15" fill="rgb(250,136,47)" fg:x="384148415" fg:w="370417"/><text x="74.9801%" y="415.50"></text></g><g><title>serde_json::error::make_error (370,417 samples, 0.07%)</title><rect x="74.7301%" y="389" width="0.0721%" height="15" fill="rgb(251,124,27)" fg:x="384148415" fg:w="370417"/><text x="74.9801%" y="399.50"></text></g><g><title>serde_json::error::parse_line_col (370,417 samples, 0.07%)</title><rect x="74.7301%" y="373" width="0.0721%" height="15" fill="rgb(229,180,14)" fg:x="384148415" fg:w="370417"/><text x="74.9801%" y="383.50"></text></g><g><title>core::str::&lt;impl str&gt;::rfind (370,417 samples, 0.07%)</title><rect x="74.7301%" y="357" width="0.0721%" height="15" fill="rgb(245,216,25)" fg:x="384148415" fg:w="370417"/><text x="74.9801%" y="367.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (370,417 samples, 0.07%)</title><rect x="74.7301%" y="341" width="0.0721%" height="15" fill="rgb(251,43,5)" fg:x="384148415" fg:w="370417"/><text x="74.9801%" y="351.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next_back (370,417 samples, 0.07%)</title><rect x="74.7301%" y="325" width="0.0721%" height="15" fill="rgb(250,128,24)" fg:x="384148415" fg:w="370417"/><text x="74.9801%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (370,417 samples, 0.07%)</title><rect x="74.7301%" y="309" width="0.0721%" height="15" fill="rgb(217,117,27)" fg:x="384148415" fg:w="370417"/><text x="74.9801%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (370,417 samples, 0.07%)</title><rect x="74.7301%" y="293" width="0.0721%" height="15" fill="rgb(245,147,4)" fg:x="384148415" fg:w="370417"/><text x="74.9801%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (370,417 samples, 0.07%)</title><rect x="74.7301%" y="277" width="0.0721%" height="15" fill="rgb(242,201,35)" fg:x="384148415" fg:w="370417"/><text x="74.9801%" y="287.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (407,802 samples, 0.08%)</title><rect x="74.8022%" y="405" width="0.0793%" height="15" fill="rgb(218,181,1)" fg:x="384518832" fg:w="407802"/><text x="75.0522%" y="415.50"></text></g><g><title>serde_json::error::make_error (407,802 samples, 0.08%)</title><rect x="74.8022%" y="389" width="0.0793%" height="15" fill="rgb(222,6,29)" fg:x="384518832" fg:w="407802"/><text x="75.0522%" y="399.50"></text></g><g><title>serde_json::error::parse_line_col (407,802 samples, 0.08%)</title><rect x="74.8022%" y="373" width="0.0793%" height="15" fill="rgb(208,186,3)" fg:x="384518832" fg:w="407802"/><text x="75.0522%" y="383.50"></text></g><g><title>core::str::&lt;impl str&gt;::rfind (407,802 samples, 0.08%)</title><rect x="74.8022%" y="357" width="0.0793%" height="15" fill="rgb(216,36,26)" fg:x="384518832" fg:w="407802"/><text x="75.0522%" y="367.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (407,802 samples, 0.08%)</title><rect x="74.8022%" y="341" width="0.0793%" height="15" fill="rgb(248,201,23)" fg:x="384518832" fg:w="407802"/><text x="75.0522%" y="351.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next_back (407,802 samples, 0.08%)</title><rect x="74.8022%" y="325" width="0.0793%" height="15" fill="rgb(251,170,31)" fg:x="384518832" fg:w="407802"/><text x="75.0522%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,862,891 samples, 0.36%)</title><rect x="74.8815%" y="277" width="0.3624%" height="15" fill="rgb(207,110,25)" fg:x="384926634" fg:w="1862891"/><text x="75.1315%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,862,891 samples, 0.36%)</title><rect x="74.8815%" y="261" width="0.3624%" height="15" fill="rgb(250,54,15)" fg:x="384926634" fg:w="1862891"/><text x="75.1315%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,862,891 samples, 0.36%)</title><rect x="74.8815%" y="245" width="0.3624%" height="15" fill="rgb(227,68,33)" fg:x="384926634" fg:w="1862891"/><text x="75.1315%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,862,891 samples, 0.36%)</title><rect x="74.8815%" y="229" width="0.3624%" height="15" fill="rgb(238,34,41)" fg:x="384926634" fg:w="1862891"/><text x="75.1315%" y="239.50"></text></g><g><title>&lt;rmcp::model::SubscribeRequestMethod as serde::de::Deserialize&gt;::deserialize (3,249,995 samples, 0.63%)</title><rect x="74.8022%" y="421" width="0.6322%" height="15" fill="rgb(220,11,15)" fg:x="384518832" fg:w="3249995"/><text x="75.0522%" y="431.50"></text></g><g><title>alloc::fmt::format (2,842,193 samples, 0.55%)</title><rect x="74.8815%" y="405" width="0.5529%" height="15" fill="rgb(246,111,35)" fg:x="384926634" fg:w="2842193"/><text x="75.1315%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (2,842,193 samples, 0.55%)</title><rect x="74.8815%" y="389" width="0.5529%" height="15" fill="rgb(209,88,53)" fg:x="384926634" fg:w="2842193"/><text x="75.1315%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2,842,193 samples, 0.55%)</title><rect x="74.8815%" y="373" width="0.5529%" height="15" fill="rgb(231,185,47)" fg:x="384926634" fg:w="2842193"/><text x="75.1315%" y="383.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2,842,193 samples, 0.55%)</title><rect x="74.8815%" y="357" width="0.5529%" height="15" fill="rgb(233,154,1)" fg:x="384926634" fg:w="2842193"/><text x="75.1315%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2,842,193 samples, 0.55%)</title><rect x="74.8815%" y="341" width="0.5529%" height="15" fill="rgb(225,15,46)" fg:x="384926634" fg:w="2842193"/><text x="75.1315%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,842,193 samples, 0.55%)</title><rect x="74.8815%" y="325" width="0.5529%" height="15" fill="rgb(211,135,41)" fg:x="384926634" fg:w="2842193"/><text x="75.1315%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,842,193 samples, 0.55%)</title><rect x="74.8815%" y="309" width="0.5529%" height="15" fill="rgb(208,54,0)" fg:x="384926634" fg:w="2842193"/><text x="75.1315%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (2,842,193 samples, 0.55%)</title><rect x="74.8815%" y="293" width="0.5529%" height="15" fill="rgb(244,136,14)" fg:x="384926634" fg:w="2842193"/><text x="75.1315%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (979,302 samples, 0.19%)</title><rect x="75.2439%" y="277" width="0.1905%" height="15" fill="rgb(241,56,14)" fg:x="386789525" fg:w="979302"/><text x="75.4939%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (979,302 samples, 0.19%)</title><rect x="75.2439%" y="261" width="0.1905%" height="15" fill="rgb(205,80,24)" fg:x="386789525" fg:w="979302"/><text x="75.4939%" y="271.50"></text></g><g><title>&lt;rmcp::model::UnsubscribeRequestMethod as serde::de::Deserialize&gt;::deserialize (660,612 samples, 0.13%)</title><rect x="75.4344%" y="421" width="0.1285%" height="15" fill="rgb(220,57,4)" fg:x="387768827" fg:w="660612"/><text x="75.6844%" y="431.50"></text></g><g><title>alloc::fmt::format (660,612 samples, 0.13%)</title><rect x="75.4344%" y="405" width="0.1285%" height="15" fill="rgb(226,193,50)" fg:x="387768827" fg:w="660612"/><text x="75.6844%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (660,612 samples, 0.13%)</title><rect x="75.4344%" y="389" width="0.1285%" height="15" fill="rgb(231,168,22)" fg:x="387768827" fg:w="660612"/><text x="75.6844%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (660,612 samples, 0.13%)</title><rect x="75.4344%" y="373" width="0.1285%" height="15" fill="rgb(254,215,14)" fg:x="387768827" fg:w="660612"/><text x="75.6844%" y="383.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (660,612 samples, 0.13%)</title><rect x="75.4344%" y="357" width="0.1285%" height="15" fill="rgb(211,115,16)" fg:x="387768827" fg:w="660612"/><text x="75.6844%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (660,612 samples, 0.13%)</title><rect x="75.4344%" y="341" width="0.1285%" height="15" fill="rgb(236,210,16)" fg:x="387768827" fg:w="660612"/><text x="75.6844%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (660,612 samples, 0.13%)</title><rect x="75.4344%" y="325" width="0.1285%" height="15" fill="rgb(221,94,12)" fg:x="387768827" fg:w="660612"/><text x="75.6844%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (660,612 samples, 0.13%)</title><rect x="75.4344%" y="309" width="0.1285%" height="15" fill="rgb(235,218,49)" fg:x="387768827" fg:w="660612"/><text x="75.6844%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (660,612 samples, 0.13%)</title><rect x="75.4344%" y="293" width="0.1285%" height="15" fill="rgb(217,114,14)" fg:x="387768827" fg:w="660612"/><text x="75.6844%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (660,612 samples, 0.13%)</title><rect x="75.4344%" y="277" width="0.1285%" height="15" fill="rgb(216,145,22)" fg:x="387768827" fg:w="660612"/><text x="75.6844%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (660,612 samples, 0.13%)</title><rect x="75.4344%" y="261" width="0.1285%" height="15" fill="rgb(217,112,39)" fg:x="387768827" fg:w="660612"/><text x="75.6844%" y="271.50"></text></g><g><title>el0t_64_irq_handler (430,490 samples, 0.08%)</title><rect x="75.5630%" y="421" width="0.0837%" height="15" fill="rgb(225,85,32)" fg:x="388429439" fg:w="430490"/><text x="75.8130%" y="431.50"></text></g><g><title>__el0_irq_handler_common (430,490 samples, 0.08%)</title><rect x="75.5630%" y="405" width="0.0837%" height="15" fill="rgb(245,209,47)" fg:x="388429439" fg:w="430490"/><text x="75.8130%" y="415.50"></text></g><g><title>el0_interrupt (430,490 samples, 0.08%)</title><rect x="75.5630%" y="389" width="0.0837%" height="15" fill="rgb(218,220,15)" fg:x="388429439" fg:w="430490"/><text x="75.8130%" y="399.50"></text></g><g><title>irq_exit_rcu (430,490 samples, 0.08%)</title><rect x="75.5630%" y="373" width="0.0837%" height="15" fill="rgb(222,202,31)" fg:x="388429439" fg:w="430490"/><text x="75.8130%" y="383.50"></text></g><g><title>__irq_exit_rcu (430,490 samples, 0.08%)</title><rect x="75.5630%" y="357" width="0.0837%" height="15" fill="rgb(243,203,4)" fg:x="388429439" fg:w="430490"/><text x="75.8130%" y="367.50"></text></g><g><title>do_softirq_own_stack (430,490 samples, 0.08%)</title><rect x="75.5630%" y="341" width="0.0837%" height="15" fill="rgb(237,92,17)" fg:x="388429439" fg:w="430490"/><text x="75.8130%" y="351.50"></text></g><g><title>call_on_irq_stack (430,490 samples, 0.08%)</title><rect x="75.5630%" y="325" width="0.0837%" height="15" fill="rgb(231,119,7)" fg:x="388429439" fg:w="430490"/><text x="75.8130%" y="335.50"></text></g><g><title>____do_softirq (430,490 samples, 0.08%)</title><rect x="75.5630%" y="309" width="0.0837%" height="15" fill="rgb(237,82,41)" fg:x="388429439" fg:w="430490"/><text x="75.8130%" y="319.50"></text></g><g><title>__softirqentry_text_start (430,490 samples, 0.08%)</title><rect x="75.5630%" y="293" width="0.0837%" height="15" fill="rgb(226,81,48)" fg:x="388429439" fg:w="430490"/><text x="75.8130%" y="303.50"></text></g><g><title>handle_softirqs (430,490 samples, 0.08%)</title><rect x="75.5630%" y="277" width="0.0837%" height="15" fill="rgb(234,70,51)" fg:x="388429439" fg:w="430490"/><text x="75.8130%" y="287.50"></text></g><g><title>&lt;&amp;mut A as serde::de::MapAccess&gt;::next_value (610,608 samples, 0.12%)</title><rect x="75.8323%" y="357" width="0.1188%" height="15" fill="rgb(251,86,4)" fg:x="389814170" fg:w="610608"/><text x="76.0823%" y="367.50"></text></g><g><title>serde::de::MapAccess::next_value (610,608 samples, 0.12%)</title><rect x="75.8323%" y="341" width="0.1188%" height="15" fill="rgb(244,144,28)" fg:x="389814170" fg:w="610608"/><text x="76.0823%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_value_seed (610,608 samples, 0.12%)</title><rect x="75.8323%" y="325" width="0.1188%" height="15" fill="rgb(232,161,39)" fg:x="389814170" fg:w="610608"/><text x="76.0823%" y="335.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (610,608 samples, 0.12%)</title><rect x="75.8323%" y="309" width="0.1188%" height="15" fill="rgb(247,34,51)" fg:x="389814170" fg:w="610608"/><text x="76.0823%" y="319.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (610,608 samples, 0.12%)</title><rect x="75.8323%" y="293" width="0.1188%" height="15" fill="rgb(225,132,2)" fg:x="389814170" fg:w="610608"/><text x="76.0823%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_option (610,608 samples, 0.12%)</title><rect x="75.8323%" y="277" width="0.1188%" height="15" fill="rgb(209,159,44)" fg:x="389814170" fg:w="610608"/><text x="76.0823%" y="287.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (610,608 samples, 0.12%)</title><rect x="75.8323%" y="261" width="0.1188%" height="15" fill="rgb(251,214,1)" fg:x="389814170" fg:w="610608"/><text x="76.0823%" y="271.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::borrow::Cow&lt;T&gt;&gt;::deserialize (610,608 samples, 0.12%)</title><rect x="75.8323%" y="245" width="0.1188%" height="15" fill="rgb(247,84,47)" fg:x="389814170" fg:w="610608"/><text x="76.0823%" y="255.50"></text></g><g><title>rmcp::model::meta::_::&lt;impl serde::de::Deserialize for rmcp::model::meta::Meta&gt;::deserialize (610,608 samples, 0.12%)</title><rect x="75.8323%" y="229" width="0.1188%" height="15" fill="rgb(240,111,43)" fg:x="389814170" fg:w="610608"/><text x="76.0823%" y="239.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as serde::de::Deserialize&gt;::deserialize (610,608 samples, 0.12%)</title><rect x="75.8323%" y="213" width="0.1188%" height="15" fill="rgb(215,214,35)" fg:x="389814170" fg:w="610608"/><text x="76.0823%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (610,608 samples, 0.12%)</title><rect x="75.8323%" y="197" width="0.1188%" height="15" fill="rgb(248,207,23)" fg:x="389814170" fg:w="610608"/><text x="76.0823%" y="207.50"></text></g><g><title>serde::__private::de::content::visit_content_map_ref (610,608 samples, 0.12%)</title><rect x="75.8323%" y="181" width="0.1188%" height="15" fill="rgb(214,186,4)" fg:x="389814170" fg:w="610608"/><text x="76.0823%" y="191.50"></text></g><g><title>&lt;&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as serde::de::Deserialize&gt;::deserialize::Visitor as serde::de::Visitor&gt;::visit_map (610,608 samples, 0.12%)</title><rect x="75.8323%" y="165" width="0.1188%" height="15" fill="rgb(220,133,22)" fg:x="389814170" fg:w="610608"/><text x="76.0823%" y="175.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (610,608 samples, 0.12%)</title><rect x="75.8323%" y="149" width="0.1188%" height="15" fill="rgb(239,134,19)" fg:x="389814170" fg:w="610608"/><text x="76.0823%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (610,608 samples, 0.12%)</title><rect x="75.8323%" y="133" width="0.1188%" height="15" fill="rgb(250,140,9)" fg:x="389814170" fg:w="610608"/><text x="76.0823%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (705,682 samples, 0.14%)</title><rect x="75.9511%" y="357" width="0.1373%" height="15" fill="rgb(225,59,14)" fg:x="390424778" fg:w="705682"/><text x="76.2011%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (705,682 samples, 0.14%)</title><rect x="75.9511%" y="341" width="0.1373%" height="15" fill="rgb(214,152,51)" fg:x="390424778" fg:w="705682"/><text x="76.2011%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (705,682 samples, 0.14%)</title><rect x="75.9511%" y="325" width="0.1373%" height="15" fill="rgb(251,227,43)" fg:x="390424778" fg:w="705682"/><text x="76.2011%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (705,682 samples, 0.14%)</title><rect x="75.9511%" y="309" width="0.1373%" height="15" fill="rgb(241,96,17)" fg:x="390424778" fg:w="705682"/><text x="76.2011%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (705,682 samples, 0.14%)</title><rect x="75.9511%" y="293" width="0.1373%" height="15" fill="rgb(234,198,43)" fg:x="390424778" fg:w="705682"/><text x="76.2011%" y="303.50"></text></g><g><title>__GI___libc_malloc (705,682 samples, 0.14%)</title><rect x="75.9511%" y="277" width="0.1373%" height="15" fill="rgb(220,108,29)" fg:x="390424778" fg:w="705682"/><text x="76.2011%" y="287.50"></text></g><g><title>serde::de::MapAccess::next_key (903,074 samples, 0.18%)</title><rect x="76.2001%" y="309" width="0.1757%" height="15" fill="rgb(226,163,33)" fg:x="391704936" fg:w="903074"/><text x="76.4501%" y="319.50"></text></g><g><title>&lt;serde::__private::de::FlatStructAccess&lt;E&gt; as serde::de::MapAccess&gt;::next_key_seed (903,074 samples, 0.18%)</title><rect x="76.2001%" y="293" width="0.1757%" height="15" fill="rgb(205,194,45)" fg:x="391704936" fg:w="903074"/><text x="76.4501%" y="303.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (903,074 samples, 0.18%)</title><rect x="76.2001%" y="277" width="0.1757%" height="15" fill="rgb(206,143,44)" fg:x="391704936" fg:w="903074"/><text x="76.4501%" y="287.50"></text></g><g><title>&lt;rmcp::model::_::&lt;impl serde::de::Deserialize for rmcp::model::CallToolRequestParam&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (903,074 samples, 0.18%)</title><rect x="76.2001%" y="261" width="0.1757%" height="15" fill="rgb(236,136,36)" fg:x="391704936" fg:w="903074"/><text x="76.4501%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (903,074 samples, 0.18%)</title><rect x="76.2001%" y="245" width="0.1757%" height="15" fill="rgb(249,172,42)" fg:x="391704936" fg:w="903074"/><text x="76.4501%" y="255.50"></text></g><g><title>serde::de::Visitor::visit_string (903,074 samples, 0.18%)</title><rect x="76.2001%" y="229" width="0.1757%" height="15" fill="rgb(216,139,23)" fg:x="391704936" fg:w="903074"/><text x="76.4501%" y="239.50"></text></g><g><title>&lt;rmcp::model::_::&lt;impl serde::de::Deserialize for rmcp::model::CallToolRequestParam&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (903,074 samples, 0.18%)</title><rect x="76.2001%" y="213" width="0.1757%" height="15" fill="rgb(207,166,20)" fg:x="391704936" fg:w="903074"/><text x="76.4501%" y="223.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::borrow::Cow&lt;T&gt;&gt;::deserialize (706,108 samples, 0.14%)</title><rect x="76.3758%" y="261" width="0.1374%" height="15" fill="rgb(210,209,22)" fg:x="392608010" fg:w="706108"/><text x="76.6258%" y="271.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (706,108 samples, 0.14%)</title><rect x="76.3758%" y="245" width="0.1374%" height="15" fill="rgb(232,118,20)" fg:x="392608010" fg:w="706108"/><text x="76.6258%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (706,108 samples, 0.14%)</title><rect x="76.3758%" y="229" width="0.1374%" height="15" fill="rgb(238,113,42)" fg:x="392608010" fg:w="706108"/><text x="76.6258%" y="239.50"></text></g><g><title>&lt;&amp;mut A as serde::de::MapAccess&gt;::next_value (11,396,165 samples, 2.22%)</title><rect x="74.3896%" y="485" width="2.2169%" height="15" fill="rgb(231,42,5)" fg:x="382397789" fg:w="11396165"/><text x="74.6396%" y="495.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_value (11,396,165 samples, 2.22%)</title><rect x="74.3896%" y="469" width="2.2169%" height="15" fill="rgb(243,166,24)" fg:x="382397789" fg:w="11396165"/><text x="74.6396%" y="479.50">s..</text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_value_seed (11,396,165 samples, 2.22%)</title><rect x="74.3896%" y="453" width="2.2169%" height="15" fill="rgb(237,226,12)" fg:x="382397789" fg:w="11396165"/><text x="74.6396%" y="463.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,396,165 samples, 2.22%)</title><rect x="74.3896%" y="437" width="2.2169%" height="15" fill="rgb(229,133,24)" fg:x="382397789" fg:w="11396165"/><text x="74.6396%" y="447.50">&lt;..</text></g><g><title>rmcp::model::serde_impl::_::&lt;impl serde::de::Deserialize for rmcp::model::serde_impl::WithMeta&lt;P&gt;&gt;::deserialize (4,934,025 samples, 0.96%)</title><rect x="75.6467%" y="421" width="0.9598%" height="15" fill="rgb(238,33,43)" fg:x="388859929" fg:w="4934025"/><text x="75.8967%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (4,934,025 samples, 0.96%)</title><rect x="75.6467%" y="405" width="0.9598%" height="15" fill="rgb(227,59,38)" fg:x="388859929" fg:w="4934025"/><text x="75.8967%" y="415.50"></text></g><g><title>serde::__private::de::content::visit_content_map_ref (3,979,784 samples, 0.77%)</title><rect x="75.8323%" y="389" width="0.7742%" height="15" fill="rgb(230,97,0)" fg:x="389814170" fg:w="3979784"/><text x="76.0823%" y="399.50"></text></g><g><title>&lt;rmcp::model::serde_impl::_::&lt;impl serde::de::Deserialize for rmcp::model::serde_impl::WithMeta&lt;P&gt;&gt;::deserialize::__Visitor&lt;P&gt; as serde::de::Visitor&gt;::visit_map (3,979,784 samples, 0.77%)</title><rect x="75.8323%" y="373" width="0.7742%" height="15" fill="rgb(250,173,50)" fg:x="389814170" fg:w="3979784"/><text x="76.0823%" y="383.50"></text></g><g><title>rmcp::model::_::&lt;impl serde::de::Deserialize for rmcp::model::CallToolRequestParam&gt;::deserialize (2,663,494 samples, 0.52%)</title><rect x="76.0884%" y="357" width="0.5181%" height="15" fill="rgb(240,15,50)" fg:x="391130460" fg:w="2663494"/><text x="76.3384%" y="367.50"></text></g><g><title>&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (2,663,494 samples, 0.52%)</title><rect x="76.0884%" y="341" width="0.5181%" height="15" fill="rgb(221,93,22)" fg:x="391130460" fg:w="2663494"/><text x="76.3384%" y="351.50"></text></g><g><title>&lt;rmcp::model::_::&lt;impl serde::de::Deserialize for rmcp::model::CallToolRequestParam&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2,089,018 samples, 0.41%)</title><rect x="76.2001%" y="325" width="0.4064%" height="15" fill="rgb(245,180,53)" fg:x="391704936" fg:w="2089018"/><text x="76.4501%" y="335.50"></text></g><g><title>serde::de::MapAccess::next_value (1,185,944 samples, 0.23%)</title><rect x="76.3758%" y="309" width="0.2307%" height="15" fill="rgb(231,88,51)" fg:x="392608010" fg:w="1185944"/><text x="76.6258%" y="319.50"></text></g><g><title>&lt;serde::__private::de::FlatStructAccess&lt;E&gt; as serde::de::MapAccess&gt;::next_value_seed (1,185,944 samples, 0.23%)</title><rect x="76.3758%" y="293" width="0.2307%" height="15" fill="rgb(240,58,21)" fg:x="392608010" fg:w="1185944"/><text x="76.6258%" y="303.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,185,944 samples, 0.23%)</title><rect x="76.3758%" y="277" width="0.2307%" height="15" fill="rgb(237,21,10)" fg:x="392608010" fg:w="1185944"/><text x="76.6258%" y="287.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (479,836 samples, 0.09%)</title><rect x="76.5132%" y="261" width="0.0933%" height="15" fill="rgb(218,43,11)" fg:x="393314118" fg:w="479836"/><text x="76.7632%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_option (479,836 samples, 0.09%)</title><rect x="76.5132%" y="245" width="0.0933%" height="15" fill="rgb(218,221,29)" fg:x="393314118" fg:w="479836"/><text x="76.7632%" y="255.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (479,836 samples, 0.09%)</title><rect x="76.5132%" y="229" width="0.0933%" height="15" fill="rgb(214,118,42)" fg:x="393314118" fg:w="479836"/><text x="76.7632%" y="239.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as serde::de::Deserialize&gt;::deserialize (479,836 samples, 0.09%)</title><rect x="76.5132%" y="213" width="0.0933%" height="15" fill="rgb(251,200,26)" fg:x="393314118" fg:w="479836"/><text x="76.7632%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (479,836 samples, 0.09%)</title><rect x="76.5132%" y="197" width="0.0933%" height="15" fill="rgb(237,101,39)" fg:x="393314118" fg:w="479836"/><text x="76.7632%" y="207.50"></text></g><g><title>serde::__private::de::content::visit_content_map (479,836 samples, 0.09%)</title><rect x="76.5132%" y="181" width="0.0933%" height="15" fill="rgb(251,117,11)" fg:x="393314118" fg:w="479836"/><text x="76.7632%" y="191.50"></text></g><g><title>serde::de::value::MapDeserializer&lt;I,E&gt;::end (479,836 samples, 0.09%)</title><rect x="76.5132%" y="165" width="0.0933%" height="15" fill="rgb(216,223,23)" fg:x="393314118" fg:w="479836"/><text x="76.7632%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::count (479,836 samples, 0.09%)</title><rect x="76.5132%" y="149" width="0.0933%" height="15" fill="rgb(251,54,12)" fg:x="393314118" fg:w="479836"/><text x="76.7632%" y="159.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::count (479,836 samples, 0.09%)</title><rect x="76.5132%" y="133" width="0.0933%" height="15" fill="rgb(254,176,54)" fg:x="393314118" fg:w="479836"/><text x="76.7632%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt;&gt; (479,836 samples, 0.09%)</title><rect x="76.5132%" y="117" width="0.0933%" height="15" fill="rgb(210,32,8)" fg:x="393314118" fg:w="479836"/><text x="76.7632%" y="127.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (479,836 samples, 0.09%)</title><rect x="76.5132%" y="101" width="0.0933%" height="15" fill="rgb(235,52,38)" fg:x="393314118" fg:w="479836"/><text x="76.7632%" y="111.50"></text></g><g><title>rmcp::model::serde_impl::&lt;impl serde::de::Deserialize for rmcp::model::Request&lt;M,R&gt;&gt;::deserialize (16,887,435 samples, 3.29%)</title><rect x="73.4719%" y="565" width="3.2852%" height="15" fill="rgb(231,4,44)" fg:x="377680671" fg:w="16887435"/><text x="73.7219%" y="575.50">rmc..</text></g><g><title>rmcp::model::serde_impl::_::&lt;impl serde::de::Deserialize for rmcp::model::serde_impl::Proxy&lt;M,P&gt;&gt;::deserialize (15,624,325 samples, 3.04%)</title><rect x="73.7177%" y="549" width="3.0395%" height="15" fill="rgb(249,2,32)" fg:x="378943781" fg:w="15624325"/><text x="73.9677%" y="559.50">rmc..</text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (15,205,609 samples, 2.96%)</title><rect x="73.7991%" y="533" width="2.9580%" height="15" fill="rgb(224,65,26)" fg:x="379362497" fg:w="15205609"/><text x="74.0491%" y="543.50">&lt;se..</text></g><g><title>serde::__private::de::content::visit_content_map_ref (14,726,712 samples, 2.86%)</title><rect x="73.8923%" y="517" width="2.8649%" height="15" fill="rgb(250,73,40)" fg:x="379841394" fg:w="14726712"/><text x="74.1423%" y="527.50">se..</text></g><g><title>&lt;rmcp::model::serde_impl::_::&lt;impl serde::de::Deserialize for rmcp::model::serde_impl::Proxy&lt;M,P&gt;&gt;::deserialize::__Visitor&lt;M,P&gt; as serde::de::Visitor&gt;::visit_map (13,815,215 samples, 2.69%)</title><rect x="74.0696%" y="501" width="2.6875%" height="15" fill="rgb(253,177,16)" fg:x="380752891" fg:w="13815215"/><text x="74.3196%" y="511.50">&lt;r..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (774,152 samples, 0.15%)</title><rect x="76.6065%" y="485" width="0.1506%" height="15" fill="rgb(217,32,34)" fg:x="393793954" fg:w="774152"/><text x="76.8565%" y="495.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (2,505,310 samples, 0.49%)</title><rect x="76.8384%" y="405" width="0.4874%" height="15" fill="rgb(212,7,10)" fg:x="394985647" fg:w="2505310"/><text x="77.0884%" y="415.50"></text></g><g><title>serde_json::error::make_error (2,505,310 samples, 0.49%)</title><rect x="76.8384%" y="389" width="0.4874%" height="15" fill="rgb(245,89,8)" fg:x="394985647" fg:w="2505310"/><text x="77.0884%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2,505,310 samples, 0.49%)</title><rect x="76.8384%" y="373" width="0.4874%" height="15" fill="rgb(237,16,53)" fg:x="394985647" fg:w="2505310"/><text x="77.0884%" y="383.50"></text></g><g><title>alloc::alloc::exchange_malloc (2,505,310 samples, 0.49%)</title><rect x="76.8384%" y="357" width="0.4874%" height="15" fill="rgb(250,204,30)" fg:x="394985647" fg:w="2505310"/><text x="77.0884%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,505,310 samples, 0.49%)</title><rect x="76.8384%" y="341" width="0.4874%" height="15" fill="rgb(208,77,27)" fg:x="394985647" fg:w="2505310"/><text x="77.0884%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,505,310 samples, 0.49%)</title><rect x="76.8384%" y="325" width="0.4874%" height="15" fill="rgb(250,204,28)" fg:x="394985647" fg:w="2505310"/><text x="77.0884%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2,505,310 samples, 0.49%)</title><rect x="76.8384%" y="309" width="0.4874%" height="15" fill="rgb(244,63,21)" fg:x="394985647" fg:w="2505310"/><text x="77.0884%" y="319.50"></text></g><g><title>__GI___libc_malloc (2,505,310 samples, 0.49%)</title><rect x="76.8384%" y="293" width="0.4874%" height="15" fill="rgb(236,85,44)" fg:x="394985647" fg:w="2505310"/><text x="77.0884%" y="303.50"></text></g><g><title>rmcp::model::serde_impl::&lt;impl serde::de::Deserialize for rmcp::model::RequestNoParam&lt;M&gt;&gt;::deserialize (3,525,833 samples, 0.69%)</title><rect x="76.7571%" y="565" width="0.6859%" height="15" fill="rgb(215,98,4)" fg:x="394568106" fg:w="3525833"/><text x="77.0071%" y="575.50"></text></g><g><title>rmcp::model::serde_impl::_::&lt;impl serde::de::Deserialize for rmcp::model::serde_impl::ProxyNoParam&lt;M&gt;&gt;::deserialize (3,525,833 samples, 0.69%)</title><rect x="76.7571%" y="549" width="0.6859%" height="15" fill="rgb(235,38,11)" fg:x="394568106" fg:w="3525833"/><text x="77.0071%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (3,525,833 samples, 0.69%)</title><rect x="76.7571%" y="533" width="0.6859%" height="15" fill="rgb(254,186,25)" fg:x="394568106" fg:w="3525833"/><text x="77.0071%" y="543.50"></text></g><g><title>serde::__private::de::content::visit_content_map_ref (3,108,292 samples, 0.60%)</title><rect x="76.8384%" y="517" width="0.6047%" height="15" fill="rgb(225,55,31)" fg:x="394985647" fg:w="3108292"/><text x="77.0884%" y="527.50"></text></g><g><title>&lt;rmcp::model::serde_impl::_::&lt;impl serde::de::Deserialize for rmcp::model::serde_impl::ProxyNoParam&lt;M&gt;&gt;::deserialize::__Visitor&lt;M&gt; as serde::de::Visitor&gt;::visit_map (3,108,292 samples, 0.60%)</title><rect x="76.8384%" y="501" width="0.6047%" height="15" fill="rgb(211,15,21)" fg:x="394985647" fg:w="3108292"/><text x="77.0884%" y="511.50"></text></g><g><title>&lt;&amp;mut A as serde::de::MapAccess&gt;::next_value (3,108,292 samples, 0.60%)</title><rect x="76.8384%" y="485" width="0.6047%" height="15" fill="rgb(215,187,41)" fg:x="394985647" fg:w="3108292"/><text x="77.0884%" y="495.50"></text></g><g><title>serde::de::MapAccess::next_value (3,108,292 samples, 0.60%)</title><rect x="76.8384%" y="469" width="0.6047%" height="15" fill="rgb(248,69,32)" fg:x="394985647" fg:w="3108292"/><text x="77.0884%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_value_seed (3,108,292 samples, 0.60%)</title><rect x="76.8384%" y="453" width="0.6047%" height="15" fill="rgb(252,102,52)" fg:x="394985647" fg:w="3108292"/><text x="77.0884%" y="463.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,108,292 samples, 0.60%)</title><rect x="76.8384%" y="437" width="0.6047%" height="15" fill="rgb(253,140,32)" fg:x="394985647" fg:w="3108292"/><text x="77.0884%" y="447.50"></text></g><g><title>&lt;rmcp::model::PingRequestMethod as serde::de::Deserialize&gt;::deserialize (3,108,292 samples, 0.60%)</title><rect x="76.8384%" y="421" width="0.6047%" height="15" fill="rgb(216,56,42)" fg:x="394985647" fg:w="3108292"/><text x="77.0884%" y="431.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (602,982 samples, 0.12%)</title><rect x="77.3257%" y="405" width="0.1173%" height="15" fill="rgb(216,184,14)" fg:x="397490957" fg:w="602982"/><text x="77.5757%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (602,982 samples, 0.12%)</title><rect x="77.3257%" y="389" width="0.1173%" height="15" fill="rgb(237,187,27)" fg:x="397490957" fg:w="602982"/><text x="77.5757%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (602,982 samples, 0.12%)</title><rect x="77.3257%" y="373" width="0.1173%" height="15" fill="rgb(219,65,3)" fg:x="397490957" fg:w="602982"/><text x="77.5757%" y="383.50"></text></g><g><title>__GI___libc_malloc (602,982 samples, 0.12%)</title><rect x="77.3257%" y="357" width="0.1173%" height="15" fill="rgb(245,83,25)" fg:x="397490957" fg:w="602982"/><text x="77.5757%" y="367.50"></text></g><g><title>&lt;&amp;mut A as serde::de::MapAccess&gt;::next_key (760,456 samples, 0.15%)</title><rect x="77.6457%" y="485" width="0.1479%" height="15" fill="rgb(214,205,45)" fg:x="399135940" fg:w="760456"/><text x="77.8957%" y="495.50"></text></g><g><title>serde::de::MapAccess::next_key (760,456 samples, 0.15%)</title><rect x="77.6457%" y="469" width="0.1479%" height="15" fill="rgb(241,20,18)" fg:x="399135940" fg:w="760456"/><text x="77.8957%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (760,456 samples, 0.15%)</title><rect x="77.6457%" y="453" width="0.1479%" height="15" fill="rgb(232,163,23)" fg:x="399135940" fg:w="760456"/><text x="77.8957%" y="463.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (760,456 samples, 0.15%)</title><rect x="77.6457%" y="437" width="0.1479%" height="15" fill="rgb(214,5,46)" fg:x="399135940" fg:w="760456"/><text x="77.8957%" y="447.50"></text></g><g><title>&lt;rmcp::model::serde_impl::_::&lt;impl serde::de::Deserialize for rmcp::model::serde_impl::ProxyOptionalParam&lt;M,P&gt;&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (760,456 samples, 0.15%)</title><rect x="77.6457%" y="421" width="0.1479%" height="15" fill="rgb(229,78,17)" fg:x="399135940" fg:w="760456"/><text x="77.8957%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (760,456 samples, 0.15%)</title><rect x="77.6457%" y="405" width="0.1479%" height="15" fill="rgb(248,89,10)" fg:x="399135940" fg:w="760456"/><text x="77.8957%" y="415.50"></text></g><g><title>&lt;rmcp::model::ListPromptsRequestMethod as serde::de::Deserialize&gt;::deserialize (511,157 samples, 0.10%)</title><rect x="77.9976%" y="421" width="0.0994%" height="15" fill="rgb(248,54,15)" fg:x="400944909" fg:w="511157"/><text x="78.2476%" y="431.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (511,157 samples, 0.10%)</title><rect x="77.9976%" y="405" width="0.0994%" height="15" fill="rgb(223,116,6)" fg:x="400944909" fg:w="511157"/><text x="78.2476%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (511,157 samples, 0.10%)</title><rect x="77.9976%" y="389" width="0.0994%" height="15" fill="rgb(205,125,38)" fg:x="400944909" fg:w="511157"/><text x="78.2476%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (511,157 samples, 0.10%)</title><rect x="77.9976%" y="373" width="0.0994%" height="15" fill="rgb(251,78,38)" fg:x="400944909" fg:w="511157"/><text x="78.2476%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (511,157 samples, 0.10%)</title><rect x="77.9976%" y="357" width="0.0994%" height="15" fill="rgb(253,78,28)" fg:x="400944909" fg:w="511157"/><text x="78.2476%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (511,157 samples, 0.10%)</title><rect x="77.9976%" y="341" width="0.0994%" height="15" fill="rgb(209,120,3)" fg:x="400944909" fg:w="511157"/><text x="78.2476%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (511,157 samples, 0.10%)</title><rect x="77.9976%" y="325" width="0.0994%" height="15" fill="rgb(238,229,9)" fg:x="400944909" fg:w="511157"/><text x="78.2476%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (511,157 samples, 0.10%)</title><rect x="77.9976%" y="309" width="0.0994%" height="15" fill="rgb(253,159,18)" fg:x="400944909" fg:w="511157"/><text x="78.2476%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (511,157 samples, 0.10%)</title><rect x="77.9976%" y="293" width="0.0994%" height="15" fill="rgb(244,42,34)" fg:x="400944909" fg:w="511157"/><text x="78.2476%" y="303.50"></text></g><g><title>__free (511,157 samples, 0.10%)</title><rect x="77.9976%" y="277" width="0.0994%" height="15" fill="rgb(224,8,7)" fg:x="400944909" fg:w="511157"/><text x="78.2476%" y="287.50"></text></g><g><title>_int_free (511,157 samples, 0.10%)</title><rect x="77.9976%" y="261" width="0.0994%" height="15" fill="rgb(210,201,45)" fg:x="400944909" fg:w="511157"/><text x="78.2476%" y="271.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (466,073 samples, 0.09%)</title><rect x="78.0971%" y="405" width="0.0907%" height="15" fill="rgb(252,185,21)" fg:x="401456066" fg:w="466073"/><text x="78.3471%" y="415.50"></text></g><g><title>serde_json::error::make_error (466,073 samples, 0.09%)</title><rect x="78.0971%" y="389" width="0.0907%" height="15" fill="rgb(223,131,1)" fg:x="401456066" fg:w="466073"/><text x="78.3471%" y="399.50"></text></g><g><title>serde_json::error::parse_line_col (466,073 samples, 0.09%)</title><rect x="78.0971%" y="373" width="0.0907%" height="15" fill="rgb(245,141,16)" fg:x="401456066" fg:w="466073"/><text x="78.3471%" y="383.50"></text></g><g><title>core::str::&lt;impl str&gt;::rfind (466,073 samples, 0.09%)</title><rect x="78.0971%" y="357" width="0.0907%" height="15" fill="rgb(229,55,45)" fg:x="401456066" fg:w="466073"/><text x="78.3471%" y="367.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (466,073 samples, 0.09%)</title><rect x="78.0971%" y="341" width="0.0907%" height="15" fill="rgb(208,92,15)" fg:x="401456066" fg:w="466073"/><text x="78.3471%" y="351.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next_back (466,073 samples, 0.09%)</title><rect x="78.0971%" y="325" width="0.0907%" height="15" fill="rgb(234,185,47)" fg:x="401456066" fg:w="466073"/><text x="78.3471%" y="335.50"></text></g><g><title>&lt;rmcp::model::ListResourceTemplatesRequestMethod as serde::de::Deserialize&gt;::deserialize (961,925 samples, 0.19%)</title><rect x="78.0971%" y="421" width="0.1871%" height="15" fill="rgb(253,104,50)" fg:x="401456066" fg:w="961925"/><text x="78.3471%" y="431.50"></text></g><g><title>alloc::fmt::format (495,852 samples, 0.10%)</title><rect x="78.1877%" y="405" width="0.0965%" height="15" fill="rgb(205,70,7)" fg:x="401922139" fg:w="495852"/><text x="78.4377%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (495,852 samples, 0.10%)</title><rect x="78.1877%" y="389" width="0.0965%" height="15" fill="rgb(240,178,43)" fg:x="401922139" fg:w="495852"/><text x="78.4377%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (495,852 samples, 0.10%)</title><rect x="78.1877%" y="373" width="0.0965%" height="15" fill="rgb(214,112,2)" fg:x="401922139" fg:w="495852"/><text x="78.4377%" y="383.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (495,852 samples, 0.10%)</title><rect x="78.1877%" y="357" width="0.0965%" height="15" fill="rgb(206,46,17)" fg:x="401922139" fg:w="495852"/><text x="78.4377%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (495,852 samples, 0.10%)</title><rect x="78.1877%" y="341" width="0.0965%" height="15" fill="rgb(225,220,16)" fg:x="401922139" fg:w="495852"/><text x="78.4377%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (495,852 samples, 0.10%)</title><rect x="78.1877%" y="325" width="0.0965%" height="15" fill="rgb(238,65,40)" fg:x="401922139" fg:w="495852"/><text x="78.4377%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (495,852 samples, 0.10%)</title><rect x="78.1877%" y="309" width="0.0965%" height="15" fill="rgb(230,151,21)" fg:x="401922139" fg:w="495852"/><text x="78.4377%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (495,852 samples, 0.10%)</title><rect x="78.1877%" y="293" width="0.0965%" height="15" fill="rgb(218,58,49)" fg:x="401922139" fg:w="495852"/><text x="78.4377%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (495,852 samples, 0.10%)</title><rect x="78.1877%" y="277" width="0.0965%" height="15" fill="rgb(219,179,14)" fg:x="401922139" fg:w="495852"/><text x="78.4377%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (495,852 samples, 0.10%)</title><rect x="78.1877%" y="261" width="0.0965%" height="15" fill="rgb(223,72,1)" fg:x="401922139" fg:w="495852"/><text x="78.4377%" y="271.50"></text></g><g><title>rmcp::transport::common::server_side_http::expect_json::{{closure}} (75,887,761 samples, 14.76%)</title><rect x="63.6678%" y="709" width="14.7628%" height="15" fill="rgb(238,126,10)" fg:x="327282832" fg:w="75887761"/><text x="63.9178%" y="719.50">rmcp::transport::common..</text></g><g><title>serde_json::de::from_reader (70,584,525 samples, 13.73%)</title><rect x="64.6995%" y="693" width="13.7311%" height="15" fill="rgb(224,206,38)" fg:x="332586068" fg:w="70584525"/><text x="64.9495%" y="703.50">serde_json::de::from_..</text></g><g><title>serde_json::de::from_trait (70,584,525 samples, 13.73%)</title><rect x="64.6995%" y="677" width="13.7311%" height="15" fill="rgb(212,201,54)" fg:x="332586068" fg:w="70584525"/><text x="64.9495%" y="687.50">serde_json::de::from_..</text></g><g><title>rmcp::model::_::&lt;impl serde::de::Deserialize for rmcp::model::JsonRpcMessage&lt;Req,Resp,Noti&gt;&gt;::deserialize (68,657,764 samples, 13.36%)</title><rect x="65.0743%" y="661" width="13.3563%" height="15" fill="rgb(218,154,48)" fg:x="334512829" fg:w="68657764"/><text x="65.3243%" y="671.50">rmcp::model::_::&lt;imp..</text></g><g><title>rmcp::model::_::&lt;impl serde::de::Deserialize for rmcp::model::JsonRpcRequest&lt;R&gt;&gt;::deserialize (45,950,122 samples, 8.94%)</title><rect x="69.4917%" y="645" width="8.9389%" height="15" fill="rgb(232,93,24)" fg:x="357220471" fg:w="45950122"/><text x="69.7417%" y="655.50">rmcp::model::..</text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (45,950,122 samples, 8.94%)</title><rect x="69.4917%" y="629" width="8.9389%" height="15" fill="rgb(245,30,21)" fg:x="357220471" fg:w="45950122"/><text x="69.7417%" y="639.50">&lt;serde::__pri..</text></g><g><title>serde::__private::de::content::visit_content_map_ref (45,314,519 samples, 8.82%)</title><rect x="69.6154%" y="613" width="8.8152%" height="15" fill="rgb(242,148,29)" fg:x="357856074" fg:w="45314519"/><text x="69.8654%" y="623.50">serde::__pri..</text></g><g><title>&lt;rmcp::model::_::&lt;impl serde::de::Deserialize for rmcp::model::JsonRpcRequest&lt;R&gt;&gt;::deserialize::__Visitor&lt;R&gt; as serde::de::Visitor&gt;::visit_map (45,314,519 samples, 8.82%)</title><rect x="69.6154%" y="597" width="8.8152%" height="15" fill="rgb(244,153,54)" fg:x="357856074" fg:w="45314519"/><text x="69.8654%" y="607.50">&lt;rmcp::model..</text></g><g><title>rmcp::model::_::&lt;impl serde::de::Deserialize for rmcp::model::ClientRequest&gt;::deserialize (34,303,177 samples, 6.67%)</title><rect x="71.7575%" y="581" width="6.6732%" height="15" fill="rgb(252,87,22)" fg:x="368867416" fg:w="34303177"/><text x="72.0075%" y="591.50">rmcp::mod..</text></g><g><title>rmcp::model::serde_impl::&lt;impl serde::de::Deserialize for rmcp::model::RequestOptionalParam&lt;M,R&gt;&gt;::deserialize (5,076,654 samples, 0.99%)</title><rect x="77.4430%" y="565" width="0.9876%" height="15" fill="rgb(210,51,29)" fg:x="398093939" fg:w="5076654"/><text x="77.6930%" y="575.50"></text></g><g><title>rmcp::model::serde_impl::_::&lt;impl serde::de::Deserialize for rmcp::model::serde_impl::ProxyOptionalParam&lt;M,P&gt;&gt;::deserialize (4,637,450 samples, 0.90%)</title><rect x="77.5285%" y="549" width="0.9021%" height="15" fill="rgb(242,136,47)" fg:x="398533143" fg:w="4637450"/><text x="77.7785%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (4,637,450 samples, 0.90%)</title><rect x="77.5285%" y="533" width="0.9021%" height="15" fill="rgb(238,68,4)" fg:x="398533143" fg:w="4637450"/><text x="77.7785%" y="543.50"></text></g><g><title>serde::__private::de::content::visit_content_map_ref (4,637,450 samples, 0.90%)</title><rect x="77.5285%" y="517" width="0.9021%" height="15" fill="rgb(242,161,30)" fg:x="398533143" fg:w="4637450"/><text x="77.7785%" y="527.50"></text></g><g><title>&lt;rmcp::model::serde_impl::_::&lt;impl serde::de::Deserialize for rmcp::model::serde_impl::ProxyOptionalParam&lt;M,P&gt;&gt;::deserialize::__Visitor&lt;M,P&gt; as serde::de::Visitor&gt;::visit_map (4,637,450 samples, 0.90%)</title><rect x="77.5285%" y="501" width="0.9021%" height="15" fill="rgb(218,58,44)" fg:x="398533143" fg:w="4637450"/><text x="77.7785%" y="511.50"></text></g><g><title>&lt;&amp;mut A as serde::de::MapAccess&gt;::next_value (3,274,197 samples, 0.64%)</title><rect x="77.7937%" y="485" width="0.6369%" height="15" fill="rgb(252,125,32)" fg:x="399896396" fg:w="3274197"/><text x="78.0437%" y="495.50"></text></g><g><title>serde::de::MapAccess::next_value (3,274,197 samples, 0.64%)</title><rect x="77.7937%" y="469" width="0.6369%" height="15" fill="rgb(219,178,0)" fg:x="399896396" fg:w="3274197"/><text x="78.0437%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_value_seed (3,274,197 samples, 0.64%)</title><rect x="77.7937%" y="453" width="0.6369%" height="15" fill="rgb(213,152,7)" fg:x="399896396" fg:w="3274197"/><text x="78.0437%" y="463.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,225,684 samples, 0.43%)</title><rect x="77.9976%" y="437" width="0.4330%" height="15" fill="rgb(249,109,34)" fg:x="400944909" fg:w="2225684"/><text x="78.2476%" y="447.50"></text></g><g><title>&lt;rmcp::model::ListResourcesRequestMethod as serde::de::Deserialize&gt;::deserialize (752,602 samples, 0.15%)</title><rect x="78.2842%" y="421" width="0.1464%" height="15" fill="rgb(232,96,21)" fg:x="402417991" fg:w="752602"/><text x="78.5342%" y="431.50"></text></g><g><title>alloc::fmt::format (752,602 samples, 0.15%)</title><rect x="78.2842%" y="405" width="0.1464%" height="15" fill="rgb(228,27,39)" fg:x="402417991" fg:w="752602"/><text x="78.5342%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (752,602 samples, 0.15%)</title><rect x="78.2842%" y="389" width="0.1464%" height="15" fill="rgb(211,182,52)" fg:x="402417991" fg:w="752602"/><text x="78.5342%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (752,602 samples, 0.15%)</title><rect x="78.2842%" y="373" width="0.1464%" height="15" fill="rgb(234,178,38)" fg:x="402417991" fg:w="752602"/><text x="78.5342%" y="383.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (752,602 samples, 0.15%)</title><rect x="78.2842%" y="357" width="0.1464%" height="15" fill="rgb(221,111,3)" fg:x="402417991" fg:w="752602"/><text x="78.5342%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (752,602 samples, 0.15%)</title><rect x="78.2842%" y="341" width="0.1464%" height="15" fill="rgb(228,175,21)" fg:x="402417991" fg:w="752602"/><text x="78.5342%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (752,602 samples, 0.15%)</title><rect x="78.2842%" y="325" width="0.1464%" height="15" fill="rgb(228,174,43)" fg:x="402417991" fg:w="752602"/><text x="78.5342%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (752,602 samples, 0.15%)</title><rect x="78.2842%" y="309" width="0.1464%" height="15" fill="rgb(211,191,0)" fg:x="402417991" fg:w="752602"/><text x="78.5342%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (752,602 samples, 0.15%)</title><rect x="78.2842%" y="293" width="0.1464%" height="15" fill="rgb(253,117,3)" fg:x="402417991" fg:w="752602"/><text x="78.5342%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (752,602 samples, 0.15%)</title><rect x="78.2842%" y="277" width="0.1464%" height="15" fill="rgb(241,127,19)" fg:x="402417991" fg:w="752602"/><text x="78.5342%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (752,602 samples, 0.15%)</title><rect x="78.2842%" y="261" width="0.1464%" height="15" fill="rgb(218,103,12)" fg:x="402417991" fg:w="752602"/><text x="78.5342%" y="271.50"></text></g><g><title>http::response::Builder::header (2,144,172 samples, 0.42%)</title><rect x="78.4306%" y="693" width="0.4171%" height="15" fill="rgb(236,214,43)" fg:x="403170593" fg:w="2144172"/><text x="78.6806%" y="703.50"></text></g><g><title>http::response::Builder::and_then (1,765,897 samples, 0.34%)</title><rect x="78.5042%" y="677" width="0.3435%" height="15" fill="rgb(244,144,19)" fg:x="403548868" fg:w="1765897"/><text x="78.7542%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1,765,897 samples, 0.34%)</title><rect x="78.5042%" y="661" width="0.3435%" height="15" fill="rgb(246,188,10)" fg:x="403548868" fg:w="1765897"/><text x="78.7542%" y="671.50"></text></g><g><title>http::response::Builder::header::{{closure}} (1,765,897 samples, 0.34%)</title><rect x="78.5042%" y="645" width="0.3435%" height="15" fill="rgb(212,193,33)" fg:x="403548868" fg:w="1765897"/><text x="78.7542%" y="655.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append (441,420 samples, 0.09%)</title><rect x="78.7619%" y="629" width="0.0859%" height="15" fill="rgb(241,51,29)" fg:x="404873345" fg:w="441420"/><text x="79.0119%" y="639.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::try_append (441,420 samples, 0.09%)</title><rect x="78.7619%" y="613" width="0.0859%" height="15" fill="rgb(211,58,19)" fg:x="404873345" fg:w="441420"/><text x="79.0119%" y="623.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append2 (441,420 samples, 0.09%)</title><rect x="78.7619%" y="597" width="0.0859%" height="15" fill="rgb(229,111,26)" fg:x="404873345" fg:w="441420"/><text x="79.0119%" y="607.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_insert_entry (441,420 samples, 0.09%)</title><rect x="78.7619%" y="581" width="0.0859%" height="15" fill="rgb(213,115,40)" fg:x="404873345" fg:w="441420"/><text x="79.0119%" y="591.50"></text></g><g><title>&lt;axum::util::MapIntoResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (115,837,839 samples, 22.53%)</title><rect x="56.4134%" y="789" width="22.5345%" height="15" fill="rgb(209,56,44)" fg:x="289991773" fg:w="115837839"/><text x="56.6634%" y="799.50">&lt;axum::util::MapIntoResponseFuture&lt;F..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (115,837,839 samples, 22.53%)</title><rect x="56.4134%" y="773" width="22.5345%" height="15" fill="rgb(230,108,32)" fg:x="289991773" fg:w="115837839"/><text x="56.6634%" y="783.50">&lt;core::pin::Pin&lt;P&gt; as core::future::..</text></g><g><title>&lt;rmcp::transport::streamable_http_server::tower::StreamableHttpService&lt;S,M&gt; as tower_service::Service&lt;http::request::Request&lt;RequestBody&gt;&gt;&gt;::call::{{closure}} (115,837,839 samples, 22.53%)</title><rect x="56.4134%" y="757" width="22.5345%" height="15" fill="rgb(216,165,31)" fg:x="289991773" fg:w="115837839"/><text x="56.6634%" y="767.50">&lt;rmcp::transport::streamable_http_se..</text></g><g><title>rmcp::transport::streamable_http_server::tower::StreamableHttpService&lt;S,M&gt;::handle::{{closure}} (115,224,549 samples, 22.42%)</title><rect x="56.5327%" y="741" width="22.4152%" height="15" fill="rgb(218,122,21)" fg:x="290605063" fg:w="115224549"/><text x="56.7827%" y="751.50">rmcp::transport::streamable_http_se..</text></g><g><title>rmcp::transport::streamable_http_server::tower::StreamableHttpService&lt;S,M&gt;::handle_post::{{closure}} (115,224,549 samples, 22.42%)</title><rect x="56.5327%" y="725" width="22.4152%" height="15" fill="rgb(223,224,47)" fg:x="290605063" fg:w="115224549"/><text x="56.7827%" y="735.50">rmcp::transport::streamable_http_se..</text></g><g><title>rmcp::transport::common::server_side_http::sse_stream_response (2,659,019 samples, 0.52%)</title><rect x="78.4306%" y="709" width="0.5173%" height="15" fill="rgb(238,102,44)" fg:x="403170593" fg:w="2659019"/><text x="78.6806%" y="719.50"></text></g><g><title>sse_stream::body::SseBody&lt;S,T&gt;::with_keep_alive (514,847 samples, 0.10%)</title><rect x="78.8477%" y="693" width="0.1002%" height="15" fill="rgb(236,46,40)" fg:x="405314765" fg:w="514847"/><text x="79.0977%" y="703.50"></text></g><g><title>sse_stream::body::KeepAliveStream&lt;S&gt;::new (514,847 samples, 0.10%)</title><rect x="78.8477%" y="677" width="0.1002%" height="15" fill="rgb(247,202,50)" fg:x="405314765" fg:w="514847"/><text x="79.0977%" y="687.50"></text></g><g><title>&lt;rmcp::transport::common::server_side_http::TokioTimer as sse_stream::body::Timer&gt;::from_duration (514,847 samples, 0.10%)</title><rect x="78.8477%" y="661" width="0.1002%" height="15" fill="rgb(209,99,20)" fg:x="405314765" fg:w="514847"/><text x="79.0977%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (116,705,351 samples, 22.70%)</title><rect x="56.3210%" y="805" width="22.7032%" height="15" fill="rgb(252,27,34)" fg:x="289516719" fg:w="116705351"/><text x="56.5710%" y="815.50">&lt;core::pin::Pin&lt;P&gt; as core::future::..</text></g><g><title>el0t_64_irq_handler (392,458 samples, 0.08%)</title><rect x="78.9479%" y="789" width="0.0763%" height="15" fill="rgb(215,206,23)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="799.50"></text></g><g><title>__el0_irq_handler_common (392,458 samples, 0.08%)</title><rect x="78.9479%" y="773" width="0.0763%" height="15" fill="rgb(212,135,36)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="783.50"></text></g><g><title>el0_interrupt (392,458 samples, 0.08%)</title><rect x="78.9479%" y="757" width="0.0763%" height="15" fill="rgb(240,189,1)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="767.50"></text></g><g><title>irq_exit_rcu (392,458 samples, 0.08%)</title><rect x="78.9479%" y="741" width="0.0763%" height="15" fill="rgb(242,56,20)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="751.50"></text></g><g><title>__irq_exit_rcu (392,458 samples, 0.08%)</title><rect x="78.9479%" y="725" width="0.0763%" height="15" fill="rgb(247,132,33)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="735.50"></text></g><g><title>do_softirq_own_stack (392,458 samples, 0.08%)</title><rect x="78.9479%" y="709" width="0.0763%" height="15" fill="rgb(208,149,11)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="719.50"></text></g><g><title>call_on_irq_stack (392,458 samples, 0.08%)</title><rect x="78.9479%" y="693" width="0.0763%" height="15" fill="rgb(211,33,11)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="703.50"></text></g><g><title>____do_softirq (392,458 samples, 0.08%)</title><rect x="78.9479%" y="677" width="0.0763%" height="15" fill="rgb(221,29,38)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="687.50"></text></g><g><title>__softirqentry_text_start (392,458 samples, 0.08%)</title><rect x="78.9479%" y="661" width="0.0763%" height="15" fill="rgb(206,182,49)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="671.50"></text></g><g><title>handle_softirqs (392,458 samples, 0.08%)</title><rect x="78.9479%" y="645" width="0.0763%" height="15" fill="rgb(216,140,1)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="655.50"></text></g><g><title>net_rx_action (392,458 samples, 0.08%)</title><rect x="78.9479%" y="629" width="0.0763%" height="15" fill="rgb(232,57,40)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="639.50"></text></g><g><title>__napi_poll (392,458 samples, 0.08%)</title><rect x="78.9479%" y="613" width="0.0763%" height="15" fill="rgb(224,186,18)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="623.50"></text></g><g><title>ena_io_poll (392,458 samples, 0.08%)</title><rect x="78.9479%" y="597" width="0.0763%" height="15" fill="rgb(215,121,11)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="607.50"></text></g><g><title>napi_complete_done (392,458 samples, 0.08%)</title><rect x="78.9479%" y="581" width="0.0763%" height="15" fill="rgb(245,147,10)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="591.50"></text></g><g><title>netif_receive_skb_list_internal (392,458 samples, 0.08%)</title><rect x="78.9479%" y="565" width="0.0763%" height="15" fill="rgb(238,153,13)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="575.50"></text></g><g><title>__netif_receive_skb_list_core (392,458 samples, 0.08%)</title><rect x="78.9479%" y="549" width="0.0763%" height="15" fill="rgb(233,108,0)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="559.50"></text></g><g><title>ip_list_rcv (392,458 samples, 0.08%)</title><rect x="78.9479%" y="533" width="0.0763%" height="15" fill="rgb(212,157,17)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="543.50"></text></g><g><title>ip_sublist_rcv (392,458 samples, 0.08%)</title><rect x="78.9479%" y="517" width="0.0763%" height="15" fill="rgb(225,213,38)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="527.50"></text></g><g><title>ip_sublist_rcv_finish (392,458 samples, 0.08%)</title><rect x="78.9479%" y="501" width="0.0763%" height="15" fill="rgb(248,16,11)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="511.50"></text></g><g><title>ip_local_deliver (392,458 samples, 0.08%)</title><rect x="78.9479%" y="485" width="0.0763%" height="15" fill="rgb(241,33,4)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="495.50"></text></g><g><title>ip_local_deliver_finish (392,458 samples, 0.08%)</title><rect x="78.9479%" y="469" width="0.0763%" height="15" fill="rgb(222,26,43)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="479.50"></text></g><g><title>ip_protocol_deliver_rcu (392,458 samples, 0.08%)</title><rect x="78.9479%" y="453" width="0.0763%" height="15" fill="rgb(243,29,36)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="463.50"></text></g><g><title>tcp_v4_rcv (392,458 samples, 0.08%)</title><rect x="78.9479%" y="437" width="0.0763%" height="15" fill="rgb(241,9,27)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="447.50"></text></g><g><title>tcp_v4_do_rcv (392,458 samples, 0.08%)</title><rect x="78.9479%" y="421" width="0.0763%" height="15" fill="rgb(205,117,26)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="431.50"></text></g><g><title>tcp_rcv_established (392,458 samples, 0.08%)</title><rect x="78.9479%" y="405" width="0.0763%" height="15" fill="rgb(209,80,39)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="415.50"></text></g><g><title>tcp_check_space (392,458 samples, 0.08%)</title><rect x="78.9479%" y="389" width="0.0763%" height="15" fill="rgb(239,155,6)" fg:x="405829612" fg:w="392458"/><text x="79.1979%" y="399.50"></text></g><g><title>__GI___memcpy_simd (481,726 samples, 0.09%)</title><rect x="79.0242%" y="693" width="0.0937%" height="15" fill="rgb(212,104,12)" fg:x="406222070" fg:w="481726"/><text x="79.2742%" y="703.50"></text></g><g><title>malloc_consolidate (568,827 samples, 0.11%)</title><rect x="79.1935%" y="597" width="0.1107%" height="15" fill="rgb(234,204,3)" fg:x="407092044" fg:w="568827"/><text x="79.4435%" y="607.50"></text></g><g><title>&lt;axum::util::MapIntoResponse&lt;S&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (2,083,512 samples, 0.41%)</title><rect x="79.0242%" y="757" width="0.4053%" height="15" fill="rgb(251,218,7)" fg:x="406222070" fg:w="2083512"/><text x="79.2742%" y="767.50"></text></g><g><title>&lt;rmcp::transport::streamable_http_server::tower::StreamableHttpService&lt;S,M&gt; as tower_service::Service&lt;http::request::Request&lt;RequestBody&gt;&gt;&gt;::call (2,083,512 samples, 0.41%)</title><rect x="79.0242%" y="741" width="0.4053%" height="15" fill="rgb(221,81,32)" fg:x="406222070" fg:w="2083512"/><text x="79.2742%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (2,083,512 samples, 0.41%)</title><rect x="79.0242%" y="725" width="0.4053%" height="15" fill="rgb(214,152,26)" fg:x="406222070" fg:w="2083512"/><text x="79.2742%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2,083,512 samples, 0.41%)</title><rect x="79.0242%" y="709" width="0.4053%" height="15" fill="rgb(223,22,3)" fg:x="406222070" fg:w="2083512"/><text x="79.2742%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,601,786 samples, 0.31%)</title><rect x="79.1179%" y="693" width="0.3116%" height="15" fill="rgb(207,174,7)" fg:x="406703796" fg:w="1601786"/><text x="79.3679%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,601,786 samples, 0.31%)</title><rect x="79.1179%" y="677" width="0.3116%" height="15" fill="rgb(224,19,52)" fg:x="406703796" fg:w="1601786"/><text x="79.3679%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,601,786 samples, 0.31%)</title><rect x="79.1179%" y="661" width="0.3116%" height="15" fill="rgb(228,24,14)" fg:x="406703796" fg:w="1601786"/><text x="79.3679%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1,601,786 samples, 0.31%)</title><rect x="79.1179%" y="645" width="0.3116%" height="15" fill="rgb(230,153,43)" fg:x="406703796" fg:w="1601786"/><text x="79.3679%" y="655.50"></text></g><g><title>__GI___libc_malloc (1,601,786 samples, 0.31%)</title><rect x="79.1179%" y="629" width="0.3116%" height="15" fill="rgb(231,106,12)" fg:x="406703796" fg:w="1601786"/><text x="79.3679%" y="639.50"></text></g><g><title>_int_malloc (1,601,786 samples, 0.31%)</title><rect x="79.1179%" y="613" width="0.3116%" height="15" fill="rgb(215,92,2)" fg:x="406703796" fg:w="1601786"/><text x="79.3679%" y="623.50"></text></g><g><title>unlink_chunk.constprop.0 (644,711 samples, 0.13%)</title><rect x="79.3041%" y="597" width="0.1254%" height="15" fill="rgb(249,143,25)" fg:x="407660871" fg:w="644711"/><text x="79.5541%" y="607.50"></text></g><g><title>__GI___libc_malloc (575,236 samples, 0.11%)</title><rect x="79.4295%" y="645" width="0.1119%" height="15" fill="rgb(252,7,35)" fg:x="408305582" fg:w="575236"/><text x="79.6795%" y="655.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as tower_service::Service&lt;T&gt;&gt;::call (3,173,475 samples, 0.62%)</title><rect x="79.0242%" y="805" width="0.6174%" height="15" fill="rgb(216,69,40)" fg:x="406222070" fg:w="3173475"/><text x="79.2742%" y="815.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::call (3,173,475 samples, 0.62%)</title><rect x="79.0242%" y="789" width="0.6174%" height="15" fill="rgb(240,36,33)" fg:x="406222070" fg:w="3173475"/><text x="79.2742%" y="799.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (3,173,475 samples, 0.62%)</title><rect x="79.0242%" y="773" width="0.6174%" height="15" fill="rgb(231,128,14)" fg:x="406222070" fg:w="3173475"/><text x="79.2742%" y="783.50"></text></g><g><title>tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt;::new::{{closure}} (1,089,963 samples, 0.21%)</title><rect x="79.4295%" y="757" width="0.2120%" height="15" fill="rgb(245,143,14)" fg:x="408305582" fg:w="1089963"/><text x="79.6795%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1,089,963 samples, 0.21%)</title><rect x="79.4295%" y="741" width="0.2120%" height="15" fill="rgb(222,130,28)" fg:x="408305582" fg:w="1089963"/><text x="79.6795%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,089,963 samples, 0.21%)</title><rect x="79.4295%" y="725" width="0.2120%" height="15" fill="rgb(212,10,48)" fg:x="408305582" fg:w="1089963"/><text x="79.6795%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,089,963 samples, 0.21%)</title><rect x="79.4295%" y="709" width="0.2120%" height="15" fill="rgb(254,118,45)" fg:x="408305582" fg:w="1089963"/><text x="79.6795%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,089,963 samples, 0.21%)</title><rect x="79.4295%" y="693" width="0.2120%" height="15" fill="rgb(228,6,45)" fg:x="408305582" fg:w="1089963"/><text x="79.6795%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,089,963 samples, 0.21%)</title><rect x="79.4295%" y="677" width="0.2120%" height="15" fill="rgb(241,18,35)" fg:x="408305582" fg:w="1089963"/><text x="79.6795%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1,089,963 samples, 0.21%)</title><rect x="79.4295%" y="661" width="0.2120%" height="15" fill="rgb(227,214,53)" fg:x="408305582" fg:w="1089963"/><text x="79.6795%" y="671.50"></text></g><g><title>core::ptr::read_volatile (514,727 samples, 0.10%)</title><rect x="79.5415%" y="645" width="0.1001%" height="15" fill="rgb(224,107,51)" fg:x="408880818" fg:w="514727"/><text x="79.7915%" y="655.50"></text></g><g><title>__free (1,138,634 samples, 0.22%)</title><rect x="79.6416%" y="741" width="0.2215%" height="15" fill="rgb(248,60,28)" fg:x="409395545" fg:w="1138634"/><text x="79.8916%" y="751.50"></text></g><g><title>_int_free (1,138,634 samples, 0.22%)</title><rect x="79.6416%" y="725" width="0.2215%" height="15" fill="rgb(249,101,23)" fg:x="409395545" fg:w="1138634"/><text x="79.8916%" y="735.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (123,053,315 samples, 23.94%)</title><rect x="56.0986%" y="869" width="23.9381%" height="15" fill="rgb(228,51,19)" fg:x="288373663" fg:w="123053315"/><text x="56.3486%" y="879.50">&lt;core::pin::Pin&lt;P&gt; as core::future::fu..</text></g><g><title>&lt;axum::util::MapIntoResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (123,053,315 samples, 23.94%)</title><rect x="56.0986%" y="853" width="23.9381%" height="15" fill="rgb(213,20,6)" fg:x="288373663" fg:w="123053315"/><text x="56.3486%" y="863.50">&lt;axum::util::MapIntoResponseFuture&lt;F&gt; ..</text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (123,053,315 samples, 23.94%)</title><rect x="56.0986%" y="837" width="23.9381%" height="15" fill="rgb(212,124,10)" fg:x="288373663" fg:w="123053315"/><text x="56.3486%" y="847.50">&lt;axum::routing::route::RouteFuture&lt;E&gt; ..</text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (121,910,259 samples, 23.72%)</title><rect x="56.3210%" y="821" width="23.7158%" height="15" fill="rgb(248,3,40)" fg:x="289516719" fg:w="121910259"/><text x="56.5710%" y="831.50">&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; ..</text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (2,031,433 samples, 0.40%)</title><rect x="79.6416%" y="805" width="0.3952%" height="15" fill="rgb(223,178,23)" fg:x="409395545" fg:w="2031433"/><text x="79.8916%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;,http::request::Request&lt;axum_core::body::Body&gt;&gt;&gt; (2,031,433 samples, 0.40%)</title><rect x="79.6416%" y="789" width="0.3952%" height="15" fill="rgb(240,132,45)" fg:x="409395545" fg:w="2031433"/><text x="79.8916%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;&gt; (2,031,433 samples, 0.40%)</title><rect x="79.6416%" y="773" width="0.3952%" height="15" fill="rgb(245,164,36)" fg:x="409395545" fg:w="2031433"/><text x="79.8916%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt; (2,031,433 samples, 0.40%)</title><rect x="79.6416%" y="757" width="0.3952%" height="15" fill="rgb(231,188,53)" fg:x="409395545" fg:w="2031433"/><text x="79.8916%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_future::MapFuture&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;axum::middleware::from_fn::FromFn&lt;keipes_ai_mcp::log_requests,(),axum::routing::route::Route,(http::request::Request&lt;axum_core::body::Body&gt;,)&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;,tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;::new&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;axum::middleware::from_fn::FromFn&lt;keipes_ai_mcp::log_requests,(),axum::routing::route::Route,(http::request::Request&lt;axum_core::body::Body&gt;,)&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt;::{{closure}}&gt;&gt; (892,799 samples, 0.17%)</title><rect x="79.8631%" y="741" width="0.1737%" height="15" fill="rgb(237,198,39)" fg:x="410534179" fg:w="892799"/><text x="80.1131%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;axum::middleware::from_fn::FromFn&lt;keipes_ai_mcp::log_requests,(),axum::routing::route::Route,(http::request::Request&lt;axum_core::body::Body&gt;,)&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt; (892,799 samples, 0.17%)</title><rect x="79.8631%" y="725" width="0.1737%" height="15" fill="rgb(223,120,35)" fg:x="410534179" fg:w="892799"/><text x="80.1131%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_err::MapErr&lt;axum::middleware::from_fn::FromFn&lt;keipes_ai_mcp::log_requests,(),axum::routing::route::Route,(http::request::Request&lt;axum_core::body::Body&gt;,)&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt; (892,799 samples, 0.17%)</title><rect x="79.8631%" y="709" width="0.1737%" height="15" fill="rgb(253,107,49)" fg:x="410534179" fg:w="892799"/><text x="80.1131%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::middleware::from_fn::FromFn&lt;keipes_ai_mcp::log_requests,(),axum::routing::route::Route,(http::request::Request&lt;axum_core::body::Body&gt;,)&gt;&gt; (892,799 samples, 0.17%)</title><rect x="79.8631%" y="693" width="0.1737%" height="15" fill="rgb(216,44,31)" fg:x="410534179" fg:w="892799"/><text x="80.1131%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::route::Route&gt; (892,799 samples, 0.17%)</title><rect x="79.8631%" y="677" width="0.1737%" height="15" fill="rgb(253,87,21)" fg:x="410534179" fg:w="892799"/><text x="80.1131%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;&gt; (892,799 samples, 0.17%)</title><rect x="79.8631%" y="661" width="0.1737%" height="15" fill="rgb(226,18,2)" fg:x="410534179" fg:w="892799"/><text x="80.1131%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn tower::util::boxed_clone_sync::CloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;+Future = core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;+Response = http::response::Response&lt;axum_core::body::Body&gt;+Error = core::convert::Infallible+core::marker::Send+core::marker::Sync&gt;&gt; (892,799 samples, 0.17%)</title><rect x="79.8631%" y="645" width="0.1737%" height="15" fill="rgb(216,8,46)" fg:x="410534179" fg:w="892799"/><text x="80.1131%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;rmcp::transport::streamable_http_server::tower::StreamableHttpService&lt;keipes_ai_mcp::server::mcp::NexusServer&gt; as tower_service::Service&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;&gt;::call::{{closure}}&gt; (892,799 samples, 0.17%)</title><rect x="79.8631%" y="629" width="0.1737%" height="15" fill="rgb(226,140,39)" fg:x="410534179" fg:w="892799"/><text x="80.1131%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::middleware::from_fn::Next&gt; (312,407 samples, 0.06%)</title><rect x="80.0368%" y="869" width="0.0608%" height="15" fill="rgb(221,194,54)" fg:x="411426978" fg:w="312407"/><text x="80.2868%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;&gt; (312,407 samples, 0.06%)</title><rect x="80.0368%" y="853" width="0.0608%" height="15" fill="rgb(213,92,11)" fg:x="411426978" fg:w="312407"/><text x="80.2868%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn tower::util::boxed_clone_sync::CloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;+Future = core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;+Response = http::response::Response&lt;axum_core::body::Body&gt;+Error = core::convert::Infallible+core::marker::Send+core::marker::Sync&gt;&gt; (312,407 samples, 0.06%)</title><rect x="80.0368%" y="837" width="0.0608%" height="15" fill="rgb(229,162,46)" fg:x="411426978" fg:w="312407"/><text x="80.2868%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::combinators::map_err::MapErr&lt;axum_core::body::Body,axum_core::error::Error::new&lt;axum_core::error::Error&gt;&gt;&gt; (312,407 samples, 0.06%)</title><rect x="80.0368%" y="821" width="0.0608%" height="15" fill="rgb(214,111,36)" fg:x="411426978" fg:w="312407"/><text x="80.2868%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum_core::body::Body&gt; (312,407 samples, 0.06%)</title><rect x="80.0368%" y="805" width="0.0608%" height="15" fill="rgb(207,6,21)" fg:x="411426978" fg:w="312407"/><text x="80.2868%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt; (312,407 samples, 0.06%)</title><rect x="80.0368%" y="789" width="0.0608%" height="15" fill="rgb(213,127,38)" fg:x="411426978" fg:w="312407"/><text x="80.2868%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn http_body::Body+Error = axum_core::error::Error+Data = bytes::bytes::Bytes+core::marker::Send&gt;&gt;&gt; (312,407 samples, 0.06%)</title><rect x="80.0368%" y="773" width="0.0608%" height="15" fill="rgb(238,118,32)" fg:x="411426978" fg:w="312407"/><text x="80.2868%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn http_body::Body+Error = axum_core::error::Error+Data = bytes::bytes::Bytes+core::marker::Send&gt;&gt; (312,407 samples, 0.06%)</title><rect x="80.0368%" y="757" width="0.0608%" height="15" fill="rgb(240,139,39)" fg:x="411426978" fg:w="312407"/><text x="80.2868%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_future::MapFuture&lt;axum::util::MapIntoResponse&lt;rmcp::transport::streamable_http_server::tower::StreamableHttpService&lt;keipes_ai_mcp::server::mcp::NexusServer&gt;&gt;,tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;::new&lt;axum::util::MapIntoResponse&lt;rmcp::transport::streamable_http_server::tower::StreamableHttpService&lt;keipes_ai_mcp::server::mcp::NexusServer&gt;&gt;&gt;::{{closure}}&gt;&gt; (312,407 samples, 0.06%)</title><rect x="80.0368%" y="741" width="0.0608%" height="15" fill="rgb(235,10,37)" fg:x="411426978" fg:w="312407"/><text x="80.2868%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::util::MapIntoResponse&lt;rmcp::transport::streamable_http_server::tower::StreamableHttpService&lt;keipes_ai_mcp::server::mcp::NexusServer&gt;&gt;&gt; (312,407 samples, 0.06%)</title><rect x="80.0368%" y="725" width="0.0608%" height="15" fill="rgb(249,171,38)" fg:x="411426978" fg:w="312407"/><text x="80.2868%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;rmcp::transport::streamable_http_server::tower::StreamableHttpService&lt;keipes_ai_mcp::server::mcp::NexusServer&gt;&gt; (312,407 samples, 0.06%)</title><rect x="80.0368%" y="709" width="0.0608%" height="15" fill="rgb(242,144,32)" fg:x="411426978" fg:w="312407"/><text x="80.2868%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rmcp::transport::streamable_http_server::session::local::LocalSessionManager&gt;&gt; (312,407 samples, 0.06%)</title><rect x="80.0368%" y="693" width="0.0608%" height="15" fill="rgb(217,117,21)" fg:x="411426978" fg:w="312407"/><text x="80.2868%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (312,407 samples, 0.06%)</title><rect x="80.0368%" y="677" width="0.0608%" height="15" fill="rgb(249,87,1)" fg:x="411426978" fg:w="312407"/><text x="80.2868%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (312,407 samples, 0.06%)</title><rect x="80.0368%" y="661" width="0.0608%" height="15" fill="rgb(248,196,48)" fg:x="411426978" fg:w="312407"/><text x="80.2868%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (312,407 samples, 0.06%)</title><rect x="80.0368%" y="645" width="0.0608%" height="15" fill="rgb(251,206,33)" fg:x="411426978" fg:w="312407"/><text x="80.2868%" y="655.50"></text></g><g><title>__aarch64_ldadd8_rel (312,407 samples, 0.06%)</title><rect x="80.0368%" y="629" width="0.0608%" height="15" fill="rgb(232,141,28)" fg:x="411426978" fg:w="312407"/><text x="80.2868%" y="639.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (123,901,587 samples, 24.10%)</title><rect x="56.0986%" y="1061" width="24.1031%" height="15" fill="rgb(209,167,14)" fg:x="288373663" fg:w="123901587"/><text x="56.3486%" y="1071.50">&lt;core::pin::Pin&lt;P&gt; as core::future::fu..</text></g><g><title>&lt;axum::util::MapIntoResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (123,901,587 samples, 24.10%)</title><rect x="56.0986%" y="1045" width="24.1031%" height="15" fill="rgb(225,11,50)" fg:x="288373663" fg:w="123901587"/><text x="56.3486%" y="1055.50">&lt;axum::util::MapIntoResponseFuture&lt;F&gt; ..</text></g><g><title>&lt;tower::util::map_err::MapErrFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (123,901,587 samples, 24.10%)</title><rect x="56.0986%" y="1029" width="24.1031%" height="15" fill="rgb(209,50,20)" fg:x="288373663" fg:w="123901587"/><text x="56.3486%" y="1039.50">&lt;tower::util::map_err::MapErrFuture&lt;F,..</text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (123,901,587 samples, 24.10%)</title><rect x="56.0986%" y="1013" width="24.1031%" height="15" fill="rgb(212,17,46)" fg:x="288373663" fg:w="123901587"/><text x="56.3486%" y="1023.50">&lt;futures_util::future::try_future::Map..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (123,901,587 samples, 24.10%)</title><rect x="56.0986%" y="997" width="24.1031%" height="15" fill="rgb(216,101,39)" fg:x="288373663" fg:w="123901587"/><text x="56.3486%" y="1007.50">&lt;futures_util::future::future::Map&lt;Fut..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (123,901,587 samples, 24.10%)</title><rect x="56.0986%" y="981" width="24.1031%" height="15" fill="rgb(212,228,48)" fg:x="288373663" fg:w="123901587"/><text x="56.3486%" y="991.50">&lt;futures_util::future::future::map::Ma..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (123,901,587 samples, 24.10%)</title><rect x="56.0986%" y="965" width="24.1031%" height="15" fill="rgb(250,6,50)" fg:x="288373663" fg:w="123901587"/><text x="56.3486%" y="975.50">&lt;futures_util::future::try_future::int..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (123,901,587 samples, 24.10%)</title><rect x="56.0986%" y="949" width="24.1031%" height="15" fill="rgb(250,160,48)" fg:x="288373663" fg:w="123901587"/><text x="56.3486%" y="959.50">&lt;F as futures_core::future::TryFuture&gt;..</text></g><g><title>&lt;axum::middleware::from_fn::ResponseFuture as core::future::future::Future&gt;::poll (123,901,587 samples, 24.10%)</title><rect x="56.0986%" y="933" width="24.1031%" height="15" fill="rgb(244,216,33)" fg:x="288373663" fg:w="123901587"/><text x="56.3486%" y="943.50">&lt;axum::middleware::from_fn::ResponseFu..</text></g><g><title>&lt;axum::middleware::from_fn::FromFn&lt;F,S,I,(T1,)&gt; as tower_service::Service&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;&gt;::call::{{closure}} (123,901,587 samples, 24.10%)</title><rect x="56.0986%" y="917" width="24.1031%" height="15" fill="rgb(207,157,5)" fg:x="288373663" fg:w="123901587"/><text x="56.3486%" y="927.50">&lt;axum::middleware::from_fn::FromFn&lt;F,S..</text></g><g><title>keipes_ai_mcp::log_requests::{{closure}} (123,901,587 samples, 24.10%)</title><rect x="56.0986%" y="901" width="24.1031%" height="15" fill="rgb(228,199,8)" fg:x="288373663" fg:w="123901587"/><text x="56.3486%" y="911.50">keipes_ai_mcp::log_requests::{{closure..</text></g><g><title>axum::middleware::from_fn::Next::run::{{closure}} (123,901,587 samples, 24.10%)</title><rect x="56.0986%" y="885" width="24.1031%" height="15" fill="rgb(227,80,20)" fg:x="288373663" fg:w="123901587"/><text x="56.3486%" y="895.50">axum::middleware::from_fn::Next::run::..</text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;&gt; (535,865 samples, 0.10%)</title><rect x="80.0975%" y="869" width="0.1042%" height="15" fill="rgb(222,9,33)" fg:x="411739385" fg:w="535865"/><text x="80.3475%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt; (535,865 samples, 0.10%)</title><rect x="80.0975%" y="853" width="0.1042%" height="15" fill="rgb(239,44,28)" fg:x="411739385" fg:w="535865"/><text x="80.3475%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::route::RouteFuture&lt;core::convert::Infallible&gt;&gt; (535,865 samples, 0.10%)</title><rect x="80.0975%" y="837" width="0.1042%" height="15" fill="rgb(249,187,43)" fg:x="411739385" fg:w="535865"/><text x="80.3475%" y="847.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (470,886 samples, 0.09%)</title><rect x="80.3024%" y="965" width="0.0916%" height="15" fill="rgb(216,141,28)" fg:x="412792534" fg:w="470886"/><text x="80.5524%" y="975.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (470,886 samples, 0.09%)</title><rect x="80.3024%" y="949" width="0.0916%" height="15" fill="rgb(230,154,53)" fg:x="412792534" fg:w="470886"/><text x="80.5524%" y="959.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (470,886 samples, 0.09%)</title><rect x="80.3024%" y="933" width="0.0916%" height="15" fill="rgb(227,82,4)" fg:x="412792534" fg:w="470886"/><text x="80.5524%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (470,886 samples, 0.09%)</title><rect x="80.3024%" y="917" width="0.0916%" height="15" fill="rgb(220,107,16)" fg:x="412792534" fg:w="470886"/><text x="80.5524%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (470,886 samples, 0.09%)</title><rect x="80.3024%" y="901" width="0.0916%" height="15" fill="rgb(207,187,2)" fg:x="412792534" fg:w="470886"/><text x="80.5524%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (470,886 samples, 0.09%)</title><rect x="80.3024%" y="885" width="0.0916%" height="15" fill="rgb(210,162,52)" fg:x="412792534" fg:w="470886"/><text x="80.5524%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (470,886 samples, 0.09%)</title><rect x="80.3024%" y="869" width="0.0916%" height="15" fill="rgb(217,216,49)" fg:x="412792534" fg:w="470886"/><text x="80.5524%" y="879.50"></text></g><g><title>alloc::alloc::alloc (470,886 samples, 0.09%)</title><rect x="80.3024%" y="853" width="0.0916%" height="15" fill="rgb(218,146,49)" fg:x="412792534" fg:w="470886"/><text x="80.5524%" y="863.50"></text></g><g><title>__GI___libc_malloc (470,886 samples, 0.09%)</title><rect x="80.3024%" y="837" width="0.0916%" height="15" fill="rgb(216,55,40)" fg:x="412792534" fg:w="470886"/><text x="80.5524%" y="847.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as tower_service::Service&lt;T&gt;&gt;::call (3,049,610 samples, 0.59%)</title><rect x="80.2018%" y="1061" width="0.5933%" height="15" fill="rgb(208,196,21)" fg:x="412275250" fg:w="3049610"/><text x="80.4518%" y="1071.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::call (3,049,610 samples, 0.59%)</title><rect x="80.2018%" y="1045" width="0.5933%" height="15" fill="rgb(242,117,42)" fg:x="412275250" fg:w="3049610"/><text x="80.4518%" y="1055.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (3,049,610 samples, 0.59%)</title><rect x="80.2018%" y="1029" width="0.5933%" height="15" fill="rgb(210,11,23)" fg:x="412275250" fg:w="3049610"/><text x="80.4518%" y="1039.50"></text></g><g><title>&lt;axum::util::MapIntoResponse&lt;S&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (2,532,326 samples, 0.49%)</title><rect x="80.3024%" y="1013" width="0.4926%" height="15" fill="rgb(217,110,2)" fg:x="412792534" fg:w="2532326"/><text x="80.5524%" y="1023.50"></text></g><g><title>&lt;tower::util::map_err::MapErr&lt;S,F&gt; as tower_service::Service&lt;Request&gt;&gt;::call (2,532,326 samples, 0.49%)</title><rect x="80.3024%" y="997" width="0.4926%" height="15" fill="rgb(229,77,54)" fg:x="412792534" fg:w="2532326"/><text x="80.5524%" y="1007.50"></text></g><g><title>&lt;axum::middleware::from_fn::FromFn&lt;F,S,I,(T1,)&gt; as tower_service::Service&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;&gt;::call (2,532,326 samples, 0.49%)</title><rect x="80.3024%" y="981" width="0.4926%" height="15" fill="rgb(218,53,16)" fg:x="412792534" fg:w="2532326"/><text x="80.5524%" y="991.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (2,061,440 samples, 0.40%)</title><rect x="80.3940%" y="965" width="0.4010%" height="15" fill="rgb(215,38,13)" fg:x="413263420" fg:w="2061440"/><text x="80.6440%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2,061,440 samples, 0.40%)</title><rect x="80.3940%" y="949" width="0.4010%" height="15" fill="rgb(235,42,18)" fg:x="413263420" fg:w="2061440"/><text x="80.6440%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (2,061,440 samples, 0.40%)</title><rect x="80.3940%" y="933" width="0.4010%" height="15" fill="rgb(219,66,54)" fg:x="413263420" fg:w="2061440"/><text x="80.6440%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,061,440 samples, 0.40%)</title><rect x="80.3940%" y="917" width="0.4010%" height="15" fill="rgb(222,205,4)" fg:x="413263420" fg:w="2061440"/><text x="80.6440%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,061,440 samples, 0.40%)</title><rect x="80.3940%" y="901" width="0.4010%" height="15" fill="rgb(227,213,46)" fg:x="413263420" fg:w="2061440"/><text x="80.6440%" y="911.50"></text></g><g><title>alloc::alloc::alloc (2,061,440 samples, 0.40%)</title><rect x="80.3940%" y="885" width="0.4010%" height="15" fill="rgb(250,145,42)" fg:x="413263420" fg:w="2061440"/><text x="80.6440%" y="895.50"></text></g><g><title>__GI___libc_malloc (2,061,440 samples, 0.40%)</title><rect x="80.3940%" y="869" width="0.4010%" height="15" fill="rgb(219,15,2)" fg:x="413263420" fg:w="2061440"/><text x="80.6440%" y="879.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (144,327,989 samples, 28.08%)</title><rect x="52.8701%" y="1141" width="28.0768%" height="15" fill="rgb(231,181,52)" fg:x="271777575" fg:w="144327989"/><text x="53.1201%" y="1151.50">&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::..</text></g><g><title>&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;S,R&gt; as core::future::future::Future&gt;::poll (144,327,989 samples, 28.08%)</title><rect x="52.8701%" y="1125" width="28.0768%" height="15" fill="rgb(235,1,42)" fg:x="271777575" fg:w="144327989"/><text x="53.1201%" y="1135.50">&lt;hyper_util::service::glue::TowerToHyperServi..</text></g><g><title>&lt;hyper_util::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (144,327,989 samples, 28.08%)</title><rect x="52.8701%" y="1109" width="28.0768%" height="15" fill="rgb(249,88,27)" fg:x="271777575" fg:w="144327989"/><text x="53.1201%" y="1119.50">&lt;hyper_util::service::oneshot::Oneshot&lt;S,Req&gt;..</text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (128,244,498 samples, 24.95%)</title><rect x="55.9989%" y="1093" width="24.9480%" height="15" fill="rgb(235,145,16)" fg:x="287861066" fg:w="128244498"/><text x="56.2489%" y="1103.50">&lt;axum::routing::route::RouteFuture&lt;E&gt; as..</text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (127,731,901 samples, 24.85%)</title><rect x="56.0986%" y="1077" width="24.8483%" height="15" fill="rgb(237,114,19)" fg:x="288373663" fg:w="127731901"/><text x="56.3486%" y="1087.50">&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as..</text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (780,704 samples, 0.15%)</title><rect x="80.7950%" y="1061" width="0.1519%" height="15" fill="rgb(238,51,50)" fg:x="415324860" fg:w="780704"/><text x="81.0450%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;,http::request::Request&lt;axum_core::body::Body&gt;&gt;&gt; (780,704 samples, 0.15%)</title><rect x="80.7950%" y="1045" width="0.1519%" height="15" fill="rgb(205,194,25)" fg:x="415324860" fg:w="780704"/><text x="81.0450%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;&gt; (780,704 samples, 0.15%)</title><rect x="80.7950%" y="1029" width="0.1519%" height="15" fill="rgb(215,203,17)" fg:x="415324860" fg:w="780704"/><text x="81.0450%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn tower::util::boxed_clone_sync::CloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;+Future = core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;+Response = http::response::Response&lt;axum_core::body::Body&gt;+Error = core::convert::Infallible+core::marker::Send+core::marker::Sync&gt;&gt; (780,704 samples, 0.15%)</title><rect x="80.7950%" y="1013" width="0.1519%" height="15" fill="rgb(233,112,49)" fg:x="415324860" fg:w="780704"/><text x="81.0450%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_future::MapFuture&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;axum::middleware::from_fn::FromFn&lt;keipes_ai_mcp::log_requests,(),axum::routing::route::Route,(http::request::Request&lt;axum_core::body::Body&gt;,)&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;,tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;::new&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;axum::middleware::from_fn::FromFn&lt;keipes_ai_mcp::log_requests,(),axum::routing::route::Route,(http::request::Request&lt;axum_core::body::Body&gt;,)&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt;::{{closure}}&gt;&gt; (780,704 samples, 0.15%)</title><rect x="80.7950%" y="997" width="0.1519%" height="15" fill="rgb(241,130,26)" fg:x="415324860" fg:w="780704"/><text x="81.0450%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::util::MapIntoResponse&lt;tower::util::map_err::MapErr&lt;axum::middleware::from_fn::FromFn&lt;keipes_ai_mcp::log_requests,(),axum::routing::route::Route,(http::request::Request&lt;axum_core::body::Body&gt;,)&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;&gt; (780,704 samples, 0.15%)</title><rect x="80.7950%" y="981" width="0.1519%" height="15" fill="rgb(252,223,19)" fg:x="415324860" fg:w="780704"/><text x="81.0450%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_err::MapErr&lt;axum::middleware::from_fn::FromFn&lt;keipes_ai_mcp::log_requests,(),axum::routing::route::Route,(http::request::Request&lt;axum_core::body::Body&gt;,)&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt; (780,704 samples, 0.15%)</title><rect x="80.7950%" y="965" width="0.1519%" height="15" fill="rgb(211,95,25)" fg:x="415324860" fg:w="780704"/><text x="81.0450%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::middleware::from_fn::FromFn&lt;keipes_ai_mcp::log_requests,(),axum::routing::route::Route,(http::request::Request&lt;axum_core::body::Body&gt;,)&gt;&gt; (780,704 samples, 0.15%)</title><rect x="80.7950%" y="949" width="0.1519%" height="15" fill="rgb(251,182,27)" fg:x="415324860" fg:w="780704"/><text x="81.0450%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::route::Route&gt; (780,704 samples, 0.15%)</title><rect x="80.7950%" y="933" width="0.1519%" height="15" fill="rgb(238,24,4)" fg:x="415324860" fg:w="780704"/><text x="81.0450%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;&gt; (780,704 samples, 0.15%)</title><rect x="80.7950%" y="917" width="0.1519%" height="15" fill="rgb(224,220,25)" fg:x="415324860" fg:w="780704"/><text x="81.0450%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn tower::util::boxed_clone_sync::CloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;+Future = core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;+Response = http::response::Response&lt;axum_core::body::Body&gt;+Error = core::convert::Infallible+core::marker::Send+core::marker::Sync&gt;&gt; (780,704 samples, 0.15%)</title><rect x="80.7950%" y="901" width="0.1519%" height="15" fill="rgb(239,133,26)" fg:x="415324860" fg:w="780704"/><text x="81.0450%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_future::MapFuture&lt;axum::util::MapIntoResponse&lt;rmcp::transport::streamable_http_server::tower::StreamableHttpService&lt;keipes_ai_mcp::server::mcp::NexusServer&gt;&gt;,tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;::new&lt;axum::util::MapIntoResponse&lt;rmcp::transport::streamable_http_server::tower::StreamableHttpService&lt;keipes_ai_mcp::server::mcp::NexusServer&gt;&gt;&gt;::{{closure}}&gt;&gt; (372,902 samples, 0.07%)</title><rect x="80.8744%" y="885" width="0.0725%" height="15" fill="rgb(211,94,48)" fg:x="415732662" fg:w="372902"/><text x="81.1244%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::util::MapIntoResponse&lt;rmcp::transport::streamable_http_server::tower::StreamableHttpService&lt;keipes_ai_mcp::server::mcp::NexusServer&gt;&gt;&gt; (372,902 samples, 0.07%)</title><rect x="80.8744%" y="869" width="0.0725%" height="15" fill="rgb(239,87,6)" fg:x="415732662" fg:w="372902"/><text x="81.1244%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;rmcp::transport::streamable_http_server::tower::StreamableHttpService&lt;keipes_ai_mcp::server::mcp::NexusServer&gt;&gt; (372,902 samples, 0.07%)</title><rect x="80.8744%" y="853" width="0.0725%" height="15" fill="rgb(227,62,0)" fg:x="415732662" fg:w="372902"/><text x="81.1244%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = core::result::Result&lt;keipes_ai_mcp::server::mcp::NexusServer,std::io::error::Error&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (372,902 samples, 0.07%)</title><rect x="80.8744%" y="837" width="0.0725%" height="15" fill="rgb(211,226,4)" fg:x="415732662" fg:w="372902"/><text x="81.1244%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (372,902 samples, 0.07%)</title><rect x="80.8744%" y="821" width="0.0725%" height="15" fill="rgb(253,38,52)" fg:x="415732662" fg:w="372902"/><text x="81.1244%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (372,902 samples, 0.07%)</title><rect x="80.8744%" y="805" width="0.0725%" height="15" fill="rgb(229,126,40)" fg:x="415732662" fg:w="372902"/><text x="81.1244%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_sub (372,902 samples, 0.07%)</title><rect x="80.8744%" y="789" width="0.0725%" height="15" fill="rgb(229,165,44)" fg:x="415732662" fg:w="372902"/><text x="81.1244%" y="799.50"></text></g><g><title>__aarch64_ldadd8_rel (372,902 samples, 0.07%)</title><rect x="80.8744%" y="773" width="0.0725%" height="15" fill="rgb(247,95,47)" fg:x="415732662" fg:w="372902"/><text x="81.1244%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::dispatch::OptGuard&lt;axum_core::body::Body&gt;&gt; (533,257 samples, 0.10%)</title><rect x="80.9469%" y="1141" width="0.1037%" height="15" fill="rgb(216,140,30)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="1151.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::OptGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (533,257 samples, 0.10%)</title><rect x="80.9469%" y="1125" width="0.1037%" height="15" fill="rgb(246,214,8)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="1135.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (533,257 samples, 0.10%)</title><rect x="80.9469%" y="1109" width="0.1037%" height="15" fill="rgb(227,224,15)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;axum_core::body::Body&gt;&gt; (533,257 samples, 0.10%)</title><rect x="80.9469%" y="1093" width="0.1037%" height="15" fill="rgb(233,175,4)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum_core::body::Body&gt; (533,257 samples, 0.10%)</title><rect x="80.9469%" y="1077" width="0.1037%" height="15" fill="rgb(221,66,45)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt; (533,257 samples, 0.10%)</title><rect x="80.9469%" y="1061" width="0.1037%" height="15" fill="rgb(221,178,18)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn http_body::Body+Error = axum_core::error::Error+Data = bytes::bytes::Bytes+core::marker::Send&gt;&gt;&gt; (533,257 samples, 0.10%)</title><rect x="80.9469%" y="1045" width="0.1037%" height="15" fill="rgb(213,81,29)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn http_body::Body+Error = axum_core::error::Error+Data = bytes::bytes::Bytes+core::marker::Send&gt;&gt; (533,257 samples, 0.10%)</title><rect x="80.9469%" y="1029" width="0.1037%" height="15" fill="rgb(220,89,49)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::combinators::map_err::MapErr&lt;axum_core::body::Body,axum_core::error::Error::new&lt;axum_core::error::Error&gt;&gt;&gt; (533,257 samples, 0.10%)</title><rect x="80.9469%" y="1013" width="0.1037%" height="15" fill="rgb(227,60,33)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum_core::body::Body&gt; (533,257 samples, 0.10%)</title><rect x="80.9469%" y="997" width="0.1037%" height="15" fill="rgb(205,113,12)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt; (533,257 samples, 0.10%)</title><rect x="80.9469%" y="981" width="0.1037%" height="15" fill="rgb(211,32,1)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn http_body::Body+Error = axum_core::error::Error+Data = bytes::bytes::Bytes+core::marker::Send&gt;&gt;&gt; (533,257 samples, 0.10%)</title><rect x="80.9469%" y="965" width="0.1037%" height="15" fill="rgb(246,2,12)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn http_body::Body+Error = axum_core::error::Error+Data = bytes::bytes::Bytes+core::marker::Send&gt;&gt; (533,257 samples, 0.10%)</title><rect x="80.9469%" y="949" width="0.1037%" height="15" fill="rgb(243,37,27)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;sse_stream::body::SseBody&lt;futures_util::stream::stream::map::Map&lt;tokio_stream::wrappers::mpsc_bounded::ReceiverStream&lt;rmcp::transport::common::server_side_http::ServerSseMessage&gt;,rmcp::transport::common::server_side_http::sse_stream_response&lt;tokio_stream::wrappers::mpsc_bounded::ReceiverStream&lt;rmcp::transport::common::server_side_http::ServerSseMessage&gt;&gt;::{{closure}}&gt;,rmcp::transport::common::server_side_http::TokioTimer&gt;&gt; (533,257 samples, 0.10%)</title><rect x="80.9469%" y="933" width="0.1037%" height="15" fill="rgb(248,211,31)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::stream::map::Map&lt;tokio_stream::wrappers::mpsc_bounded::ReceiverStream&lt;rmcp::transport::common::server_side_http::ServerSseMessage&gt;,rmcp::transport::common::server_side_http::sse_stream_response&lt;tokio_stream::wrappers::mpsc_bounded::ReceiverStream&lt;rmcp::transport::common::server_side_http::ServerSseMessage&gt;&gt;::{{closure}}&gt;&gt; (533,257 samples, 0.10%)</title><rect x="80.9469%" y="917" width="0.1037%" height="15" fill="rgb(242,146,47)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio_stream::wrappers::mpsc_bounded::ReceiverStream&lt;rmcp::transport::common::server_side_http::ServerSseMessage&gt;&gt; (533,257 samples, 0.10%)</title><rect x="80.9469%" y="901" width="0.1037%" height="15" fill="rgb(206,70,20)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::bounded::Receiver&lt;rmcp::transport::common::server_side_http::ServerSseMessage&gt;&gt; (533,257 samples, 0.10%)</title><rect x="80.9469%" y="885" width="0.1037%" height="15" fill="rgb(215,10,51)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::chan::Rx&lt;rmcp::transport::common::server_side_http::ServerSseMessage,tokio::sync::mpsc::bounded::Semaphore&gt;&gt; (533,257 samples, 0.10%)</title><rect x="80.9469%" y="869" width="0.1037%" height="15" fill="rgb(243,178,53)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::mpsc::chan::Chan&lt;rmcp::transport::common::server_side_http::ServerSseMessage,tokio::sync::mpsc::bounded::Semaphore&gt;&gt;&gt; (533,257 samples, 0.10%)</title><rect x="80.9469%" y="853" width="0.1037%" height="15" fill="rgb(233,221,20)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (533,257 samples, 0.10%)</title><rect x="80.9469%" y="837" width="0.1037%" height="15" fill="rgb(218,95,35)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (533,257 samples, 0.10%)</title><rect x="80.9469%" y="821" width="0.1037%" height="15" fill="rgb(229,13,5)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::chan::Chan&lt;rmcp::transport::common::server_side_http::ServerSseMessage,tokio::sync::mpsc::bounded::Semaphore&gt;&gt; (533,257 samples, 0.10%)</title><rect x="80.9469%" y="805" width="0.1037%" height="15" fill="rgb(252,164,30)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="815.50"></text></g><g><title>&lt;tokio::sync::mpsc::chan::Chan&lt;T,S&gt; as core::ops::drop::Drop&gt;::drop (533,257 samples, 0.10%)</title><rect x="80.9469%" y="789" width="0.1037%" height="15" fill="rgb(232,68,36)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="799.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (533,257 samples, 0.10%)</title><rect x="80.9469%" y="773" width="0.1037%" height="15" fill="rgb(219,59,54)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="783.50"></text></g><g><title>&lt;tokio::sync::mpsc::chan::Chan&lt;T,S&gt; as core::ops::drop::Drop&gt;::drop::{{closure}} (533,257 samples, 0.10%)</title><rect x="80.9469%" y="757" width="0.1037%" height="15" fill="rgb(250,92,33)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="767.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (533,257 samples, 0.10%)</title><rect x="80.9469%" y="741" width="0.1037%" height="15" fill="rgb(229,162,54)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="751.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read (533,257 samples, 0.10%)</title><rect x="80.9469%" y="725" width="0.1037%" height="15" fill="rgb(244,114,52)" fg:x="416105564" fg:w="533257"/><text x="81.1969%" y="735.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::can_buffer_body (1,862,891 samples, 0.36%)</title><rect x="81.0507%" y="1141" width="0.3624%" height="15" fill="rgb(212,211,43)" fg:x="416638821" fg:w="1862891"/><text x="81.3007%" y="1151.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::can_buffer (1,862,891 samples, 0.36%)</title><rect x="81.0507%" y="1125" width="0.3624%" height="15" fill="rgb(226,147,8)" fg:x="416638821" fg:w="1862891"/><text x="81.3007%" y="1135.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::end_body (473,121 samples, 0.09%)</title><rect x="81.4130%" y="1141" width="0.0920%" height="15" fill="rgb(226,23,13)" fg:x="418501712" fg:w="473121"/><text x="81.6630%" y="1151.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_body (413,384 samples, 0.08%)</title><rect x="81.5051%" y="1141" width="0.0804%" height="15" fill="rgb(240,63,4)" fg:x="418974833" fg:w="413384"/><text x="81.7551%" y="1151.50"></text></g><g><title>hyper::proto::h1::encode::Encoder::encode (413,384 samples, 0.08%)</title><rect x="81.5051%" y="1125" width="0.0804%" height="15" fill="rgb(221,1,32)" fg:x="418974833" fg:w="413384"/><text x="81.7551%" y="1135.50"></text></g><g><title>hyper::proto::h1::encode::ChunkSize::new (413,384 samples, 0.08%)</title><rect x="81.5051%" y="1109" width="0.0804%" height="15" fill="rgb(242,117,10)" fg:x="418974833" fg:w="413384"/><text x="81.7551%" y="1119.50"></text></g><g><title>core::fmt::Write::write_fmt (413,384 samples, 0.08%)</title><rect x="81.5051%" y="1093" width="0.0804%" height="15" fill="rgb(249,172,44)" fg:x="418974833" fg:w="413384"/><text x="81.7551%" y="1103.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (413,384 samples, 0.08%)</title><rect x="81.5051%" y="1077" width="0.0804%" height="15" fill="rgb(244,46,45)" fg:x="418974833" fg:w="413384"/><text x="81.7551%" y="1087.50"></text></g><g><title>http::extensions::Extensions::remove (1,988,585 samples, 0.39%)</title><rect x="81.6873%" y="1109" width="0.3868%" height="15" fill="rgb(206,43,17)" fg:x="419911504" fg:w="1988585"/><text x="81.9373%" y="1119.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server::encode_headers_with_lower_case::LowercaseWriter as hyper::proto::h1::role::HeaderNameWriter&gt;::write_full_header_line (845,624 samples, 0.16%)</title><rect x="82.4566%" y="1045" width="0.1645%" height="15" fill="rgb(239,218,39)" fg:x="423865917" fg:w="845624"/><text x="82.7066%" y="1055.50"></text></g><g><title>hyper::proto::h1::role::extend (845,624 samples, 0.16%)</title><rect x="82.4566%" y="1029" width="0.1645%" height="15" fill="rgb(208,169,54)" fg:x="423865917" fg:w="845624"/><text x="82.7066%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (845,624 samples, 0.16%)</title><rect x="82.4566%" y="1013" width="0.1645%" height="15" fill="rgb(247,25,42)" fg:x="423865917" fg:w="845624"/><text x="82.7066%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (845,624 samples, 0.16%)</title><rect x="82.4566%" y="997" width="0.1645%" height="15" fill="rgb(226,23,31)" fg:x="423865917" fg:w="845624"/><text x="82.7066%" y="1007.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server::encode_headers_with_lower_case::LowercaseWriter as hyper::proto::h1::role::HeaderNameWriter&gt;::write_header_name (2,415,230 samples, 0.47%)</title><rect x="82.6211%" y="1045" width="0.4698%" height="15" fill="rgb(247,16,28)" fg:x="424711541" fg:w="2415230"/><text x="82.8711%" y="1055.50"></text></g><g><title>http::header::name::HeaderName::as_str (2,415,230 samples, 0.47%)</title><rect x="82.6211%" y="1029" width="0.4698%" height="15" fill="rgb(231,147,38)" fg:x="424711541" fg:w="2415230"/><text x="82.8711%" y="1039.50"></text></g><g><title>http::header::name::StandardHeader::as_str (2,415,230 samples, 0.47%)</title><rect x="82.6211%" y="1013" width="0.4698%" height="15" fill="rgb(253,81,48)" fg:x="424711541" fg:w="2415230"/><text x="82.8711%" y="1023.50"></text></g><g><title>hyper::proto::h1::role::Server::encode_headers_with_lower_case (5,058,330 samples, 0.98%)</title><rect x="82.1817%" y="1077" width="0.9840%" height="15" fill="rgb(249,222,43)" fg:x="422453042" fg:w="5058330"/><text x="82.4317%" y="1087.50"></text></g><g><title>hyper::proto::h1::role::Server::encode_headers (5,058,330 samples, 0.98%)</title><rect x="82.1817%" y="1061" width="0.9840%" height="15" fill="rgb(221,3,27)" fg:x="422453042" fg:w="5058330"/><text x="82.4317%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::value::HeaderValue&gt; (384,601 samples, 0.07%)</title><rect x="83.0909%" y="1045" width="0.0748%" height="15" fill="rgb(228,180,5)" fg:x="427126771" fg:w="384601"/><text x="83.3409%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (384,601 samples, 0.07%)</title><rect x="83.0909%" y="1029" width="0.0748%" height="15" fill="rgb(227,131,42)" fg:x="427126771" fg:w="384601"/><text x="83.3409%" y="1039.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (384,601 samples, 0.07%)</title><rect x="83.0909%" y="1013" width="0.0748%" height="15" fill="rgb(212,3,39)" fg:x="427126771" fg:w="384601"/><text x="83.3409%" y="1023.50"></text></g><g><title>__free (384,601 samples, 0.07%)</title><rect x="83.0909%" y="997" width="0.0748%" height="15" fill="rgb(226,45,5)" fg:x="427126771" fg:w="384601"/><text x="83.3409%" y="1007.50"></text></g><g><title>_int_free (384,601 samples, 0.07%)</title><rect x="83.0909%" y="981" width="0.0748%" height="15" fill="rgb(215,167,45)" fg:x="427126771" fg:w="384601"/><text x="83.3409%" y="991.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (295,153,950 samples, 57.42%)</title><rect x="25.8656%" y="1285" width="57.4176%" height="15" fill="rgb(250,218,53)" fg:x="132961481" fg:w="295153950"/><text x="26.1156%" y="1295.50">&lt;&amp;mut F as core::future::future::Future&gt;::poll</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (295,153,950 samples, 57.42%)</title><rect x="25.8656%" y="1269" width="57.4176%" height="15" fill="rgb(207,140,0)" fg:x="132961481" fg:w="295153950"/><text x="26.1156%" y="1279.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (295,153,950 samples, 57.42%)</title><rect x="25.8656%" y="1253" width="57.4176%" height="15" fill="rgb(238,133,51)" fg:x="132961481" fg:w="295153950"/><text x="26.1156%" y="1263.50">&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;:..</text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (294,560,946 samples, 57.30%)</title><rect x="25.9810%" y="1237" width="57.3023%" height="15" fill="rgb(218,203,53)" fg:x="133554485" fg:w="294560946"/><text x="26.2310%" y="1247.50">&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (294,001,707 samples, 57.19%)</title><rect x="26.0898%" y="1221" width="57.1935%" height="15" fill="rgb(226,184,25)" fg:x="134113724" fg:w="294001707"/><text x="26.3398%" y="1231.50">&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (294,001,707 samples, 57.19%)</title><rect x="26.0898%" y="1205" width="57.1935%" height="15" fill="rgb(231,121,21)" fg:x="134113724" fg:w="294001707"/><text x="26.3398%" y="1215.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (292,925,805 samples, 56.98%)</title><rect x="26.2991%" y="1189" width="56.9842%" height="15" fill="rgb(251,14,34)" fg:x="135189626" fg:w="292925805"/><text x="26.5491%" y="1199.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (291,249,471 samples, 56.66%)</title><rect x="26.6252%" y="1173" width="56.6581%" height="15" fill="rgb(249,193,11)" fg:x="136865960" fg:w="291249471"/><text x="26.8752%" y="1183.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (166,961,580 samples, 32.48%)</title><rect x="50.8035%" y="1157" width="32.4798%" height="15" fill="rgb(220,172,37)" fg:x="261153851" fg:w="166961580"/><text x="51.0535%" y="1167.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::pol..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_head (8,727,214 samples, 1.70%)</title><rect x="81.5855%" y="1141" width="1.6977%" height="15" fill="rgb(231,229,43)" fg:x="419388217" fg:w="8727214"/><text x="81.8355%" y="1151.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (8,727,214 samples, 1.70%)</title><rect x="81.5855%" y="1125" width="1.6977%" height="15" fill="rgb(250,161,5)" fg:x="419388217" fg:w="8727214"/><text x="81.8355%" y="1135.50"></text></g><g><title>hyper::proto::h1::role::encode_headers (6,215,342 samples, 1.21%)</title><rect x="82.0742%" y="1109" width="1.2091%" height="15" fill="rgb(218,225,18)" fg:x="421900089" fg:w="6215342"/><text x="82.3242%" y="1119.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (6,215,342 samples, 1.21%)</title><rect x="82.0742%" y="1093" width="1.2091%" height="15" fill="rgb(245,45,42)" fg:x="421900089" fg:w="6215342"/><text x="82.3242%" y="1103.50"></text></g><g><title>hyper::proto::h1::role::extend (604,059 samples, 0.12%)</title><rect x="83.1657%" y="1077" width="0.1175%" height="15" fill="rgb(211,115,1)" fg:x="427511372" fg:w="604059"/><text x="83.4157%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (604,059 samples, 0.12%)</title><rect x="83.1657%" y="1061" width="0.1175%" height="15" fill="rgb(248,133,52)" fg:x="427511372" fg:w="604059"/><text x="83.4157%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (604,059 samples, 0.12%)</title><rect x="83.1657%" y="1045" width="0.1175%" height="15" fill="rgb(238,100,21)" fg:x="427511372" fg:w="604059"/><text x="83.4157%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (604,059 samples, 0.12%)</title><rect x="83.1657%" y="1029" width="0.1175%" height="15" fill="rgb(247,144,11)" fg:x="427511372" fg:w="604059"/><text x="83.4157%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (604,059 samples, 0.12%)</title><rect x="83.1657%" y="1013" width="0.1175%" height="15" fill="rgb(206,164,16)" fg:x="427511372" fg:w="604059"/><text x="83.4157%" y="1023.50"></text></g><g><title>axum_server::handle::Watcher::wait_graceful_shutdown::{{closure}} (1,100,498 samples, 0.21%)</title><rect x="83.2832%" y="1285" width="0.2141%" height="15" fill="rgb(222,34,3)" fg:x="428115431" fg:w="1100498"/><text x="83.5332%" y="1295.50"></text></g><g><title>axum_server::handle::Handle::wait_graceful_shutdown::{{closure}} (1,100,498 samples, 0.21%)</title><rect x="83.2832%" y="1269" width="0.2141%" height="15" fill="rgb(248,82,4)" fg:x="428115431" fg:w="1100498"/><text x="83.5332%" y="1279.50"></text></g><g><title>axum_server::notify_once::NotifyOnce::notified::{{closure}} (1,100,498 samples, 0.21%)</title><rect x="83.2832%" y="1253" width="0.2141%" height="15" fill="rgb(228,81,46)" fg:x="428115431" fg:w="1100498"/><text x="83.5332%" y="1263.50"></text></g><g><title>tokio::sync::notify::Notified::poll_notified (754,935 samples, 0.15%)</title><rect x="83.3505%" y="1237" width="0.1469%" height="15" fill="rgb(227,67,47)" fg:x="428460994" fg:w="754935"/><text x="83.6005%" y="1247.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (754,935 samples, 0.15%)</title><rect x="83.3505%" y="1221" width="0.1469%" height="15" fill="rgb(215,93,53)" fg:x="428460994" fg:w="754935"/><text x="83.6005%" y="1231.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (754,935 samples, 0.15%)</title><rect x="83.3505%" y="1205" width="0.1469%" height="15" fill="rgb(248,194,39)" fg:x="428460994" fg:w="754935"/><text x="83.6005%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (754,935 samples, 0.15%)</title><rect x="83.3505%" y="1189" width="0.1469%" height="15" fill="rgb(215,5,19)" fg:x="428460994" fg:w="754935"/><text x="83.6005%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (754,935 samples, 0.15%)</title><rect x="83.3505%" y="1173" width="0.1469%" height="15" fill="rgb(226,215,51)" fg:x="428460994" fg:w="754935"/><text x="83.6005%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (754,935 samples, 0.15%)</title><rect x="83.3505%" y="1157" width="0.1469%" height="15" fill="rgb(225,56,26)" fg:x="428460994" fg:w="754935"/><text x="83.6005%" y="1167.50"></text></g><g><title>__aarch64_cas1_acq (754,935 samples, 0.15%)</title><rect x="83.3505%" y="1141" width="0.1469%" height="15" fill="rgb(222,75,29)" fg:x="428460994" fg:w="754935"/><text x="83.6005%" y="1151.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (296,646,068 samples, 57.71%)</title><rect x="25.8656%" y="1317" width="57.7079%" height="15" fill="rgb(236,139,6)" fg:x="132961481" fg:w="296646068"/><text x="26.1156%" y="1327.50">&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>axum_server::server::Server&lt;A&gt;::serve::{{closure}}::{{closure}}::{{closure}}::{{closure}} (296,646,068 samples, 57.71%)</title><rect x="25.8656%" y="1301" width="57.7079%" height="15" fill="rgb(223,137,36)" fg:x="132961481" fg:w="296646068"/><text x="26.1156%" y="1311.50">axum_server::server::Server&lt;A&gt;::serve::{{closure}}::{{closure}}::{{closure}}::{{closure}}</text></g><g><title>axum_server::handle::Watcher::wait_shutdown::{{closure}} (391,620 samples, 0.08%)</title><rect x="83.4973%" y="1285" width="0.0762%" height="15" fill="rgb(226,99,2)" fg:x="429215929" fg:w="391620"/><text x="83.7473%" y="1295.50"></text></g><g><title>axum_server::handle::Handle::wait_shutdown::{{closure}} (391,620 samples, 0.08%)</title><rect x="83.4973%" y="1269" width="0.0762%" height="15" fill="rgb(206,133,23)" fg:x="429215929" fg:w="391620"/><text x="83.7473%" y="1279.50"></text></g><g><title>axum_server::server::Server&lt;A&gt;::serve::{{closure}}::{{closure}}::{{closure}} (320,502,957 samples, 62.35%)</title><rect x="21.3210%" y="1333" width="62.3489%" height="15" fill="rgb(243,173,15)" fg:x="109600102" fg:w="320502957"/><text x="21.5710%" y="1343.50">axum_server::server::Server&lt;A&gt;::serve::{{closure}}::{{closure}}::{{closure}}</text></g><g><title>core::ptr::drop_in_place&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;hyper_util::rt::tokio::TokioIo&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,hyper_util::service::glue::TowerToHyperService&lt;axum::routing::Router&gt;,hyper_util::rt::tokio::TokioExecutor&gt;&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1317" width="0.0964%" height="15" fill="rgb(228,69,28)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper_util::server::conn::auto::UpgradeableConnState&lt;hyper_util::rt::tokio::TokioIo&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,hyper_util::service::glue::TowerToHyperService&lt;axum::routing::Router&gt;,hyper_util::rt::tokio::TokioExecutor&gt;&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1301" width="0.0964%" height="15" fill="rgb(212,51,22)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::server::conn::http1::UpgradeableConnection&lt;hyper_util::common::rewind::Rewind&lt;hyper_util::rt::tokio::TokioIo&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt;,hyper_util::service::glue::TowerToHyperService&lt;axum::routing::Router&gt;&gt;&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1285" width="0.0964%" height="15" fill="rgb(227,113,0)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;hyper::server::conn::http1::Connection&lt;hyper_util::common::rewind::Rewind&lt;hyper_util::rt::tokio::TokioIo&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt;,hyper_util::service::glue::TowerToHyperService&lt;axum::routing::Router&gt;&gt;&gt;&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1269" width="0.0964%" height="15" fill="rgb(252,84,27)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::server::conn::http1::Connection&lt;hyper_util::common::rewind::Rewind&lt;hyper_util::rt::tokio::TokioIo&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt;,hyper_util::service::glue::TowerToHyperService&lt;axum::routing::Router&gt;&gt;&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1253" width="0.0964%" height="15" fill="rgb(223,145,39)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::dispatch::Dispatcher&lt;hyper::proto::h1::dispatch::Server&lt;hyper_util::service::glue::TowerToHyperService&lt;axum::routing::Router&gt;,hyper::body::incoming::Incoming&gt;,axum_core::body::Body,hyper_util::common::rewind::Rewind&lt;hyper_util::rt::tokio::TokioIo&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt;,hyper::proto::h1::role::Server&gt;&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1237" width="0.0964%" height="15" fill="rgb(239,219,30)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::conn::Conn&lt;hyper_util::common::rewind::Rewind&lt;hyper_util::rt::tokio::TokioIo&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt;,bytes::bytes::Bytes,hyper::proto::h1::role::Server&gt;&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1221" width="0.0964%" height="15" fill="rgb(224,196,39)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::io::Buffered&lt;hyper_util::common::rewind::Rewind&lt;hyper_util::rt::tokio::TokioIo&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt;,hyper::proto::h1::encode::EncodedBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1205" width="0.0964%" height="15" fill="rgb(205,35,43)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper_util::common::rewind::Rewind&lt;hyper_util::rt::tokio::TokioIo&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt;&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1189" width="0.0964%" height="15" fill="rgb(228,201,21)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper_util::rt::tokio::TokioIo&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1173" width="0.0964%" height="15" fill="rgb(237,118,16)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1157" width="0.0964%" height="15" fill="rgb(241,17,19)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::net::tcp::stream::TcpStream&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1141" width="0.0964%" height="15" fill="rgb(214,10,25)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::io::poll_evented::PollEvented&lt;mio::net::tcp::stream::TcpStream&gt;&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1125" width="0.0964%" height="15" fill="rgb(238,37,29)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1135.50"></text></g><g><title>&lt;tokio::io::poll_evented::PollEvented&lt;E&gt; as core::ops::drop::Drop&gt;::drop (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1109" width="0.0964%" height="15" fill="rgb(253,83,25)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;mio::net::tcp::stream::TcpStream&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1093" width="0.0964%" height="15" fill="rgb(234,192,12)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;mio::io_source::IoSource&lt;std::net::tcp::TcpStream&gt;&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1077" width="0.0964%" height="15" fill="rgb(241,216,45)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::net::tcp::TcpStream&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1061" width="0.0964%" height="15" fill="rgb(242,22,33)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::net::connection::socket::TcpStream&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1045" width="0.0964%" height="15" fill="rgb(231,105,49)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::net::connection::socket::unix::Socket&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1029" width="0.0964%" height="15" fill="rgb(218,204,15)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::fd::unix::FileDesc&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="1013" width="0.0964%" height="15" fill="rgb(235,138,41)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (495,510 samples, 0.10%)</title><rect x="83.5735%" y="997" width="0.0964%" height="15" fill="rgb(246,0,9)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="1007.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (495,510 samples, 0.10%)</title><rect x="83.5735%" y="981" width="0.0964%" height="15" fill="rgb(210,74,4)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="991.50"></text></g><g><title>__libc_close (495,510 samples, 0.10%)</title><rect x="83.5735%" y="965" width="0.0964%" height="15" fill="rgb(250,60,41)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="975.50"></text></g><g><title>el0t_64_sync_handler (495,510 samples, 0.10%)</title><rect x="83.5735%" y="949" width="0.0964%" height="15" fill="rgb(220,115,12)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="959.50"></text></g><g><title>el0_svc (495,510 samples, 0.10%)</title><rect x="83.5735%" y="933" width="0.0964%" height="15" fill="rgb(237,100,13)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="943.50"></text></g><g><title>do_notify_resume (495,510 samples, 0.10%)</title><rect x="83.5735%" y="917" width="0.0964%" height="15" fill="rgb(213,55,26)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="927.50"></text></g><g><title>task_work_run (495,510 samples, 0.10%)</title><rect x="83.5735%" y="901" width="0.0964%" height="15" fill="rgb(216,17,4)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="911.50"></text></g><g><title>____fput (495,510 samples, 0.10%)</title><rect x="83.5735%" y="885" width="0.0964%" height="15" fill="rgb(220,153,47)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="895.50"></text></g><g><title>__fput (495,510 samples, 0.10%)</title><rect x="83.5735%" y="869" width="0.0964%" height="15" fill="rgb(215,131,9)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="879.50"></text></g><g><title>dput (495,510 samples, 0.10%)</title><rect x="83.5735%" y="853" width="0.0964%" height="15" fill="rgb(233,46,42)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="863.50"></text></g><g><title>dentry_kill (495,510 samples, 0.10%)</title><rect x="83.5735%" y="837" width="0.0964%" height="15" fill="rgb(226,86,7)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="847.50"></text></g><g><title>__dentry_kill (495,510 samples, 0.10%)</title><rect x="83.5735%" y="821" width="0.0964%" height="15" fill="rgb(239,226,21)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="831.50"></text></g><g><title>dentry_unlink_inode (495,510 samples, 0.10%)</title><rect x="83.5735%" y="805" width="0.0964%" height="15" fill="rgb(244,137,22)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="815.50"></text></g><g><title>iput (495,510 samples, 0.10%)</title><rect x="83.5735%" y="789" width="0.0964%" height="15" fill="rgb(211,139,35)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="799.50"></text></g><g><title>iput_final (495,510 samples, 0.10%)</title><rect x="83.5735%" y="773" width="0.0964%" height="15" fill="rgb(214,62,50)" fg:x="429607549" fg:w="495510"/><text x="83.8235%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (378,674 samples, 0.07%)</title><rect x="83.6699%" y="1333" width="0.0737%" height="15" fill="rgb(212,113,44)" fg:x="430103059" fg:w="378674"/><text x="83.9199%" y="1343.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (378,674 samples, 0.07%)</title><rect x="83.6699%" y="1317" width="0.0737%" height="15" fill="rgb(226,150,43)" fg:x="430103059" fg:w="378674"/><text x="83.9199%" y="1327.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1317" width="0.0156%" height="15" fill="rgb(250,71,37)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1327.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1301" width="0.0156%" height="15" fill="rgb(219,76,19)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1311.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1285" width="0.0156%" height="15" fill="rgb(250,39,11)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1295.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1269" width="0.0156%" height="15" fill="rgb(230,64,31)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1279.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1253" width="0.0156%" height="15" fill="rgb(208,222,23)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1263.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1237" width="0.0156%" height="15" fill="rgb(227,125,18)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1247.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1221" width="0.0156%" height="15" fill="rgb(234,210,9)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1231.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1205" width="0.0156%" height="15" fill="rgb(217,127,24)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1215.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1189" width="0.0156%" height="15" fill="rgb(239,141,48)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1199.50"></text></g><g><title>std::sys::fs::unix::File::write (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1173" width="0.0156%" height="15" fill="rgb(227,109,8)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1183.50"></text></g><g><title>std::sys::fd::unix::FileDesc::write (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1157" width="0.0156%" height="15" fill="rgb(235,184,23)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1167.50"></text></g><g><title>__GI___write (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1141" width="0.0156%" height="15" fill="rgb(227,226,48)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1151.50"></text></g><g><title>el0t_64_sync_handler (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1125" width="0.0156%" height="15" fill="rgb(206,150,11)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1135.50"></text></g><g><title>el0_svc (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1109" width="0.0156%" height="15" fill="rgb(254,2,33)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1119.50"></text></g><g><title>do_el0_svc (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1093" width="0.0156%" height="15" fill="rgb(243,160,20)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1103.50"></text></g><g><title>el0_svc_common.constprop.0 (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1077" width="0.0156%" height="15" fill="rgb(218,208,30)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1087.50"></text></g><g><title>invoke_syscall (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1061" width="0.0156%" height="15" fill="rgb(224,120,49)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1071.50"></text></g><g><title>__arm64_sys_write (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1045" width="0.0156%" height="15" fill="rgb(246,12,2)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1055.50"></text></g><g><title>ksys_write (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1029" width="0.0156%" height="15" fill="rgb(236,117,3)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1039.50"></text></g><g><title>vfs_write (80,402 samples, 0.02%)</title><rect x="83.7436%" y="1013" width="0.0156%" height="15" fill="rgb(216,128,52)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1023.50"></text></g><g><title>eventfd_write (80,402 samples, 0.02%)</title><rect x="83.7436%" y="997" width="0.0156%" height="15" fill="rgb(246,145,19)" fg:x="430481733" fg:w="80402"/><text x="83.9936%" y="1007.50"></text></g><g><title>keipes_ai_mcp::METRICS::{{closure}}::{{closure}} (506,974 samples, 0.10%)</title><rect x="83.7436%" y="1333" width="0.0986%" height="15" fill="rgb(222,11,46)" fg:x="430481733" fg:w="506974"/><text x="83.9936%" y="1343.50"></text></g><g><title>keipes_ai_mcp::METRICS::{{closure}}::{{closure}}::{{closure}} (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1317" width="0.0830%" height="15" fill="rgb(245,82,36)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1327.50"></text></g><g><title>tracing_core::event::Event::dispatch (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1301" width="0.0830%" height="15" fill="rgb(250,73,51)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1311.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::event (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1285" width="0.0830%" height="15" fill="rgb(221,189,23)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1295.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1269" width="0.0830%" height="15" fill="rgb(210,33,7)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1279.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1253" width="0.0830%" height="15" fill="rgb(210,107,22)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1263.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1237" width="0.0830%" height="15" fill="rgb(222,116,37)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1221" width="0.0830%" height="15" fill="rgb(254,17,48)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1205" width="0.0830%" height="15" fill="rgb(224,36,32)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1215.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::{{closure}} (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1189" width="0.0830%" height="15" fill="rgb(232,90,46)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1199.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1173" width="0.0830%" height="15" fill="rgb(241,66,40)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1183.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1157" width="0.0830%" height="15" fill="rgb(249,184,29)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1167.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1141" width="0.0830%" height="15" fill="rgb(231,181,1)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1151.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1125" width="0.0830%" height="15" fill="rgb(224,94,2)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1135.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1109" width="0.0830%" height="15" fill="rgb(229,170,15)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1119.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1093" width="0.0830%" height="15" fill="rgb(240,127,35)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1103.50"></text></g><g><title>std::io::Write::write_all (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1077" width="0.0830%" height="15" fill="rgb(248,196,34)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1087.50"></text></g><g><title>&lt;std::sys::stdio::unix::Stdout as std::io::Write&gt;::write (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1061" width="0.0830%" height="15" fill="rgb(236,137,7)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1071.50"></text></g><g><title>std::sys::fd::unix::FileDesc::write (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1045" width="0.0830%" height="15" fill="rgb(235,127,16)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1055.50"></text></g><g><title>__GI___write (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1029" width="0.0830%" height="15" fill="rgb(250,192,54)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1039.50"></text></g><g><title>el0t_64_sync_handler (426,572 samples, 0.08%)</title><rect x="83.7592%" y="1013" width="0.0830%" height="15" fill="rgb(218,98,20)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1023.50"></text></g><g><title>el0_svc (426,572 samples, 0.08%)</title><rect x="83.7592%" y="997" width="0.0830%" height="15" fill="rgb(230,176,47)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="1007.50"></text></g><g><title>do_el0_svc (426,572 samples, 0.08%)</title><rect x="83.7592%" y="981" width="0.0830%" height="15" fill="rgb(244,2,33)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="991.50"></text></g><g><title>el0_svc_common.constprop.0 (426,572 samples, 0.08%)</title><rect x="83.7592%" y="965" width="0.0830%" height="15" fill="rgb(231,100,17)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="975.50"></text></g><g><title>invoke_syscall (426,572 samples, 0.08%)</title><rect x="83.7592%" y="949" width="0.0830%" height="15" fill="rgb(245,23,12)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="959.50"></text></g><g><title>__arm64_sys_write (426,572 samples, 0.08%)</title><rect x="83.7592%" y="933" width="0.0830%" height="15" fill="rgb(249,55,22)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="943.50"></text></g><g><title>ksys_write (426,572 samples, 0.08%)</title><rect x="83.7592%" y="917" width="0.0830%" height="15" fill="rgb(207,134,9)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="927.50"></text></g><g><title>vfs_write (426,572 samples, 0.08%)</title><rect x="83.7592%" y="901" width="0.0830%" height="15" fill="rgb(218,134,0)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="911.50"></text></g><g><title>sock_write_iter (426,572 samples, 0.08%)</title><rect x="83.7592%" y="885" width="0.0830%" height="15" fill="rgb(213,212,33)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="895.50"></text></g><g><title>__sock_sendmsg (426,572 samples, 0.08%)</title><rect x="83.7592%" y="869" width="0.0830%" height="15" fill="rgb(252,106,18)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="879.50"></text></g><g><title>unix_stream_sendmsg (426,572 samples, 0.08%)</title><rect x="83.7592%" y="853" width="0.0830%" height="15" fill="rgb(208,126,42)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="863.50"></text></g><g><title>sock_alloc_send_pskb (426,572 samples, 0.08%)</title><rect x="83.7592%" y="837" width="0.0830%" height="15" fill="rgb(246,175,29)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="847.50"></text></g><g><title>alloc_skb_with_frags (426,572 samples, 0.08%)</title><rect x="83.7592%" y="821" width="0.0830%" height="15" fill="rgb(215,13,50)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="831.50"></text></g><g><title>__alloc_skb (426,572 samples, 0.08%)</title><rect x="83.7592%" y="805" width="0.0830%" height="15" fill="rgb(216,172,15)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="815.50"></text></g><g><title>kmem_cache_alloc_node (426,572 samples, 0.08%)</title><rect x="83.7592%" y="789" width="0.0830%" height="15" fill="rgb(212,103,13)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="799.50"></text></g><g><title>obj_cgroup_charge (426,572 samples, 0.08%)</title><rect x="83.7592%" y="773" width="0.0830%" height="15" fill="rgb(231,171,36)" fg:x="430562135" fg:w="426572"/><text x="84.0092%" y="783.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (593,023 samples, 0.12%)</title><rect x="83.8422%" y="1237" width="0.1154%" height="15" fill="rgb(250,123,20)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="1247.50"></text></g><g><title>axum_server::server::Server&lt;A&gt;::serve::{{closure}}::{{closure}}::{{closure}} (593,023 samples, 0.12%)</title><rect x="83.8422%" y="1221" width="0.1154%" height="15" fill="rgb(212,53,50)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="1231.50"></text></g><g><title>axum_server::server::accept::{{closure}} (593,023 samples, 0.12%)</title><rect x="83.8422%" y="1205" width="0.1154%" height="15" fill="rgb(243,54,12)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="1215.50"></text></g><g><title>tokio::net::tcp::listener::TcpListener::accept::{{closure}} (593,023 samples, 0.12%)</title><rect x="83.8422%" y="1189" width="0.1154%" height="15" fill="rgb(234,101,34)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="1199.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (593,023 samples, 0.12%)</title><rect x="83.8422%" y="1173" width="0.1154%" height="15" fill="rgb(254,67,22)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="1183.50"></text></g><g><title>tokio::net::tcp::listener::TcpListener::accept::{{closure}}::{{closure}} (593,023 samples, 0.12%)</title><rect x="83.8422%" y="1157" width="0.1154%" height="15" fill="rgb(250,35,47)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="1167.50"></text></g><g><title>mio::net::tcp::listener::TcpListener::accept (593,023 samples, 0.12%)</title><rect x="83.8422%" y="1141" width="0.1154%" height="15" fill="rgb(226,126,38)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="1151.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (593,023 samples, 0.12%)</title><rect x="83.8422%" y="1125" width="0.1154%" height="15" fill="rgb(216,138,53)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="1135.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (593,023 samples, 0.12%)</title><rect x="83.8422%" y="1109" width="0.1154%" height="15" fill="rgb(246,199,43)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="1119.50"></text></g><g><title>mio::net::tcp::listener::TcpListener::accept::{{closure}} (593,023 samples, 0.12%)</title><rect x="83.8422%" y="1093" width="0.1154%" height="15" fill="rgb(232,125,11)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="1103.50"></text></g><g><title>mio::sys::unix::tcp::accept (593,023 samples, 0.12%)</title><rect x="83.8422%" y="1077" width="0.1154%" height="15" fill="rgb(218,219,45)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="1087.50"></text></g><g><title>accept4 (593,023 samples, 0.12%)</title><rect x="83.8422%" y="1061" width="0.1154%" height="15" fill="rgb(216,102,54)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="1071.50"></text></g><g><title>el0t_64_sync_handler (593,023 samples, 0.12%)</title><rect x="83.8422%" y="1045" width="0.1154%" height="15" fill="rgb(250,228,7)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="1055.50"></text></g><g><title>el0_svc (593,023 samples, 0.12%)</title><rect x="83.8422%" y="1029" width="0.1154%" height="15" fill="rgb(226,125,25)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="1039.50"></text></g><g><title>do_el0_svc (593,023 samples, 0.12%)</title><rect x="83.8422%" y="1013" width="0.1154%" height="15" fill="rgb(224,165,27)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="1023.50"></text></g><g><title>el0_svc_common.constprop.0 (593,023 samples, 0.12%)</title><rect x="83.8422%" y="997" width="0.1154%" height="15" fill="rgb(233,86,3)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="1007.50"></text></g><g><title>invoke_syscall (593,023 samples, 0.12%)</title><rect x="83.8422%" y="981" width="0.1154%" height="15" fill="rgb(228,116,20)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="991.50"></text></g><g><title>__arm64_sys_accept4 (593,023 samples, 0.12%)</title><rect x="83.8422%" y="965" width="0.1154%" height="15" fill="rgb(209,192,17)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="975.50"></text></g><g><title>__sys_accept4 (593,023 samples, 0.12%)</title><rect x="83.8422%" y="949" width="0.1154%" height="15" fill="rgb(224,88,34)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="959.50"></text></g><g><title>do_accept (593,023 samples, 0.12%)</title><rect x="83.8422%" y="933" width="0.1154%" height="15" fill="rgb(233,38,6)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="943.50"></text></g><g><title>sock_alloc (593,023 samples, 0.12%)</title><rect x="83.8422%" y="917" width="0.1154%" height="15" fill="rgb(212,59,30)" fg:x="430988707" fg:w="593023"/><text x="84.0922%" y="927.50"></text></g><g><title>keipes_ai_mcp::server::serve::{{closure}}::{{closure}} (1,004,200 samples, 0.20%)</title><rect x="83.8422%" y="1333" width="0.1954%" height="15" fill="rgb(213,80,3)" fg:x="430988707" fg:w="1004200"/><text x="84.0922%" y="1343.50"></text></g><g><title>keipes_ai_mcp::server::serve_https::{{closure}} (1,004,200 samples, 0.20%)</title><rect x="83.8422%" y="1317" width="0.1954%" height="15" fill="rgb(251,178,7)" fg:x="430988707" fg:w="1004200"/><text x="84.0922%" y="1327.50"></text></g><g><title>axum_server::server::Server&lt;A&gt;::serve::{{closure}} (1,004,200 samples, 0.20%)</title><rect x="83.8422%" y="1301" width="0.1954%" height="15" fill="rgb(213,154,26)" fg:x="430988707" fg:w="1004200"/><text x="84.0922%" y="1311.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,004,200 samples, 0.20%)</title><rect x="83.8422%" y="1285" width="0.1954%" height="15" fill="rgb(238,165,49)" fg:x="430988707" fg:w="1004200"/><text x="84.0922%" y="1295.50"></text></g><g><title>axum_server::server::Server&lt;A&gt;::serve::{{closure}}::{{closure}} (1,004,200 samples, 0.20%)</title><rect x="83.8422%" y="1269" width="0.1954%" height="15" fill="rgb(248,91,46)" fg:x="430988707" fg:w="1004200"/><text x="84.0922%" y="1279.50"></text></g><g><title>axum_server::server::Server&lt;A&gt;::serve::{{closure}}::{{closure}} (1,004,200 samples, 0.20%)</title><rect x="83.8422%" y="1253" width="0.1954%" height="15" fill="rgb(244,21,52)" fg:x="430988707" fg:w="1004200"/><text x="84.0922%" y="1263.50"></text></g><g><title>tokio::task::spawn::spawn (411,177 samples, 0.08%)</title><rect x="83.9576%" y="1237" width="0.0800%" height="15" fill="rgb(247,122,20)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="1247.50"></text></g><g><title>tokio::task::spawn::spawn_inner (411,177 samples, 0.08%)</title><rect x="83.9576%" y="1221" width="0.0800%" height="15" fill="rgb(218,27,9)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="1231.50"></text></g><g><title>tokio::runtime::context::current::with_current (411,177 samples, 0.08%)</title><rect x="83.9576%" y="1205" width="0.0800%" height="15" fill="rgb(246,7,6)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (411,177 samples, 0.08%)</title><rect x="83.9576%" y="1189" width="0.0800%" height="15" fill="rgb(227,135,54)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="1199.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (411,177 samples, 0.08%)</title><rect x="83.9576%" y="1173" width="0.0800%" height="15" fill="rgb(247,14,11)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (411,177 samples, 0.08%)</title><rect x="83.9576%" y="1157" width="0.0800%" height="15" fill="rgb(206,149,34)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="1167.50"></text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} (411,177 samples, 0.08%)</title><rect x="83.9576%" y="1141" width="0.0800%" height="15" fill="rgb(227,228,4)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (411,177 samples, 0.08%)</title><rect x="83.9576%" y="1125" width="0.0800%" height="15" fill="rgb(238,218,28)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Handle::spawn (411,177 samples, 0.08%)</title><rect x="83.9576%" y="1109" width="0.0800%" height="15" fill="rgb(252,86,40)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="1119.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (411,177 samples, 0.08%)</title><rect x="83.9576%" y="1093" width="0.0800%" height="15" fill="rgb(251,225,11)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="1103.50"></text></g><g><title>tokio::runtime::task::new_task (411,177 samples, 0.08%)</title><rect x="83.9576%" y="1077" width="0.0800%" height="15" fill="rgb(206,46,49)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="1087.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (411,177 samples, 0.08%)</title><rect x="83.9576%" y="1061" width="0.0800%" height="15" fill="rgb(245,128,24)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="1071.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (411,177 samples, 0.08%)</title><rect x="83.9576%" y="1045" width="0.0800%" height="15" fill="rgb(219,177,34)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (411,177 samples, 0.08%)</title><rect x="83.9576%" y="1029" width="0.0800%" height="15" fill="rgb(218,60,48)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (411,177 samples, 0.08%)</title><rect x="83.9576%" y="1013" width="0.0800%" height="15" fill="rgb(221,11,5)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (411,177 samples, 0.08%)</title><rect x="83.9576%" y="997" width="0.0800%" height="15" fill="rgb(220,148,13)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (411,177 samples, 0.08%)</title><rect x="83.9576%" y="981" width="0.0800%" height="15" fill="rgb(210,16,3)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="991.50"></text></g><g><title>alloc::alloc::alloc (411,177 samples, 0.08%)</title><rect x="83.9576%" y="965" width="0.0800%" height="15" fill="rgb(236,80,2)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="975.50"></text></g><g><title>__rustc::__rdl_alloc (411,177 samples, 0.08%)</title><rect x="83.9576%" y="949" width="0.0800%" height="15" fill="rgb(239,129,19)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="959.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (411,177 samples, 0.08%)</title><rect x="83.9576%" y="933" width="0.0800%" height="15" fill="rgb(220,106,35)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="943.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (411,177 samples, 0.08%)</title><rect x="83.9576%" y="917" width="0.0800%" height="15" fill="rgb(252,139,45)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="927.50"></text></g><g><title>__posix_memalign (411,177 samples, 0.08%)</title><rect x="83.9576%" y="901" width="0.0800%" height="15" fill="rgb(229,8,36)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="911.50"></text></g><g><title>_mid_memalign.constprop.0 (411,177 samples, 0.08%)</title><rect x="83.9576%" y="885" width="0.0800%" height="15" fill="rgb(230,126,33)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="895.50"></text></g><g><title>_int_memalign (411,177 samples, 0.08%)</title><rect x="83.9576%" y="869" width="0.0800%" height="15" fill="rgb(239,140,21)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="879.50"></text></g><g><title>_int_malloc (411,177 samples, 0.08%)</title><rect x="83.9576%" y="853" width="0.0800%" height="15" fill="rgb(254,104,9)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="863.50"></text></g><g><title>malloc_consolidate (411,177 samples, 0.08%)</title><rect x="83.9576%" y="837" width="0.0800%" height="15" fill="rgb(239,52,14)" fg:x="431581730" fg:w="411177"/><text x="84.2076%" y="847.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (407,105 samples, 0.08%)</title><rect x="84.9705%" y="1189" width="0.0792%" height="15" fill="rgb(208,227,44)" fg:x="436788818" fg:w="407105"/><text x="85.2205%" y="1199.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::reset (407,105 samples, 0.08%)</title><rect x="84.9705%" y="1173" width="0.0792%" height="15" fill="rgb(246,18,19)" fg:x="436788818" fg:w="407105"/><text x="85.2205%" y="1183.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (2,024,763 samples, 0.39%)</title><rect x="84.8924%" y="1221" width="0.3939%" height="15" fill="rgb(235,228,25)" fg:x="436387265" fg:w="2024763"/><text x="85.1424%" y="1231.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (1,623,210 samples, 0.32%)</title><rect x="84.9705%" y="1205" width="0.3158%" height="15" fill="rgb(240,156,20)" fg:x="436788818" fg:w="1623210"/><text x="85.2205%" y="1215.50"></text></g><g><title>tokio::task::coop::poll_proceed (1,216,105 samples, 0.24%)</title><rect x="85.0497%" y="1189" width="0.2366%" height="15" fill="rgb(224,8,20)" fg:x="437195923" fg:w="1216105"/><text x="85.2997%" y="1199.50"></text></g><g><title>tokio::runtime::context::budget (1,216,105 samples, 0.24%)</title><rect x="85.0497%" y="1173" width="0.2366%" height="15" fill="rgb(214,12,52)" fg:x="437195923" fg:w="1216105"/><text x="85.2997%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,216,105 samples, 0.24%)</title><rect x="85.0497%" y="1157" width="0.2366%" height="15" fill="rgb(211,220,47)" fg:x="437195923" fg:w="1216105"/><text x="85.2997%" y="1167.50"></text></g><g><title>core::ops::function::FnOnce::call_once (803,291 samples, 0.16%)</title><rect x="85.1300%" y="1141" width="0.1563%" height="15" fill="rgb(250,173,5)" fg:x="437608737" fg:w="803291"/><text x="85.3800%" y="1151.50"></text></g><g><title>tokio::runtime::context::CONTEXT::{{constant}}::{{closure}} (803,291 samples, 0.16%)</title><rect x="85.1300%" y="1125" width="0.1563%" height="15" fill="rgb(250,125,52)" fg:x="437608737" fg:w="803291"/><text x="85.3800%" y="1135.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (803,291 samples, 0.16%)</title><rect x="85.1300%" y="1109" width="0.1563%" height="15" fill="rgb(209,133,18)" fg:x="437608737" fg:w="803291"/><text x="85.3800%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (457,038 samples, 0.09%)</title><rect x="85.2863%" y="1189" width="0.0889%" height="15" fill="rgb(216,173,22)" fg:x="438412028" fg:w="457038"/><text x="85.5363%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (457,038 samples, 0.09%)</title><rect x="85.2863%" y="1173" width="0.0889%" height="15" fill="rgb(205,3,22)" fg:x="438412028" fg:w="457038"/><text x="85.5363%" y="1183.50"></text></g><g><title>__aarch64_cas8_acq_rel (457,038 samples, 0.09%)</title><rect x="85.2863%" y="1157" width="0.0889%" height="15" fill="rgb(248,22,20)" fg:x="438412028" fg:w="457038"/><text x="85.5363%" y="1167.50"></text></g><g><title>tokio::sync::notify::Notified::poll_notified (907,108 samples, 0.18%)</title><rect x="85.2863%" y="1205" width="0.1765%" height="15" fill="rgb(233,6,29)" fg:x="438412028" fg:w="907108"/><text x="85.5363%" y="1215.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (450,070 samples, 0.09%)</title><rect x="85.3752%" y="1189" width="0.0876%" height="15" fill="rgb(240,22,54)" fg:x="438869066" fg:w="450070"/><text x="85.6252%" y="1199.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (450,070 samples, 0.09%)</title><rect x="85.3752%" y="1173" width="0.0876%" height="15" fill="rgb(231,133,32)" fg:x="438869066" fg:w="450070"/><text x="85.6252%" y="1183.50"></text></g><g><title>&lt;tokio_util::sync::cancellation_token::WaitForCancellationFuture as core::future::future::Future&gt;::poll (1,344,356 samples, 0.26%)</title><rect x="85.2863%" y="1221" width="0.2615%" height="15" fill="rgb(248,193,4)" fg:x="438412028" fg:w="1344356"/><text x="85.5363%" y="1231.50"></text></g><g><title>tokio_util::sync::cancellation_token::CancellationToken::is_cancelled (437,248 samples, 0.09%)</title><rect x="85.4628%" y="1205" width="0.0851%" height="15" fill="rgb(211,178,46)" fg:x="439319136" fg:w="437248"/><text x="85.7128%" y="1215.50"></text></g><g><title>tokio_util::sync::cancellation_token::tree_node::is_cancelled (437,248 samples, 0.09%)</title><rect x="85.4628%" y="1189" width="0.0851%" height="15" fill="rgb(224,5,42)" fg:x="439319136" fg:w="437248"/><text x="85.7128%" y="1199.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (437,248 samples, 0.09%)</title><rect x="85.4628%" y="1173" width="0.0851%" height="15" fill="rgb(239,176,25)" fg:x="439319136" fg:w="437248"/><text x="85.7128%" y="1183.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (437,248 samples, 0.09%)</title><rect x="85.4628%" y="1157" width="0.0851%" height="15" fill="rgb(245,187,50)" fg:x="439319136" fg:w="437248"/><text x="85.7128%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (437,248 samples, 0.09%)</title><rect x="85.4628%" y="1141" width="0.0851%" height="15" fill="rgb(248,24,15)" fg:x="439319136" fg:w="437248"/><text x="85.7128%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (437,248 samples, 0.09%)</title><rect x="85.4628%" y="1125" width="0.0851%" height="15" fill="rgb(205,166,13)" fg:x="439319136" fg:w="437248"/><text x="85.7128%" y="1135.50"></text></g><g><title>__aarch64_cas4_acq (437,248 samples, 0.09%)</title><rect x="85.4628%" y="1109" width="0.0851%" height="15" fill="rgb(208,114,23)" fg:x="439319136" fg:w="437248"/><text x="85.7128%" y="1119.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (3,300,824 samples, 0.64%)</title><rect x="85.6600%" y="1109" width="0.6421%" height="15" fill="rgb(239,127,18)" fg:x="440332941" fg:w="3300824"/><text x="85.9100%" y="1119.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::try_advancing_head (1,477,839 samples, 0.29%)</title><rect x="86.0146%" y="1093" width="0.2875%" height="15" fill="rgb(219,154,28)" fg:x="442155926" fg:w="1477839"/><text x="86.2646%" y="1103.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3,709,926 samples, 0.72%)</title><rect x="85.6600%" y="1141" width="0.7217%" height="15" fill="rgb(225,157,23)" fg:x="440332941" fg:w="3709926"/><text x="85.9100%" y="1151.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::{{closure}} (3,709,926 samples, 0.72%)</title><rect x="85.6600%" y="1125" width="0.7217%" height="15" fill="rgb(219,8,6)" fg:x="440332941" fg:w="3709926"/><text x="85.9100%" y="1135.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (409,102 samples, 0.08%)</title><rect x="86.3021%" y="1109" width="0.0796%" height="15" fill="rgb(212,47,6)" fg:x="443633765" fg:w="409102"/><text x="86.5521%" y="1119.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (409,102 samples, 0.08%)</title><rect x="86.3021%" y="1093" width="0.0796%" height="15" fill="rgb(224,190,4)" fg:x="443633765" fg:w="409102"/><text x="86.5521%" y="1103.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::catch_unwind (409,102 samples, 0.08%)</title><rect x="86.3021%" y="1077" width="0.0796%" height="15" fill="rgb(239,183,29)" fg:x="443633765" fg:w="409102"/><text x="86.5521%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (409,102 samples, 0.08%)</title><rect x="86.3021%" y="1061" width="0.0796%" height="15" fill="rgb(213,57,7)" fg:x="443633765" fg:w="409102"/><text x="86.5521%" y="1071.50"></text></g><g><title>std::panicking::try (409,102 samples, 0.08%)</title><rect x="86.3021%" y="1045" width="0.0796%" height="15" fill="rgb(216,148,1)" fg:x="443633765" fg:w="409102"/><text x="86.5521%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (409,102 samples, 0.08%)</title><rect x="86.3021%" y="1029" width="0.0796%" height="15" fill="rgb(236,182,29)" fg:x="443633765" fg:w="409102"/><text x="86.5521%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (409,102 samples, 0.08%)</title><rect x="86.3021%" y="1013" width="0.0796%" height="15" fill="rgb(244,120,48)" fg:x="443633765" fg:w="409102"/><text x="86.5521%" y="1023.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (409,102 samples, 0.08%)</title><rect x="86.3021%" y="997" width="0.0796%" height="15" fill="rgb(206,71,34)" fg:x="443633765" fg:w="409102"/><text x="86.5521%" y="1007.50"></text></g><g><title>core::mem::drop (409,102 samples, 0.08%)</title><rect x="86.3021%" y="981" width="0.0796%" height="15" fill="rgb(242,32,6)" fg:x="443633765" fg:w="409102"/><text x="86.5521%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (409,102 samples, 0.08%)</title><rect x="86.3021%" y="965" width="0.0796%" height="15" fill="rgb(241,35,3)" fg:x="443633765" fg:w="409102"/><text x="86.5521%" y="975.50"></text></g><g><title>rmcp::transport::worker::WorkerContext&lt;W&gt;::recv_from_handler::{{closure}} (4,866,712 samples, 0.95%)</title><rect x="85.5478%" y="1221" width="0.9467%" height="15" fill="rgb(222,62,19)" fg:x="439756384" fg:w="4866712"/><text x="85.7978%" y="1231.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::{{closure}} (4,866,712 samples, 0.95%)</title><rect x="85.5478%" y="1205" width="0.9467%" height="15" fill="rgb(223,110,41)" fg:x="439756384" fg:w="4866712"/><text x="85.7978%" y="1215.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4,866,712 samples, 0.95%)</title><rect x="85.5478%" y="1189" width="0.9467%" height="15" fill="rgb(208,224,4)" fg:x="439756384" fg:w="4866712"/><text x="85.7978%" y="1199.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::{{closure}}::{{closure}} (4,866,712 samples, 0.95%)</title><rect x="85.5478%" y="1173" width="0.9467%" height="15" fill="rgb(241,137,19)" fg:x="439756384" fg:w="4866712"/><text x="85.7978%" y="1183.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (4,866,712 samples, 0.95%)</title><rect x="85.5478%" y="1157" width="0.9467%" height="15" fill="rgb(244,24,17)" fg:x="439756384" fg:w="4866712"/><text x="85.7978%" y="1167.50"></text></g><g><title>tokio::task::coop::poll_proceed (580,229 samples, 0.11%)</title><rect x="86.3817%" y="1141" width="0.1129%" height="15" fill="rgb(245,178,49)" fg:x="444042867" fg:w="580229"/><text x="86.6317%" y="1151.50"></text></g><g><title>tokio::runtime::context::budget (580,229 samples, 0.11%)</title><rect x="86.3817%" y="1125" width="0.1129%" height="15" fill="rgb(219,160,38)" fg:x="444042867" fg:w="580229"/><text x="86.6317%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (580,229 samples, 0.11%)</title><rect x="86.3817%" y="1109" width="0.1129%" height="15" fill="rgb(228,137,14)" fg:x="444042867" fg:w="580229"/><text x="86.6317%" y="1119.50"></text></g><g><title>tokio::macros::support::thread_rng_n (2,370,299 samples, 0.46%)</title><rect x="86.4946%" y="1221" width="0.4611%" height="15" fill="rgb(237,134,11)" fg:x="444623096" fg:w="2370299"/><text x="86.7446%" y="1231.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (917,510 samples, 0.18%)</title><rect x="86.7772%" y="1205" width="0.1785%" height="15" fill="rgb(211,126,44)" fg:x="446075885" fg:w="917510"/><text x="87.0272%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (917,510 samples, 0.18%)</title><rect x="86.7772%" y="1189" width="0.1785%" height="15" fill="rgb(226,171,33)" fg:x="446075885" fg:w="917510"/><text x="87.0272%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (917,510 samples, 0.18%)</title><rect x="86.7772%" y="1173" width="0.1785%" height="15" fill="rgb(253,99,13)" fg:x="446075885" fg:w="917510"/><text x="87.0272%" y="1183.50"></text></g><g><title>core::ops::function::FnOnce::call_once (917,510 samples, 0.18%)</title><rect x="86.7772%" y="1157" width="0.1785%" height="15" fill="rgb(244,48,7)" fg:x="446075885" fg:w="917510"/><text x="87.0272%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::task::coop::RestoreOnPending&gt; (612,597 samples, 0.12%)</title><rect x="87.1240%" y="1157" width="0.1192%" height="15" fill="rgb(244,217,54)" fg:x="447858585" fg:w="612597"/><text x="87.3740%" y="1167.50"></text></g><g><title>&lt;tokio::task::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (612,597 samples, 0.12%)</title><rect x="87.1240%" y="1141" width="0.1192%" height="15" fill="rgb(224,15,18)" fg:x="447858585" fg:w="612597"/><text x="87.3740%" y="1151.50"></text></g><g><title>tokio::runtime::context::budget (612,597 samples, 0.12%)</title><rect x="87.1240%" y="1125" width="0.1192%" height="15" fill="rgb(244,99,12)" fg:x="447858585" fg:w="612597"/><text x="87.3740%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (612,597 samples, 0.12%)</title><rect x="87.1240%" y="1109" width="0.1192%" height="15" fill="rgb(233,226,8)" fg:x="447858585" fg:w="612597"/><text x="87.3740%" y="1119.50"></text></g><g><title>tokio::runtime::context::budget::{{closure}} (612,597 samples, 0.12%)</title><rect x="87.1240%" y="1093" width="0.1192%" height="15" fill="rgb(229,211,3)" fg:x="447858585" fg:w="612597"/><text x="87.3740%" y="1103.50"></text></g><g><title>&lt;tokio::task::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop::{{closure}} (612,597 samples, 0.12%)</title><rect x="87.1240%" y="1077" width="0.1192%" height="15" fill="rgb(216,140,21)" fg:x="447858585" fg:w="612597"/><text x="87.3740%" y="1087.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (612,597 samples, 0.12%)</title><rect x="87.1240%" y="1061" width="0.1192%" height="15" fill="rgb(234,122,30)" fg:x="447858585" fg:w="612597"/><text x="87.3740%" y="1071.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (612,597 samples, 0.12%)</title><rect x="87.1240%" y="1045" width="0.1192%" height="15" fill="rgb(236,25,46)" fg:x="447858585" fg:w="612597"/><text x="87.3740%" y="1055.50"></text></g><g><title>core::mem::replace (612,597 samples, 0.12%)</title><rect x="87.1240%" y="1029" width="0.1192%" height="15" fill="rgb(217,52,54)" fg:x="447858585" fg:w="612597"/><text x="87.3740%" y="1039.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (747,509 samples, 0.15%)</title><rect x="87.2431%" y="1125" width="0.1454%" height="15" fill="rgb(222,29,26)" fg:x="448471182" fg:w="747509"/><text x="87.4931%" y="1135.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (747,509 samples, 0.15%)</title><rect x="87.2431%" y="1109" width="0.1454%" height="15" fill="rgb(216,177,29)" fg:x="448471182" fg:w="747509"/><text x="87.4931%" y="1119.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (747,509 samples, 0.15%)</title><rect x="87.2431%" y="1093" width="0.1454%" height="15" fill="rgb(247,136,51)" fg:x="448471182" fg:w="747509"/><text x="87.4931%" y="1103.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (747,509 samples, 0.15%)</title><rect x="87.2431%" y="1077" width="0.1454%" height="15" fill="rgb(231,47,47)" fg:x="448471182" fg:w="747509"/><text x="87.4931%" y="1087.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (747,509 samples, 0.15%)</title><rect x="87.2431%" y="1061" width="0.1454%" height="15" fill="rgb(211,192,36)" fg:x="448471182" fg:w="747509"/><text x="87.4931%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (747,509 samples, 0.15%)</title><rect x="87.2431%" y="1045" width="0.1454%" height="15" fill="rgb(229,156,32)" fg:x="448471182" fg:w="747509"/><text x="87.4931%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (747,509 samples, 0.15%)</title><rect x="87.2431%" y="1029" width="0.1454%" height="15" fill="rgb(248,213,20)" fg:x="448471182" fg:w="747509"/><text x="87.4931%" y="1039.50"></text></g><g><title>__aarch64_cas1_acq (747,509 samples, 0.15%)</title><rect x="87.2431%" y="1013" width="0.1454%" height="15" fill="rgb(217,64,7)" fg:x="448471182" fg:w="747509"/><text x="87.4931%" y="1023.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (15,434,853 samples, 3.00%)</title><rect x="84.6187%" y="1253" width="3.0026%" height="15" fill="rgb(232,142,8)" fg:x="434980334" fg:w="15434853"/><text x="84.8687%" y="1263.50">&lt;co..</text></g><g><title>&lt;rmcp::transport::streamable_http_server::session::local::LocalSessionWorker as rmcp::transport::worker::Worker&gt;::run::{{closure}}::{{closure}}::{{closure}} (14,581,803 samples, 2.84%)</title><rect x="84.7847%" y="1237" width="2.8367%" height="15" fill="rgb(224,92,44)" fg:x="435833384" fg:w="14581803"/><text x="85.0347%" y="1247.50">&lt;r..</text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::{{closure}} (3,421,792 samples, 0.67%)</title><rect x="86.9557%" y="1221" width="0.6657%" height="15" fill="rgb(214,169,17)" fg:x="446993395" fg:w="3421792"/><text x="87.2057%" y="1231.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (3,073,223 samples, 0.60%)</title><rect x="87.0235%" y="1205" width="0.5978%" height="15" fill="rgb(210,59,37)" fg:x="447341964" fg:w="3073223"/><text x="87.2735%" y="1215.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::{{closure}}::{{closure}} (3,073,223 samples, 0.60%)</title><rect x="87.0235%" y="1189" width="0.5978%" height="15" fill="rgb(214,116,48)" fg:x="447341964" fg:w="3073223"/><text x="87.2735%" y="1199.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (2,556,602 samples, 0.50%)</title><rect x="87.1240%" y="1173" width="0.4973%" height="15" fill="rgb(244,191,6)" fg:x="447858585" fg:w="2556602"/><text x="87.3740%" y="1183.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,944,005 samples, 0.38%)</title><rect x="87.2431%" y="1157" width="0.3782%" height="15" fill="rgb(241,50,52)" fg:x="448471182" fg:w="1944005"/><text x="87.4931%" y="1167.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::{{closure}} (1,944,005 samples, 0.38%)</title><rect x="87.2431%" y="1141" width="0.3782%" height="15" fill="rgb(236,75,39)" fg:x="448471182" fg:w="1944005"/><text x="87.4931%" y="1151.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (1,196,496 samples, 0.23%)</title><rect x="87.3886%" y="1125" width="0.2328%" height="15" fill="rgb(236,99,0)" fg:x="449218691" fg:w="1196496"/><text x="87.6386%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1,196,496 samples, 0.23%)</title><rect x="87.3886%" y="1109" width="0.2328%" height="15" fill="rgb(207,202,15)" fg:x="449218691" fg:w="1196496"/><text x="87.6386%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_add (1,196,496 samples, 0.23%)</title><rect x="87.3886%" y="1093" width="0.2328%" height="15" fill="rgb(233,207,14)" fg:x="449218691" fg:w="1196496"/><text x="87.6386%" y="1103.50"></text></g><g><title>__aarch64_ldadd8_rel (1,196,496 samples, 0.23%)</title><rect x="87.3886%" y="1077" width="0.2328%" height="15" fill="rgb(226,27,51)" fg:x="449218691" fg:w="1196496"/><text x="87.6386%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;(tokio::sync::mpsc::bounded::Receiver&lt;rmcp::transport::streamable_http_server::session::local::SessionEvent&gt;::recv::{{closure}},rmcp::transport::worker::WorkerContext&lt;rmcp::transport::streamable_http_server::session::local::LocalSessionWorker&gt;::recv_from_handler::{{closure}},tokio_util::sync::cancellation_token::WaitForCancellationFuture,tokio::time::sleep::Sleep)&gt; (355,757 samples, 0.07%)</title><rect x="87.6213%" y="1253" width="0.0692%" height="15" fill="rgb(206,104,42)" fg:x="450415187" fg:w="355757"/><text x="87.8713%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::sleep::Sleep&gt; (355,757 samples, 0.07%)</title><rect x="87.6213%" y="1237" width="0.0692%" height="15" fill="rgb(212,225,4)" fg:x="450415187" fg:w="355757"/><text x="87.8713%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::time::entry::TimerEntry&gt; (355,757 samples, 0.07%)</title><rect x="87.6213%" y="1221" width="0.0692%" height="15" fill="rgb(233,96,42)" fg:x="450415187" fg:w="355757"/><text x="87.8713%" y="1231.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::clear_entry (355,757 samples, 0.07%)</title><rect x="87.6213%" y="1205" width="0.0692%" height="15" fill="rgb(229,21,32)" fg:x="450415187" fg:w="355757"/><text x="87.8713%" y="1215.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::remove (355,757 samples, 0.07%)</title><rect x="87.6213%" y="1189" width="0.0692%" height="15" fill="rgb(226,216,24)" fg:x="450415187" fg:w="355757"/><text x="87.8713%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;rmcp::transport::worker::WorkerContext&lt;rmcp::transport::streamable_http_server::session::local::LocalSessionWorker&gt;&gt; (353,524 samples, 0.07%)</title><rect x="87.6905%" y="1253" width="0.0688%" height="15" fill="rgb(221,163,17)" fg:x="450770944" fg:w="353524"/><text x="87.9405%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::bounded::Sender&lt;rmcp::model::JsonRpcMessage&lt;rmcp::model::ClientRequest,rmcp::model::ClientResult,rmcp::model::ClientNotification&gt;&gt;&gt; (353,524 samples, 0.07%)</title><rect x="87.6905%" y="1237" width="0.0688%" height="15" fill="rgb(216,216,42)" fg:x="450770944" fg:w="353524"/><text x="87.9405%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::chan::Tx&lt;rmcp::model::JsonRpcMessage&lt;rmcp::model::ClientRequest,rmcp::model::ClientResult,rmcp::model::ClientNotification&gt;,tokio::sync::mpsc::bounded::Semaphore&gt;&gt; (353,524 samples, 0.07%)</title><rect x="87.6905%" y="1221" width="0.0688%" height="15" fill="rgb(240,118,7)" fg:x="450770944" fg:w="353524"/><text x="87.9405%" y="1231.50"></text></g><g><title>&lt;tokio::sync::mpsc::chan::Tx&lt;T,S&gt; as core::ops::drop::Drop&gt;::drop (353,524 samples, 0.07%)</title><rect x="87.6905%" y="1205" width="0.0688%" height="15" fill="rgb(221,67,37)" fg:x="450770944" fg:w="353524"/><text x="87.9405%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (353,524 samples, 0.07%)</title><rect x="87.6905%" y="1189" width="0.0688%" height="15" fill="rgb(241,32,44)" fg:x="450770944" fg:w="353524"/><text x="87.9405%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_sub (353,524 samples, 0.07%)</title><rect x="87.6905%" y="1173" width="0.0688%" height="15" fill="rgb(235,204,43)" fg:x="450770944" fg:w="353524"/><text x="87.9405%" y="1183.50"></text></g><g><title>__aarch64_ldadd8_acq_rel (353,524 samples, 0.07%)</title><rect x="87.6905%" y="1157" width="0.0688%" height="15" fill="rgb(213,116,10)" fg:x="450770944" fg:w="353524"/><text x="87.9405%" y="1167.50"></text></g><g><title>rmcp::transport::streamable_http_server::session::local::LocalSessionWorker::next_http_request_id (575,223 samples, 0.11%)</title><rect x="87.7593%" y="1237" width="0.1119%" height="15" fill="rgb(239,15,48)" fg:x="451124468" fg:w="575223"/><text x="88.0093%" y="1247.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (575,223 samples, 0.11%)</title><rect x="87.7593%" y="1221" width="0.1119%" height="15" fill="rgb(207,123,36)" fg:x="451124468" fg:w="575223"/><text x="88.0093%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (1,638,884 samples, 0.32%)</title><rect x="87.8712%" y="1205" width="0.3188%" height="15" fill="rgb(209,103,30)" fg:x="451699691" fg:w="1638884"/><text x="88.1212%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,638,884 samples, 0.32%)</title><rect x="87.8712%" y="1189" width="0.3188%" height="15" fill="rgb(238,100,19)" fg:x="451699691" fg:w="1638884"/><text x="88.1212%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1,638,884 samples, 0.32%)</title><rect x="87.8712%" y="1173" width="0.3188%" height="15" fill="rgb(244,30,14)" fg:x="451699691" fg:w="1638884"/><text x="88.1212%" y="1183.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (1,638,884 samples, 0.32%)</title><rect x="87.8712%" y="1157" width="0.3188%" height="15" fill="rgb(249,174,6)" fg:x="451699691" fg:w="1638884"/><text x="88.1212%" y="1167.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (1,638,884 samples, 0.32%)</title><rect x="87.8712%" y="1141" width="0.3188%" height="15" fill="rgb(235,213,41)" fg:x="451699691" fg:w="1638884"/><text x="88.1212%" y="1151.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2,455,196 samples, 0.48%)</title><rect x="87.8712%" y="1237" width="0.4776%" height="15" fill="rgb(213,118,6)" fg:x="451699691" fg:w="2455196"/><text x="88.1212%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,455,196 samples, 0.48%)</title><rect x="87.8712%" y="1221" width="0.4776%" height="15" fill="rgb(235,44,51)" fg:x="451699691" fg:w="2455196"/><text x="88.1212%" y="1231.50"></text></g><g><title>hashbrown::map::make_hash (816,312 samples, 0.16%)</title><rect x="88.1900%" y="1205" width="0.1588%" height="15" fill="rgb(217,9,53)" fg:x="453338575" fg:w="816312"/><text x="88.4400%" y="1215.50"></text></g><g><title>core::hash::BuildHasher::hash_one (816,312 samples, 0.16%)</title><rect x="88.1900%" y="1189" width="0.1588%" height="15" fill="rgb(237,172,34)" fg:x="453338575" fg:w="816312"/><text x="88.4400%" y="1199.50"></text></g><g><title>_int_free (433,838 samples, 0.08%)</title><rect x="88.3488%" y="1013" width="0.0844%" height="15" fill="rgb(206,206,11)" fg:x="454154887" fg:w="433838"/><text x="88.5988%" y="1023.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2,115,710 samples, 0.41%)</title><rect x="88.3488%" y="1205" width="0.4116%" height="15" fill="rgb(214,149,29)" fg:x="454154887" fg:w="2115710"/><text x="88.5988%" y="1215.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2,115,710 samples, 0.41%)</title><rect x="88.3488%" y="1189" width="0.4116%" height="15" fill="rgb(208,123,3)" fg:x="454154887" fg:w="2115710"/><text x="88.5988%" y="1199.50"></text></g><g><title>alloc::alloc::exchange_malloc (2,115,710 samples, 0.41%)</title><rect x="88.3488%" y="1173" width="0.4116%" height="15" fill="rgb(229,126,4)" fg:x="454154887" fg:w="2115710"/><text x="88.5988%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,115,710 samples, 0.41%)</title><rect x="88.3488%" y="1157" width="0.4116%" height="15" fill="rgb(222,92,36)" fg:x="454154887" fg:w="2115710"/><text x="88.5988%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,115,710 samples, 0.41%)</title><rect x="88.3488%" y="1141" width="0.4116%" height="15" fill="rgb(216,39,41)" fg:x="454154887" fg:w="2115710"/><text x="88.5988%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (2,115,710 samples, 0.41%)</title><rect x="88.3488%" y="1125" width="0.4116%" height="15" fill="rgb(253,127,28)" fg:x="454154887" fg:w="2115710"/><text x="88.5988%" y="1135.50"></text></g><g><title>__rustc::__rdl_alloc (2,115,710 samples, 0.41%)</title><rect x="88.3488%" y="1109" width="0.4116%" height="15" fill="rgb(249,152,51)" fg:x="454154887" fg:w="2115710"/><text x="88.5988%" y="1119.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,115,710 samples, 0.41%)</title><rect x="88.3488%" y="1093" width="0.4116%" height="15" fill="rgb(209,123,42)" fg:x="454154887" fg:w="2115710"/><text x="88.5988%" y="1103.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (2,115,710 samples, 0.41%)</title><rect x="88.3488%" y="1077" width="0.4116%" height="15" fill="rgb(241,118,22)" fg:x="454154887" fg:w="2115710"/><text x="88.5988%" y="1087.50"></text></g><g><title>__posix_memalign (2,115,710 samples, 0.41%)</title><rect x="88.3488%" y="1061" width="0.4116%" height="15" fill="rgb(208,25,7)" fg:x="454154887" fg:w="2115710"/><text x="88.5988%" y="1071.50"></text></g><g><title>_mid_memalign.constprop.0 (2,115,710 samples, 0.41%)</title><rect x="88.3488%" y="1045" width="0.4116%" height="15" fill="rgb(243,144,39)" fg:x="454154887" fg:w="2115710"/><text x="88.5988%" y="1055.50"></text></g><g><title>_int_memalign (2,115,710 samples, 0.41%)</title><rect x="88.3488%" y="1029" width="0.4116%" height="15" fill="rgb(250,50,5)" fg:x="454154887" fg:w="2115710"/><text x="88.5988%" y="1039.50"></text></g><g><title>_int_malloc (1,681,872 samples, 0.33%)</title><rect x="88.4332%" y="1013" width="0.3272%" height="15" fill="rgb(207,67,11)" fg:x="454588725" fg:w="1681872"/><text x="88.6832%" y="1023.50"></text></g><g><title>tokio::sync::mpsc::bounded::channel (4,334,608 samples, 0.84%)</title><rect x="88.3488%" y="1237" width="0.8432%" height="15" fill="rgb(245,204,40)" fg:x="454154887" fg:w="4334608"/><text x="88.5988%" y="1247.50"></text></g><g><title>tokio::sync::mpsc::chan::channel (4,334,608 samples, 0.84%)</title><rect x="88.3488%" y="1221" width="0.8432%" height="15" fill="rgb(238,228,24)" fg:x="454154887" fg:w="4334608"/><text x="88.5988%" y="1231.50"></text></g><g><title>tokio::sync::mpsc::list::channel (2,218,898 samples, 0.43%)</title><rect x="88.7604%" y="1205" width="0.4317%" height="15" fill="rgb(217,116,22)" fg:x="456270597" fg:w="2218898"/><text x="89.0104%" y="1215.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::new (2,218,898 samples, 0.43%)</title><rect x="88.7604%" y="1189" width="0.4317%" height="15" fill="rgb(234,98,12)" fg:x="456270597" fg:w="2218898"/><text x="89.0104%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (2,218,898 samples, 0.43%)</title><rect x="88.7604%" y="1173" width="0.4317%" height="15" fill="rgb(242,170,50)" fg:x="456270597" fg:w="2218898"/><text x="89.0104%" y="1183.50"></text></g><g><title>__GI___libc_malloc (2,218,898 samples, 0.43%)</title><rect x="88.7604%" y="1157" width="0.4317%" height="15" fill="rgb(235,7,5)" fg:x="456270597" fg:w="2218898"/><text x="89.0104%" y="1167.50"></text></g><g><title>_int_malloc (1,803,712 samples, 0.35%)</title><rect x="88.8412%" y="1141" width="0.3509%" height="15" fill="rgb(241,114,28)" fg:x="456685783" fg:w="1803712"/><text x="89.0912%" y="1151.50"></text></g><g><title>malloc_consolidate (854,101 samples, 0.17%)</title><rect x="89.0259%" y="1125" width="0.1662%" height="15" fill="rgb(246,112,42)" fg:x="457635394" fg:w="854101"/><text x="89.2759%" y="1135.50"></text></g><g><title>rmcp::transport::streamable_http_server::session::local::LocalSessionWorker::establish_request_wise_channel::{{closure}} (7,743,073 samples, 1.51%)</title><rect x="87.7593%" y="1253" width="1.5063%" height="15" fill="rgb(248,228,14)" fg:x="451124468" fg:w="7743073"/><text x="88.0093%" y="1263.50"></text></g><g><title>tracing_core::metadata::LevelFilter::current (378,046 samples, 0.07%)</title><rect x="89.1921%" y="1237" width="0.0735%" height="15" fill="rgb(208,133,18)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (378,046 samples, 0.07%)</title><rect x="89.1921%" y="1221" width="0.0735%" height="15" fill="rgb(207,35,49)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_load (378,046 samples, 0.07%)</title><rect x="89.1921%" y="1205" width="0.0735%" height="15" fill="rgb(205,68,36)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="1215.50"></text></g><g><title>el0t_64_irq_handler (378,046 samples, 0.07%)</title><rect x="89.1921%" y="1189" width="0.0735%" height="15" fill="rgb(245,62,40)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="1199.50"></text></g><g><title>__el0_irq_handler_common (378,046 samples, 0.07%)</title><rect x="89.1921%" y="1173" width="0.0735%" height="15" fill="rgb(228,27,24)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="1183.50"></text></g><g><title>el0_interrupt (378,046 samples, 0.07%)</title><rect x="89.1921%" y="1157" width="0.0735%" height="15" fill="rgb(253,19,12)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="1167.50"></text></g><g><title>irq_exit_rcu (378,046 samples, 0.07%)</title><rect x="89.1921%" y="1141" width="0.0735%" height="15" fill="rgb(232,28,20)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="1151.50"></text></g><g><title>__irq_exit_rcu (378,046 samples, 0.07%)</title><rect x="89.1921%" y="1125" width="0.0735%" height="15" fill="rgb(218,35,51)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="1135.50"></text></g><g><title>do_softirq_own_stack (378,046 samples, 0.07%)</title><rect x="89.1921%" y="1109" width="0.0735%" height="15" fill="rgb(212,90,40)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="1119.50"></text></g><g><title>call_on_irq_stack (378,046 samples, 0.07%)</title><rect x="89.1921%" y="1093" width="0.0735%" height="15" fill="rgb(220,172,12)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="1103.50"></text></g><g><title>____do_softirq (378,046 samples, 0.07%)</title><rect x="89.1921%" y="1077" width="0.0735%" height="15" fill="rgb(226,159,20)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="1087.50"></text></g><g><title>__softirqentry_text_start (378,046 samples, 0.07%)</title><rect x="89.1921%" y="1061" width="0.0735%" height="15" fill="rgb(234,205,16)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="1071.50"></text></g><g><title>handle_softirqs (378,046 samples, 0.07%)</title><rect x="89.1921%" y="1045" width="0.0735%" height="15" fill="rgb(207,9,39)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="1055.50"></text></g><g><title>rcu_core_si (378,046 samples, 0.07%)</title><rect x="89.1921%" y="1029" width="0.0735%" height="15" fill="rgb(249,143,15)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="1039.50"></text></g><g><title>rcu_core (378,046 samples, 0.07%)</title><rect x="89.1921%" y="1013" width="0.0735%" height="15" fill="rgb(253,133,29)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="1023.50"></text></g><g><title>rcu_do_batch (378,046 samples, 0.07%)</title><rect x="89.1921%" y="997" width="0.0735%" height="15" fill="rgb(221,187,0)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="1007.50"></text></g><g><title>file_free_rcu (378,046 samples, 0.07%)</title><rect x="89.1921%" y="981" width="0.0735%" height="15" fill="rgb(205,204,26)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="991.50"></text></g><g><title>kmem_cache_free (378,046 samples, 0.07%)</title><rect x="89.1921%" y="965" width="0.0735%" height="15" fill="rgb(224,68,54)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="975.50"></text></g><g><title>slab_free_freelist_hook.constprop.0 (378,046 samples, 0.07%)</title><rect x="89.1921%" y="949" width="0.0735%" height="15" fill="rgb(209,67,4)" fg:x="458489495" fg:w="378046"/><text x="89.4421%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,823,661 samples, 0.55%)</title><rect x="89.7522%" y="1029" width="0.5493%" height="15" fill="rgb(228,229,18)" fg:x="461368714" fg:w="2823661"/><text x="90.0022%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,823,661 samples, 0.55%)</title><rect x="89.7522%" y="1013" width="0.5493%" height="15" fill="rgb(231,89,13)" fg:x="461368714" fg:w="2823661"/><text x="90.0022%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (2,823,661 samples, 0.55%)</title><rect x="89.7522%" y="997" width="0.5493%" height="15" fill="rgb(210,182,18)" fg:x="461368714" fg:w="2823661"/><text x="90.0022%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2,823,661 samples, 0.55%)</title><rect x="89.7522%" y="981" width="0.5493%" height="15" fill="rgb(240,105,2)" fg:x="461368714" fg:w="2823661"/><text x="90.0022%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (852,557 samples, 0.17%)</title><rect x="90.1356%" y="965" width="0.1659%" height="15" fill="rgb(207,170,50)" fg:x="463339818" fg:w="852557"/><text x="90.3856%" y="975.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (852,557 samples, 0.17%)</title><rect x="90.1356%" y="949" width="0.1659%" height="15" fill="rgb(232,133,24)" fg:x="463339818" fg:w="852557"/><text x="90.3856%" y="959.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (3,726,272 samples, 0.72%)</title><rect x="89.6698%" y="1221" width="0.7249%" height="15" fill="rgb(235,166,27)" fg:x="460945410" fg:w="3726272"/><text x="89.9198%" y="1231.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (3,726,272 samples, 0.72%)</title><rect x="89.6698%" y="1205" width="0.7249%" height="15" fill="rgb(209,19,13)" fg:x="460945410" fg:w="3726272"/><text x="89.9198%" y="1215.50"></text></g><g><title>&lt;rmcp::transport::streamable_http_server::session::local::EventId as core::fmt::Display&gt;::fmt (3,726,272 samples, 0.72%)</title><rect x="89.6698%" y="1189" width="0.7249%" height="15" fill="rgb(226,79,39)" fg:x="460945410" fg:w="3726272"/><text x="89.9198%" y="1199.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3,726,272 samples, 0.72%)</title><rect x="89.6698%" y="1173" width="0.7249%" height="15" fill="rgb(222,163,10)" fg:x="460945410" fg:w="3726272"/><text x="89.9198%" y="1183.50"></text></g><g><title>core::fmt::write (3,726,272 samples, 0.72%)</title><rect x="89.6698%" y="1157" width="0.7249%" height="15" fill="rgb(214,44,19)" fg:x="460945410" fg:w="3726272"/><text x="89.9198%" y="1167.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3,302,968 samples, 0.64%)</title><rect x="89.7522%" y="1141" width="0.6425%" height="15" fill="rgb(210,217,13)" fg:x="461368714" fg:w="3302968"/><text x="90.0022%" y="1151.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (3,302,968 samples, 0.64%)</title><rect x="89.7522%" y="1125" width="0.6425%" height="15" fill="rgb(237,61,54)" fg:x="461368714" fg:w="3302968"/><text x="90.0022%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3,302,968 samples, 0.64%)</title><rect x="89.7522%" y="1109" width="0.6425%" height="15" fill="rgb(226,184,24)" fg:x="461368714" fg:w="3302968"/><text x="90.0022%" y="1119.50"></text></g><g><title>alloc::string::String::push_str (3,302,968 samples, 0.64%)</title><rect x="89.7522%" y="1093" width="0.6425%" height="15" fill="rgb(223,226,4)" fg:x="461368714" fg:w="3302968"/><text x="90.0022%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3,302,968 samples, 0.64%)</title><rect x="89.7522%" y="1077" width="0.6425%" height="15" fill="rgb(210,26,41)" fg:x="461368714" fg:w="3302968"/><text x="90.0022%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3,302,968 samples, 0.64%)</title><rect x="89.7522%" y="1061" width="0.6425%" height="15" fill="rgb(220,221,6)" fg:x="461368714" fg:w="3302968"/><text x="90.0022%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3,302,968 samples, 0.64%)</title><rect x="89.7522%" y="1045" width="0.6425%" height="15" fill="rgb(225,89,49)" fg:x="461368714" fg:w="3302968"/><text x="90.0022%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (479,307 samples, 0.09%)</title><rect x="90.3015%" y="1029" width="0.0932%" height="15" fill="rgb(218,70,45)" fg:x="464192375" fg:w="479307"/><text x="90.5515%" y="1039.50"></text></g><g><title>&lt;rmcp::transport::common::server_side_http::ServerSseMessage as core::clone::Clone&gt;::clone (513,114 samples, 0.10%)</title><rect x="90.3947%" y="1221" width="0.0998%" height="15" fill="rgb(238,166,21)" fg:x="464671682" fg:w="513114"/><text x="90.6447%" y="1231.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (513,114 samples, 0.10%)</title><rect x="90.3947%" y="1205" width="0.0998%" height="15" fill="rgb(224,141,44)" fg:x="464671682" fg:w="513114"/><text x="90.6447%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::bounded::Sender&lt;rmcp::transport::common::server_side_http::ServerSseMessage&gt;::send::{{closure}}&gt; (1,082,587 samples, 0.21%)</title><rect x="90.4945%" y="1221" width="0.2106%" height="15" fill="rgb(230,12,49)" fg:x="465184796" fg:w="1082587"/><text x="90.7445%" y="1231.50"></text></g><g><title>tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (431,229 samples, 0.08%)</title><rect x="90.7922%" y="1205" width="0.0839%" height="15" fill="rgb(212,174,12)" fg:x="466714982" fg:w="431229"/><text x="91.0422%" y="1215.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (431,229 samples, 0.08%)</title><rect x="90.7922%" y="1189" width="0.0839%" height="15" fill="rgb(246,67,9)" fg:x="466714982" fg:w="431229"/><text x="91.0422%" y="1199.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (431,229 samples, 0.08%)</title><rect x="90.7922%" y="1173" width="0.0839%" height="15" fill="rgb(239,35,23)" fg:x="466714982" fg:w="431229"/><text x="91.0422%" y="1183.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (431,229 samples, 0.08%)</title><rect x="90.7922%" y="1157" width="0.0839%" height="15" fill="rgb(211,167,0)" fg:x="466714982" fg:w="431229"/><text x="91.0422%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (431,229 samples, 0.08%)</title><rect x="90.7922%" y="1141" width="0.0839%" height="15" fill="rgb(225,119,45)" fg:x="466714982" fg:w="431229"/><text x="91.0422%" y="1151.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (431,229 samples, 0.08%)</title><rect x="90.7922%" y="1125" width="0.0839%" height="15" fill="rgb(210,162,6)" fg:x="466714982" fg:w="431229"/><text x="91.0422%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (431,229 samples, 0.08%)</title><rect x="90.7922%" y="1109" width="0.0839%" height="15" fill="rgb(208,118,35)" fg:x="466714982" fg:w="431229"/><text x="91.0422%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (431,229 samples, 0.08%)</title><rect x="90.7922%" y="1093" width="0.0839%" height="15" fill="rgb(239,4,53)" fg:x="466714982" fg:w="431229"/><text x="91.0422%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (431,229 samples, 0.08%)</title><rect x="90.7922%" y="1077" width="0.0839%" height="15" fill="rgb(213,130,21)" fg:x="466714982" fg:w="431229"/><text x="91.0422%" y="1087.50"></text></g><g><title>__aarch64_cas8_acq_rel (431,229 samples, 0.08%)</title><rect x="90.7922%" y="1061" width="0.0839%" height="15" fill="rgb(235,148,0)" fg:x="466714982" fg:w="431229"/><text x="91.0422%" y="1071.50"></text></g><g><title>rmcp::transport::streamable_http_server::session::local::CachedTx::send::{{closure}} (7,204,314 samples, 1.40%)</title><rect x="89.5803%" y="1237" width="1.4015%" height="15" fill="rgb(244,224,18)" fg:x="460485093" fg:w="7204314"/><text x="89.8303%" y="1247.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::{{closure}} (1,422,024 samples, 0.28%)</title><rect x="90.7051%" y="1221" width="0.2766%" height="15" fill="rgb(211,214,4)" fg:x="466267383" fg:w="1422024"/><text x="90.9551%" y="1231.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve::{{closure}} (543,196 samples, 0.11%)</title><rect x="90.8761%" y="1205" width="0.1057%" height="15" fill="rgb(206,119,25)" fg:x="467146211" fg:w="543196"/><text x="91.1261%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (606,565 samples, 0.12%)</title><rect x="91.0808%" y="1173" width="0.1180%" height="15" fill="rgb(243,93,47)" fg:x="468198441" fg:w="606565"/><text x="91.3308%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (606,565 samples, 0.12%)</title><rect x="91.0808%" y="1157" width="0.1180%" height="15" fill="rgb(224,194,6)" fg:x="468198441" fg:w="606565"/><text x="91.3308%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (606,565 samples, 0.12%)</title><rect x="91.0808%" y="1141" width="0.1180%" height="15" fill="rgb(243,229,6)" fg:x="468198441" fg:w="606565"/><text x="91.3308%" y="1151.50"></text></g><g><title>rmcp::transport::streamable_http_server::session::local::LocalSessionWorker::resolve_outbound_channel (1,582,540 samples, 0.31%)</title><rect x="90.9818%" y="1237" width="0.3079%" height="15" fill="rgb(207,23,50)" fg:x="467689407" fg:w="1582540"/><text x="91.2318%" y="1247.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,073,506 samples, 0.21%)</title><rect x="91.0808%" y="1221" width="0.2088%" height="15" fill="rgb(253,192,32)" fg:x="468198441" fg:w="1073506"/><text x="91.3308%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,073,506 samples, 0.21%)</title><rect x="91.0808%" y="1205" width="0.2088%" height="15" fill="rgb(213,21,6)" fg:x="468198441" fg:w="1073506"/><text x="91.3308%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,073,506 samples, 0.21%)</title><rect x="91.0808%" y="1189" width="0.2088%" height="15" fill="rgb(243,151,13)" fg:x="468198441" fg:w="1073506"/><text x="91.3308%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::is_empty (466,941 samples, 0.09%)</title><rect x="91.1988%" y="1173" width="0.0908%" height="15" fill="rgb(233,165,41)" fg:x="468805006" fg:w="466941"/><text x="91.4488%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::len (466,941 samples, 0.09%)</title><rect x="91.1988%" y="1157" width="0.0908%" height="15" fill="rgb(246,176,45)" fg:x="468805006" fg:w="466941"/><text x="91.4488%" y="1167.50"></text></g><g><title>rmcp::transport::streamable_http_server::session::local::LocalSessionWorker::handle_server_message::{{closure}} (10,810,473 samples, 2.10%)</title><rect x="89.2656%" y="1253" width="2.1030%" height="15" fill="rgb(217,170,52)" fg:x="458867541" fg:w="10810473"/><text x="89.5156%" y="1263.50">r..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (406,067 samples, 0.08%)</title><rect x="91.2896%" y="1237" width="0.0790%" height="15" fill="rgb(214,203,54)" fg:x="469271947" fg:w="406067"/><text x="91.5396%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (406,067 samples, 0.08%)</title><rect x="91.2896%" y="1221" width="0.0790%" height="15" fill="rgb(248,215,49)" fg:x="469271947" fg:w="406067"/><text x="91.5396%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (406,067 samples, 0.08%)</title><rect x="91.2896%" y="1205" width="0.0790%" height="15" fill="rgb(208,46,10)" fg:x="469271947" fg:w="406067"/><text x="91.5396%" y="1215.50"></text></g><g><title>hashbrown::map::make_hash (406,067 samples, 0.08%)</title><rect x="91.2896%" y="1189" width="0.0790%" height="15" fill="rgb(254,5,31)" fg:x="469271947" fg:w="406067"/><text x="91.5396%" y="1199.50"></text></g><g><title>core::hash::BuildHasher::hash_one (406,067 samples, 0.08%)</title><rect x="91.2896%" y="1173" width="0.0790%" height="15" fill="rgb(222,104,33)" fg:x="469271947" fg:w="406067"/><text x="91.5396%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (406,067 samples, 0.08%)</title><rect x="91.2896%" y="1157" width="0.0790%" height="15" fill="rgb(248,49,16)" fg:x="469271947" fg:w="406067"/><text x="91.5396%" y="1167.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (406,067 samples, 0.08%)</title><rect x="91.2896%" y="1141" width="0.0790%" height="15" fill="rgb(232,198,41)" fg:x="469271947" fg:w="406067"/><text x="91.5396%" y="1151.50"></text></g><g><title>core::hash::Hasher::write_u64 (406,067 samples, 0.08%)</title><rect x="91.2896%" y="1125" width="0.0790%" height="15" fill="rgb(214,125,3)" fg:x="469271947" fg:w="406067"/><text x="91.5396%" y="1135.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (406,067 samples, 0.08%)</title><rect x="91.2896%" y="1109" width="0.0790%" height="15" fill="rgb(229,220,28)" fg:x="469271947" fg:w="406067"/><text x="91.5396%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (406,067 samples, 0.08%)</title><rect x="91.2896%" y="1093" width="0.0790%" height="15" fill="rgb(222,64,37)" fg:x="469271947" fg:w="406067"/><text x="91.5396%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (406,067 samples, 0.08%)</title><rect x="91.2896%" y="1077" width="0.0790%" height="15" fill="rgb(249,184,13)" fg:x="469271947" fg:w="406067"/><text x="91.5396%" y="1087.50"></text></g><g><title>&lt;rmcp::model::ClientRequest as rmcp::model::meta::GetExtensions&gt;::extensions (598,007 samples, 0.12%)</title><rect x="91.3686%" y="1221" width="0.1163%" height="15" fill="rgb(252,176,6)" fg:x="469678014" fg:w="598007"/><text x="91.6186%" y="1231.50"></text></g><g><title>&lt;rmcp::model::ClientRequest as rmcp::model::meta::GetMeta&gt;::get_meta (985,504 samples, 0.19%)</title><rect x="91.3686%" y="1237" width="0.1917%" height="15" fill="rgb(228,153,7)" fg:x="469678014" fg:w="985504"/><text x="91.6186%" y="1247.50"></text></g><g><title>rmcp::model::extension::Extensions::get (387,497 samples, 0.08%)</title><rect x="91.4849%" y="1221" width="0.0754%" height="15" fill="rgb(242,193,5)" fg:x="470276021" fg:w="387497"/><text x="91.7349%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (387,497 samples, 0.08%)</title><rect x="91.4849%" y="1205" width="0.0754%" height="15" fill="rgb(232,140,9)" fg:x="470276021" fg:w="387497"/><text x="91.7349%" y="1215.50"></text></g><g><title>rmcp::model::extension::Extensions::get::{{closure}} (387,497 samples, 0.08%)</title><rect x="91.4849%" y="1189" width="0.0754%" height="15" fill="rgb(213,222,16)" fg:x="470276021" fg:w="387497"/><text x="91.7349%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (387,497 samples, 0.08%)</title><rect x="91.4849%" y="1173" width="0.0754%" height="15" fill="rgb(222,75,50)" fg:x="470276021" fg:w="387497"/><text x="91.7349%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (387,497 samples, 0.08%)</title><rect x="91.4849%" y="1157" width="0.0754%" height="15" fill="rgb(205,180,2)" fg:x="470276021" fg:w="387497"/><text x="91.7349%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (387,497 samples, 0.08%)</title><rect x="91.4849%" y="1141" width="0.0754%" height="15" fill="rgb(216,34,7)" fg:x="470276021" fg:w="387497"/><text x="91.7349%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (387,497 samples, 0.08%)</title><rect x="91.4849%" y="1125" width="0.0754%" height="15" fill="rgb(253,16,32)" fg:x="470276021" fg:w="387497"/><text x="91.7349%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (387,497 samples, 0.08%)</title><rect x="91.4849%" y="1109" width="0.0754%" height="15" fill="rgb(208,97,28)" fg:x="470276021" fg:w="387497"/><text x="91.7349%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (387,497 samples, 0.08%)</title><rect x="91.4849%" y="1093" width="0.0754%" height="15" fill="rgb(225,92,11)" fg:x="470276021" fg:w="387497"/><text x="91.7349%" y="1103.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (387,497 samples, 0.08%)</title><rect x="91.4849%" y="1077" width="0.0754%" height="15" fill="rgb(243,38,12)" fg:x="470276021" fg:w="387497"/><text x="91.7349%" y="1087.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (387,497 samples, 0.08%)</title><rect x="91.4849%" y="1061" width="0.0754%" height="15" fill="rgb(208,139,16)" fg:x="470276021" fg:w="387497"/><text x="91.7349%" y="1071.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (387,497 samples, 0.08%)</title><rect x="91.4849%" y="1045" width="0.0754%" height="15" fill="rgb(227,24,9)" fg:x="470276021" fg:w="387497"/><text x="91.7349%" y="1055.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u64&gt;::trailing_zeros (387,497 samples, 0.08%)</title><rect x="91.4849%" y="1029" width="0.0754%" height="15" fill="rgb(206,62,11)" fg:x="470276021" fg:w="387497"/><text x="91.7349%" y="1039.50"></text></g><g><title>&lt;rmcp::transport::streamable_http_server::session::local::ResourceKey as core::clone::Clone&gt;::clone (404,826 samples, 0.08%)</title><rect x="91.5603%" y="1221" width="0.0788%" height="15" fill="rgb(228,134,27)" fg:x="470663518" fg:w="404826"/><text x="91.8103%" y="1231.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (622,899 samples, 0.12%)</title><rect x="91.6391%" y="1221" width="0.1212%" height="15" fill="rgb(205,55,33)" fg:x="471068344" fg:w="622899"/><text x="91.8891%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (622,899 samples, 0.12%)</title><rect x="91.6391%" y="1205" width="0.1212%" height="15" fill="rgb(243,75,43)" fg:x="471068344" fg:w="622899"/><text x="91.8891%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (622,899 samples, 0.12%)</title><rect x="91.6391%" y="1189" width="0.1212%" height="15" fill="rgb(223,27,42)" fg:x="471068344" fg:w="622899"/><text x="91.8891%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (622,899 samples, 0.12%)</title><rect x="91.6391%" y="1173" width="0.1212%" height="15" fill="rgb(232,189,33)" fg:x="471068344" fg:w="622899"/><text x="91.8891%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (622,899 samples, 0.12%)</title><rect x="91.6391%" y="1157" width="0.1212%" height="15" fill="rgb(210,9,39)" fg:x="471068344" fg:w="622899"/><text x="91.8891%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (622,899 samples, 0.12%)</title><rect x="91.6391%" y="1141" width="0.1212%" height="15" fill="rgb(242,85,26)" fg:x="471068344" fg:w="622899"/><text x="91.8891%" y="1151.50"></text></g><g><title>core::intrinsics::likely (622,899 samples, 0.12%)</title><rect x="91.6391%" y="1125" width="0.1212%" height="15" fill="rgb(248,44,4)" fg:x="471068344" fg:w="622899"/><text x="91.8891%" y="1135.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (571,085 samples, 0.11%)</title><rect x="91.7603%" y="1221" width="0.1111%" height="15" fill="rgb(250,96,46)" fg:x="471691243" fg:w="571085"/><text x="92.0103%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (571,085 samples, 0.11%)</title><rect x="91.7603%" y="1205" width="0.1111%" height="15" fill="rgb(229,116,26)" fg:x="471691243" fg:w="571085"/><text x="92.0103%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (571,085 samples, 0.11%)</title><rect x="91.7603%" y="1189" width="0.1111%" height="15" fill="rgb(246,94,34)" fg:x="471691243" fg:w="571085"/><text x="92.0103%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (571,085 samples, 0.11%)</title><rect x="91.7603%" y="1173" width="0.1111%" height="15" fill="rgb(251,73,21)" fg:x="471691243" fg:w="571085"/><text x="92.0103%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (571,085 samples, 0.11%)</title><rect x="91.7603%" y="1157" width="0.1111%" height="15" fill="rgb(254,121,25)" fg:x="471691243" fg:w="571085"/><text x="92.0103%" y="1167.50"></text></g><g><title>el0t_64_irq_handler (571,085 samples, 0.11%)</title><rect x="91.7603%" y="1141" width="0.1111%" height="15" fill="rgb(215,161,49)" fg:x="471691243" fg:w="571085"/><text x="92.0103%" y="1151.50"></text></g><g><title>__el0_irq_handler_common (571,085 samples, 0.11%)</title><rect x="91.7603%" y="1125" width="0.1111%" height="15" fill="rgb(221,43,13)" fg:x="471691243" fg:w="571085"/><text x="92.0103%" y="1135.50"></text></g><g><title>el0_interrupt (571,085 samples, 0.11%)</title><rect x="91.7603%" y="1109" width="0.1111%" height="15" fill="rgb(249,5,37)" fg:x="471691243" fg:w="571085"/><text x="92.0103%" y="1119.50"></text></g><g><title>irq_exit_rcu (571,085 samples, 0.11%)</title><rect x="91.7603%" y="1093" width="0.1111%" height="15" fill="rgb(226,25,44)" fg:x="471691243" fg:w="571085"/><text x="92.0103%" y="1103.50"></text></g><g><title>__irq_exit_rcu (571,085 samples, 0.11%)</title><rect x="91.7603%" y="1077" width="0.1111%" height="15" fill="rgb(238,189,16)" fg:x="471691243" fg:w="571085"/><text x="92.0103%" y="1087.50"></text></g><g><title>do_softirq_own_stack (571,085 samples, 0.11%)</title><rect x="91.7603%" y="1061" width="0.1111%" height="15" fill="rgb(251,186,8)" fg:x="471691243" fg:w="571085"/><text x="92.0103%" y="1071.50"></text></g><g><title>call_on_irq_stack (571,085 samples, 0.11%)</title><rect x="91.7603%" y="1045" width="0.1111%" height="15" fill="rgb(254,34,31)" fg:x="471691243" fg:w="571085"/><text x="92.0103%" y="1055.50"></text></g><g><title>____do_softirq (571,085 samples, 0.11%)</title><rect x="91.7603%" y="1029" width="0.1111%" height="15" fill="rgb(225,215,27)" fg:x="471691243" fg:w="571085"/><text x="92.0103%" y="1039.50"></text></g><g><title>__softirqentry_text_start (571,085 samples, 0.11%)</title><rect x="91.7603%" y="1013" width="0.1111%" height="15" fill="rgb(221,192,48)" fg:x="471691243" fg:w="571085"/><text x="92.0103%" y="1023.50"></text></g><g><title>handle_softirqs (571,085 samples, 0.11%)</title><rect x="91.7603%" y="997" width="0.1111%" height="15" fill="rgb(219,137,20)" fg:x="471691243" fg:w="571085"/><text x="92.0103%" y="1007.50"></text></g><g><title>rmcp::transport::streamable_http_server::session::local::LocalSessionWorker::register_request (3,069,123 samples, 0.60%)</title><rect x="91.3686%" y="1253" width="0.5971%" height="15" fill="rgb(219,84,11)" fg:x="469678014" fg:w="3069123"/><text x="91.6186%" y="1263.50"></text></g><g><title>rmcp::transport::streamable_http_server::session::local::LocalSessionWorker::register_resource (2,083,619 samples, 0.41%)</title><rect x="91.5603%" y="1237" width="0.4053%" height="15" fill="rgb(224,10,23)" fg:x="470663518" fg:w="2083619"/><text x="91.8103%" y="1247.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (484,809 samples, 0.09%)</title><rect x="91.8713%" y="1221" width="0.0943%" height="15" fill="rgb(248,22,39)" fg:x="472262328" fg:w="484809"/><text x="92.1213%" y="1231.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (484,809 samples, 0.09%)</title><rect x="91.8713%" y="1205" width="0.0943%" height="15" fill="rgb(212,154,20)" fg:x="472262328" fg:w="484809"/><text x="92.1213%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (484,809 samples, 0.09%)</title><rect x="91.8713%" y="1189" width="0.0943%" height="15" fill="rgb(236,199,50)" fg:x="472262328" fg:w="484809"/><text x="92.1213%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (484,809 samples, 0.09%)</title><rect x="91.8713%" y="1173" width="0.0943%" height="15" fill="rgb(211,9,17)" fg:x="472262328" fg:w="484809"/><text x="92.1213%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (484,809 samples, 0.09%)</title><rect x="91.8713%" y="1157" width="0.0943%" height="15" fill="rgb(243,216,36)" fg:x="472262328" fg:w="484809"/><text x="92.1213%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (484,809 samples, 0.09%)</title><rect x="91.8713%" y="1141" width="0.0943%" height="15" fill="rgb(250,2,10)" fg:x="472262328" fg:w="484809"/><text x="92.1213%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (484,809 samples, 0.09%)</title><rect x="91.8713%" y="1125" width="0.0943%" height="15" fill="rgb(226,50,48)" fg:x="472262328" fg:w="484809"/><text x="92.1213%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (484,809 samples, 0.09%)</title><rect x="91.8713%" y="1109" width="0.0943%" height="15" fill="rgb(243,81,16)" fg:x="472262328" fg:w="484809"/><text x="92.1213%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (484,809 samples, 0.09%)</title><rect x="91.8713%" y="1093" width="0.0943%" height="15" fill="rgb(250,14,2)" fg:x="472262328" fg:w="484809"/><text x="92.1213%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (484,809 samples, 0.09%)</title><rect x="91.8713%" y="1077" width="0.0943%" height="15" fill="rgb(233,135,29)" fg:x="472262328" fg:w="484809"/><text x="92.1213%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (484,809 samples, 0.09%)</title><rect x="91.8713%" y="1061" width="0.0943%" height="15" fill="rgb(224,64,43)" fg:x="472262328" fg:w="484809"/><text x="92.1213%" y="1071.50"></text></g><g><title>rmcp::transport::streamable_http_server::session::local::LocalSessionWorker::resume::{{closure}} (739,382 samples, 0.14%)</title><rect x="91.9657%" y="1253" width="0.1438%" height="15" fill="rgb(238,84,13)" fg:x="472747137" fg:w="739382"/><text x="92.2157%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::bounded::Sender&lt;rmcp::transport::common::server_side_http::ServerSseMessage&gt;&gt; (739,382 samples, 0.14%)</title><rect x="91.9657%" y="1237" width="0.1438%" height="15" fill="rgb(253,48,26)" fg:x="472747137" fg:w="739382"/><text x="92.2157%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::chan::Tx&lt;rmcp::transport::common::server_side_http::ServerSseMessage,tokio::sync::mpsc::bounded::Semaphore&gt;&gt; (739,382 samples, 0.14%)</title><rect x="91.9657%" y="1221" width="0.1438%" height="15" fill="rgb(205,223,31)" fg:x="472747137" fg:w="739382"/><text x="92.2157%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::mpsc::chan::Chan&lt;rmcp::transport::common::server_side_http::ServerSseMessage,tokio::sync::mpsc::bounded::Semaphore&gt;&gt;&gt; (739,382 samples, 0.14%)</title><rect x="91.9657%" y="1205" width="0.1438%" height="15" fill="rgb(221,41,32)" fg:x="472747137" fg:w="739382"/><text x="92.2157%" y="1215.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (739,382 samples, 0.14%)</title><rect x="91.9657%" y="1189" width="0.1438%" height="15" fill="rgb(213,158,31)" fg:x="472747137" fg:w="739382"/><text x="92.2157%" y="1199.50"></text></g><g><title>__free (739,382 samples, 0.14%)</title><rect x="91.9657%" y="1173" width="0.1438%" height="15" fill="rgb(245,126,43)" fg:x="472747137" fg:w="739382"/><text x="92.2157%" y="1183.50"></text></g><g><title>_int_free (739,382 samples, 0.14%)</title><rect x="91.9657%" y="1157" width="0.1438%" height="15" fill="rgb(227,7,22)" fg:x="472747137" fg:w="739382"/><text x="92.2157%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;rmcp::transport::streamable_http_server::session::local::CachedTx&gt; (460,940 samples, 0.09%)</title><rect x="92.1095%" y="1237" width="0.0897%" height="15" fill="rgb(252,90,44)" fg:x="473486519" fg:w="460940"/><text x="92.3595%" y="1247.50"></text></g><g><title>rmcp::transport::streamable_http_server::session::local::LocalSessionWorker::unregister_resource (1,521,051 samples, 0.30%)</title><rect x="92.1095%" y="1253" width="0.2959%" height="15" fill="rgb(253,91,0)" fg:x="473486519" fg:w="1521051"/><text x="92.3595%" y="1263.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (1,060,111 samples, 0.21%)</title><rect x="92.1992%" y="1237" width="0.2062%" height="15" fill="rgb(252,175,49)" fg:x="473947459" fg:w="1060111"/><text x="92.4492%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1,060,111 samples, 0.21%)</title><rect x="92.1992%" y="1221" width="0.2062%" height="15" fill="rgb(246,150,1)" fg:x="473947459" fg:w="1060111"/><text x="92.4492%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1,060,111 samples, 0.21%)</title><rect x="92.1992%" y="1205" width="0.2062%" height="15" fill="rgb(241,192,25)" fg:x="473947459" fg:w="1060111"/><text x="92.4492%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1,060,111 samples, 0.21%)</title><rect x="92.1992%" y="1189" width="0.2062%" height="15" fill="rgb(239,187,11)" fg:x="473947459" fg:w="1060111"/><text x="92.4492%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (564,477 samples, 0.11%)</title><rect x="92.2956%" y="1173" width="0.1098%" height="15" fill="rgb(218,202,51)" fg:x="474443093" fg:w="564477"/><text x="92.5456%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (564,477 samples, 0.11%)</title><rect x="92.2956%" y="1157" width="0.1098%" height="15" fill="rgb(225,176,8)" fg:x="474443093" fg:w="564477"/><text x="92.5456%" y="1167.50"></text></g><g><title>hashbrown::control::tag::Tag::full (564,477 samples, 0.11%)</title><rect x="92.2956%" y="1141" width="0.1098%" height="15" fill="rgb(219,122,41)" fg:x="474443093" fg:w="564477"/><text x="92.5456%" y="1151.50"></text></g><g><title>tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (817,190 samples, 0.16%)</title><rect x="92.4054%" y="1221" width="0.1590%" height="15" fill="rgb(248,140,20)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="1231.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (817,190 samples, 0.16%)</title><rect x="92.4054%" y="1205" width="0.1590%" height="15" fill="rgb(245,41,37)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="1215.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (817,190 samples, 0.16%)</title><rect x="92.4054%" y="1189" width="0.1590%" height="15" fill="rgb(235,82,39)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="1199.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (817,190 samples, 0.16%)</title><rect x="92.4054%" y="1173" width="0.1590%" height="15" fill="rgb(230,108,42)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="1183.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::find_block (817,190 samples, 0.16%)</title><rect x="92.4054%" y="1157" width="0.1590%" height="15" fill="rgb(215,150,50)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (817,190 samples, 0.16%)</title><rect x="92.4054%" y="1141" width="0.1590%" height="15" fill="rgb(233,212,5)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="1151.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::find_block::{{closure}} (817,190 samples, 0.16%)</title><rect x="92.4054%" y="1125" width="0.1590%" height="15" fill="rgb(245,80,22)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="1135.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::grow (817,190 samples, 0.16%)</title><rect x="92.4054%" y="1109" width="0.1590%" height="15" fill="rgb(238,129,16)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="1119.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::new (817,190 samples, 0.16%)</title><rect x="92.4054%" y="1093" width="0.1590%" height="15" fill="rgb(240,19,0)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (817,190 samples, 0.16%)</title><rect x="92.4054%" y="1077" width="0.1590%" height="15" fill="rgb(232,42,35)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="1087.50"></text></g><g><title>__GI___libc_malloc (817,190 samples, 0.16%)</title><rect x="92.4054%" y="1061" width="0.1590%" height="15" fill="rgb(223,130,24)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="1071.50"></text></g><g><title>el0t_64_irq_handler (817,190 samples, 0.16%)</title><rect x="92.4054%" y="1045" width="0.1590%" height="15" fill="rgb(237,16,22)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="1055.50"></text></g><g><title>__el0_irq_handler_common (817,190 samples, 0.16%)</title><rect x="92.4054%" y="1029" width="0.1590%" height="15" fill="rgb(248,192,20)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="1039.50"></text></g><g><title>el0_interrupt (817,190 samples, 0.16%)</title><rect x="92.4054%" y="1013" width="0.1590%" height="15" fill="rgb(233,167,2)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="1023.50"></text></g><g><title>irq_exit_rcu (817,190 samples, 0.16%)</title><rect x="92.4054%" y="997" width="0.1590%" height="15" fill="rgb(252,71,44)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="1007.50"></text></g><g><title>__irq_exit_rcu (817,190 samples, 0.16%)</title><rect x="92.4054%" y="981" width="0.1590%" height="15" fill="rgb(238,37,47)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="991.50"></text></g><g><title>do_softirq_own_stack (817,190 samples, 0.16%)</title><rect x="92.4054%" y="965" width="0.1590%" height="15" fill="rgb(214,202,54)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="975.50"></text></g><g><title>call_on_irq_stack (817,190 samples, 0.16%)</title><rect x="92.4054%" y="949" width="0.1590%" height="15" fill="rgb(254,165,40)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="959.50"></text></g><g><title>____do_softirq (817,190 samples, 0.16%)</title><rect x="92.4054%" y="933" width="0.1590%" height="15" fill="rgb(246,173,38)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="943.50"></text></g><g><title>__softirqentry_text_start (817,190 samples, 0.16%)</title><rect x="92.4054%" y="917" width="0.1590%" height="15" fill="rgb(215,3,27)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="927.50"></text></g><g><title>handle_softirqs (817,190 samples, 0.16%)</title><rect x="92.4054%" y="901" width="0.1590%" height="15" fill="rgb(239,169,51)" fg:x="475007570" fg:w="817190"/><text x="92.6554%" y="911.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (560,665 samples, 0.11%)</title><rect x="92.5644%" y="1189" width="0.1091%" height="15" fill="rgb(212,5,25)" fg:x="475824760" fg:w="560665"/><text x="92.8144%" y="1199.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (560,665 samples, 0.11%)</title><rect x="92.5644%" y="1173" width="0.1091%" height="15" fill="rgb(243,45,17)" fg:x="475824760" fg:w="560665"/><text x="92.8144%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (560,665 samples, 0.11%)</title><rect x="92.5644%" y="1157" width="0.1091%" height="15" fill="rgb(242,97,9)" fg:x="475824760" fg:w="560665"/><text x="92.8144%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (560,665 samples, 0.11%)</title><rect x="92.5644%" y="1141" width="0.1091%" height="15" fill="rgb(228,71,31)" fg:x="475824760" fg:w="560665"/><text x="92.8144%" y="1151.50"></text></g><g><title>rmcp::transport::worker::WorkerContext&lt;W&gt;::send_to_handler::{{closure}} (2,002,823 samples, 0.39%)</title><rect x="92.4054%" y="1253" width="0.3896%" height="15" fill="rgb(252,184,16)" fg:x="475007570" fg:w="2002823"/><text x="92.6554%" y="1263.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::{{closure}} (2,002,823 samples, 0.39%)</title><rect x="92.4054%" y="1237" width="0.3896%" height="15" fill="rgb(236,169,46)" fg:x="475007570" fg:w="2002823"/><text x="92.6554%" y="1247.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve::{{closure}} (1,185,633 samples, 0.23%)</title><rect x="92.5644%" y="1221" width="0.2306%" height="15" fill="rgb(207,17,47)" fg:x="475824760" fg:w="1185633"/><text x="92.8144%" y="1231.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve_inner::{{closure}} (1,185,633 samples, 0.23%)</title><rect x="92.5644%" y="1205" width="0.2306%" height="15" fill="rgb(206,201,28)" fg:x="475824760" fg:w="1185633"/><text x="92.8144%" y="1215.50"></text></g><g><title>el0t_64_irq_handler (624,968 samples, 0.12%)</title><rect x="92.6734%" y="1189" width="0.1216%" height="15" fill="rgb(224,184,23)" fg:x="476385425" fg:w="624968"/><text x="92.9234%" y="1199.50"></text></g><g><title>__el0_irq_handler_common (624,968 samples, 0.12%)</title><rect x="92.6734%" y="1173" width="0.1216%" height="15" fill="rgb(208,139,48)" fg:x="476385425" fg:w="624968"/><text x="92.9234%" y="1183.50"></text></g><g><title>el0_interrupt (624,968 samples, 0.12%)</title><rect x="92.6734%" y="1157" width="0.1216%" height="15" fill="rgb(208,130,10)" fg:x="476385425" fg:w="624968"/><text x="92.9234%" y="1167.50"></text></g><g><title>irq_exit_rcu (624,968 samples, 0.12%)</title><rect x="92.6734%" y="1141" width="0.1216%" height="15" fill="rgb(211,213,45)" fg:x="476385425" fg:w="624968"/><text x="92.9234%" y="1151.50"></text></g><g><title>__irq_exit_rcu (624,968 samples, 0.12%)</title><rect x="92.6734%" y="1125" width="0.1216%" height="15" fill="rgb(235,100,30)" fg:x="476385425" fg:w="624968"/><text x="92.9234%" y="1135.50"></text></g><g><title>do_softirq_own_stack (624,968 samples, 0.12%)</title><rect x="92.6734%" y="1109" width="0.1216%" height="15" fill="rgb(206,144,31)" fg:x="476385425" fg:w="624968"/><text x="92.9234%" y="1119.50"></text></g><g><title>call_on_irq_stack (624,968 samples, 0.12%)</title><rect x="92.6734%" y="1093" width="0.1216%" height="15" fill="rgb(224,200,26)" fg:x="476385425" fg:w="624968"/><text x="92.9234%" y="1103.50"></text></g><g><title>____do_softirq (624,968 samples, 0.12%)</title><rect x="92.6734%" y="1077" width="0.1216%" height="15" fill="rgb(247,104,53)" fg:x="476385425" fg:w="624968"/><text x="92.9234%" y="1087.50"></text></g><g><title>__softirqentry_text_start (624,968 samples, 0.12%)</title><rect x="92.6734%" y="1061" width="0.1216%" height="15" fill="rgb(220,14,17)" fg:x="476385425" fg:w="624968"/><text x="92.9234%" y="1071.50"></text></g><g><title>handle_softirqs (624,968 samples, 0.12%)</title><rect x="92.6734%" y="1045" width="0.1216%" height="15" fill="rgb(230,140,40)" fg:x="476385425" fg:w="624968"/><text x="92.9234%" y="1055.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (943,550 samples, 0.18%)</title><rect x="92.7950%" y="1253" width="0.1836%" height="15" fill="rgb(229,2,41)" fg:x="477010393" fg:w="943550"/><text x="93.0450%" y="1263.50"></text></g><g><title>tokio::time::sleep::sleep (776,008 samples, 0.15%)</title><rect x="92.9786%" y="1253" width="0.1510%" height="15" fill="rgb(232,89,16)" fg:x="477953943" fg:w="776008"/><text x="93.2286%" y="1263.50"></text></g><g><title>tokio::time::sleep::Sleep::new_timeout (356,660 samples, 0.07%)</title><rect x="93.0601%" y="1237" width="0.0694%" height="15" fill="rgb(247,59,52)" fg:x="478373291" fg:w="356660"/><text x="93.3101%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::Handle::current (356,660 samples, 0.07%)</title><rect x="93.0601%" y="1221" width="0.0694%" height="15" fill="rgb(226,110,21)" fg:x="478373291" fg:w="356660"/><text x="93.3101%" y="1231.50"></text></g><g><title>tokio::runtime::context::current::with_current (356,660 samples, 0.07%)</title><rect x="93.0601%" y="1205" width="0.0694%" height="15" fill="rgb(224,176,43)" fg:x="478373291" fg:w="356660"/><text x="93.3101%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (356,660 samples, 0.07%)</title><rect x="93.0601%" y="1189" width="0.0694%" height="15" fill="rgb(221,73,6)" fg:x="478373291" fg:w="356660"/><text x="93.3101%" y="1199.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (356,660 samples, 0.07%)</title><rect x="93.0601%" y="1173" width="0.0694%" height="15" fill="rgb(232,78,19)" fg:x="478373291" fg:w="356660"/><text x="93.3101%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;core::option::Option&lt;tokio::runtime::scheduler::Handle&gt;&gt;&gt; (356,660 samples, 0.07%)</title><rect x="93.0601%" y="1157" width="0.0694%" height="15" fill="rgb(233,112,48)" fg:x="478373291" fg:w="356660"/><text x="93.3101%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (356,660 samples, 0.07%)</title><rect x="93.0601%" y="1141" width="0.0694%" height="15" fill="rgb(243,131,47)" fg:x="478373291" fg:w="356660"/><text x="93.3101%" y="1151.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (356,660 samples, 0.07%)</title><rect x="93.0601%" y="1125" width="0.0694%" height="15" fill="rgb(226,51,1)" fg:x="478373291" fg:w="356660"/><text x="93.3101%" y="1135.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (356,660 samples, 0.07%)</title><rect x="93.0601%" y="1109" width="0.0694%" height="15" fill="rgb(247,58,7)" fg:x="478373291" fg:w="356660"/><text x="93.3101%" y="1119.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (356,660 samples, 0.07%)</title><rect x="93.0601%" y="1093" width="0.0694%" height="15" fill="rgb(209,7,32)" fg:x="478373291" fg:w="356660"/><text x="93.3101%" y="1103.50"></text></g><g><title>core::mem::replace (356,660 samples, 0.07%)</title><rect x="93.0601%" y="1077" width="0.0694%" height="15" fill="rgb(209,39,41)" fg:x="478373291" fg:w="356660"/><text x="93.3101%" y="1087.50"></text></g><g><title>&lt;rmcp::transport::streamable_http_server::session::local::LocalSessionWorker as rmcp::transport::worker::Worker&gt;::run::{{closure}}::{{closure}} (48,794,531 samples, 9.49%)</title><rect x="84.5046%" y="1269" width="9.4922%" height="15" fill="rgb(226,182,46)" fg:x="434393953" fg:w="48794531"/><text x="84.7546%" y="1279.50">&lt;rmcp::transpo..</text></g><g><title>tokio_util::sync::cancellation_token::CancellationToken::cancelled (4,458,533 samples, 0.87%)</title><rect x="93.1295%" y="1253" width="0.8673%" height="15" fill="rgb(230,219,10)" fg:x="478729951" fg:w="4458533"/><text x="93.3795%" y="1263.50"></text></g><g><title>tokio_util::sync::cancellation_token::tree_node::TreeNode::notified (3,115,612 samples, 0.61%)</title><rect x="93.3908%" y="1237" width="0.6061%" height="15" fill="rgb(227,175,30)" fg:x="480072872" fg:w="3115612"/><text x="93.6408%" y="1247.50"></text></g><g><title>tokio::sync::notify::Notify::notified (3,115,612 samples, 0.61%)</title><rect x="93.3908%" y="1221" width="0.6061%" height="15" fill="rgb(217,2,50)" fg:x="480072872" fg:w="3115612"/><text x="93.6408%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,930,054 samples, 0.38%)</title><rect x="93.6214%" y="1205" width="0.3755%" height="15" fill="rgb(229,160,0)" fg:x="481258430" fg:w="1930054"/><text x="93.8714%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_load (1,930,054 samples, 0.38%)</title><rect x="93.6214%" y="1189" width="0.3755%" height="15" fill="rgb(207,78,37)" fg:x="481258430" fg:w="1930054"/><text x="93.8714%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (643,435 samples, 0.13%)</title><rect x="93.9969%" y="1157" width="0.1252%" height="15" fill="rgb(225,57,0)" fg:x="483188484" fg:w="643435"/><text x="94.2469%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (932,444 samples, 0.18%)</title><rect x="94.1220%" y="1141" width="0.1814%" height="15" fill="rgb(232,154,2)" fg:x="483831919" fg:w="932444"/><text x="94.3720%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_load (932,444 samples, 0.18%)</title><rect x="94.1220%" y="1125" width="0.1814%" height="15" fill="rgb(241,212,25)" fg:x="483831919" fg:w="932444"/><text x="94.3720%" y="1135.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::exit (2,033,854 samples, 0.40%)</title><rect x="93.9969%" y="1221" width="0.3957%" height="15" fill="rgb(226,69,20)" fg:x="483188484" fg:w="2033854"/><text x="94.2469%" y="1231.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (2,033,854 samples, 0.40%)</title><rect x="93.9969%" y="1205" width="0.3957%" height="15" fill="rgb(247,184,54)" fg:x="483188484" fg:w="2033854"/><text x="94.2469%" y="1215.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (2,033,854 samples, 0.40%)</title><rect x="93.9969%" y="1189" width="0.3957%" height="15" fill="rgb(210,145,0)" fg:x="483188484" fg:w="2033854"/><text x="94.2469%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (2,033,854 samples, 0.40%)</title><rect x="93.9969%" y="1173" width="0.3957%" height="15" fill="rgb(253,82,12)" fg:x="483188484" fg:w="2033854"/><text x="94.2469%" y="1183.50"></text></g><g><title>tracing_core::dispatcher::get_default (1,390,419 samples, 0.27%)</title><rect x="94.1220%" y="1157" width="0.2705%" height="15" fill="rgb(245,42,11)" fg:x="483831919" fg:w="1390419"/><text x="94.3720%" y="1167.50"></text></g><g><title>tracing_core::dispatcher::get_global (457,975 samples, 0.09%)</title><rect x="94.3034%" y="1141" width="0.0891%" height="15" fill="rgb(219,147,32)" fg:x="484764363" fg:w="457975"/><text x="94.5534%" y="1151.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (558,076 samples, 0.11%)</title><rect x="94.3925%" y="1221" width="0.1086%" height="15" fill="rgb(246,12,7)" fg:x="485222338" fg:w="558076"/><text x="94.6425%" y="1231.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::subscriber (558,076 samples, 0.11%)</title><rect x="94.3925%" y="1205" width="0.1086%" height="15" fill="rgb(243,50,9)" fg:x="485222338" fg:w="558076"/><text x="94.6425%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;tracing_core::span::Id,tracing_subscriber::filter::env::directive::MatchSet&lt;tracing_subscriber::filter::env::field::SpanMatch&gt;&gt;&gt;&gt; (440,675 samples, 0.09%)</title><rect x="94.6946%" y="1189" width="0.0857%" height="15" fill="rgb(219,149,6)" fg:x="486775259" fg:w="440675"/><text x="94.9446%" y="1199.50"></text></g><g><title>&lt;std::sync::poison::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (440,675 samples, 0.09%)</title><rect x="94.6946%" y="1173" width="0.0857%" height="15" fill="rgb(241,51,42)" fg:x="486775259" fg:w="440675"/><text x="94.9446%" y="1183.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read_unlock (440,675 samples, 0.09%)</title><rect x="94.6946%" y="1157" width="0.0857%" height="15" fill="rgb(226,128,27)" fg:x="486775259" fg:w="440675"/><text x="94.9446%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (440,675 samples, 0.09%)</title><rect x="94.6946%" y="1141" width="0.0857%" height="15" fill="rgb(244,144,4)" fg:x="486775259" fg:w="440675"/><text x="94.9446%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_sub (440,675 samples, 0.09%)</title><rect x="94.6946%" y="1125" width="0.0857%" height="15" fill="rgb(221,4,13)" fg:x="486775259" fg:w="440675"/><text x="94.9446%" y="1135.50"></text></g><g><title>__aarch64_ldadd4_rel (440,675 samples, 0.09%)</title><rect x="94.6946%" y="1109" width="0.0857%" height="15" fill="rgb(208,170,28)" fg:x="486775259" fg:w="440675"/><text x="94.9446%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (4,719,038 samples, 0.92%)</title><rect x="93.9969%" y="1269" width="0.9180%" height="15" fill="rgb(226,131,13)" fg:x="483188484" fg:w="4719038"/><text x="94.2469%" y="1279.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (4,719,038 samples, 0.92%)</title><rect x="93.9969%" y="1253" width="0.9180%" height="15" fill="rgb(215,72,41)" fg:x="483188484" fg:w="4719038"/><text x="94.2469%" y="1263.50"></text></g><g><title>tracing::span::Span::do_exit (4,719,038 samples, 0.92%)</title><rect x="93.9969%" y="1237" width="0.9180%" height="15" fill="rgb(243,108,20)" fg:x="483188484" fg:w="4719038"/><text x="94.2469%" y="1247.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::on_exit (2,127,108 samples, 0.41%)</title><rect x="94.5011%" y="1221" width="0.4138%" height="15" fill="rgb(230,189,17)" fg:x="485780414" fg:w="2127108"/><text x="94.7511%" y="1231.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::cares_about_span (1,747,968 samples, 0.34%)</title><rect x="94.5748%" y="1205" width="0.3400%" height="15" fill="rgb(220,50,17)" fg:x="486159554" fg:w="1747968"/><text x="94.8248%" y="1215.50"></text></g><g><title>el0t_64_irq_handler (691,588 samples, 0.13%)</title><rect x="94.7803%" y="1189" width="0.1345%" height="15" fill="rgb(248,152,48)" fg:x="487215934" fg:w="691588"/><text x="95.0303%" y="1199.50"></text></g><g><title>__el0_irq_handler_common (691,588 samples, 0.13%)</title><rect x="94.7803%" y="1173" width="0.1345%" height="15" fill="rgb(244,91,11)" fg:x="487215934" fg:w="691588"/><text x="95.0303%" y="1183.50"></text></g><g><title>el0_interrupt (691,588 samples, 0.13%)</title><rect x="94.7803%" y="1157" width="0.1345%" height="15" fill="rgb(220,157,5)" fg:x="487215934" fg:w="691588"/><text x="95.0303%" y="1167.50"></text></g><g><title>irq_exit_rcu (691,588 samples, 0.13%)</title><rect x="94.7803%" y="1141" width="0.1345%" height="15" fill="rgb(253,137,8)" fg:x="487215934" fg:w="691588"/><text x="95.0303%" y="1151.50"></text></g><g><title>__irq_exit_rcu (691,588 samples, 0.13%)</title><rect x="94.7803%" y="1125" width="0.1345%" height="15" fill="rgb(217,137,51)" fg:x="487215934" fg:w="691588"/><text x="95.0303%" y="1135.50"></text></g><g><title>do_softirq_own_stack (691,588 samples, 0.13%)</title><rect x="94.7803%" y="1109" width="0.1345%" height="15" fill="rgb(218,209,53)" fg:x="487215934" fg:w="691588"/><text x="95.0303%" y="1119.50"></text></g><g><title>call_on_irq_stack (691,588 samples, 0.13%)</title><rect x="94.7803%" y="1093" width="0.1345%" height="15" fill="rgb(249,137,25)" fg:x="487215934" fg:w="691588"/><text x="95.0303%" y="1103.50"></text></g><g><title>____do_softirq (691,588 samples, 0.13%)</title><rect x="94.7803%" y="1077" width="0.1345%" height="15" fill="rgb(239,155,26)" fg:x="487215934" fg:w="691588"/><text x="95.0303%" y="1087.50"></text></g><g><title>__softirqentry_text_start (691,588 samples, 0.13%)</title><rect x="94.7803%" y="1061" width="0.1345%" height="15" fill="rgb(227,85,46)" fg:x="487215934" fg:w="691588"/><text x="95.0303%" y="1071.50"></text></g><g><title>handle_softirqs (691,588 samples, 0.13%)</title><rect x="94.7803%" y="1045" width="0.1345%" height="15" fill="rgb(251,107,43)" fg:x="487215934" fg:w="691588"/><text x="95.0303%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (457,587 samples, 0.09%)</title><rect x="95.0359%" y="1189" width="0.0890%" height="15" fill="rgb(234,170,33)" fg:x="488529564" fg:w="457587"/><text x="95.2859%" y="1199.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (457,587 samples, 0.09%)</title><rect x="95.0359%" y="1173" width="0.0890%" height="15" fill="rgb(206,29,35)" fg:x="488529564" fg:w="457587"/><text x="95.2859%" y="1183.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (457,587 samples, 0.09%)</title><rect x="95.0359%" y="1157" width="0.0890%" height="15" fill="rgb(227,138,25)" fg:x="488529564" fg:w="457587"/><text x="95.2859%" y="1167.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (457,587 samples, 0.09%)</title><rect x="95.0359%" y="1141" width="0.0890%" height="15" fill="rgb(249,131,35)" fg:x="488529564" fg:w="457587"/><text x="95.2859%" y="1151.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (457,587 samples, 0.09%)</title><rect x="95.0359%" y="1125" width="0.0890%" height="15" fill="rgb(239,6,40)" fg:x="488529564" fg:w="457587"/><text x="95.2859%" y="1135.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (457,587 samples, 0.09%)</title><rect x="95.0359%" y="1109" width="0.0890%" height="15" fill="rgb(246,136,47)" fg:x="488529564" fg:w="457587"/><text x="95.2859%" y="1119.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::{{closure}} (457,587 samples, 0.09%)</title><rect x="95.0359%" y="1093" width="0.0890%" height="15" fill="rgb(253,58,26)" fg:x="488529564" fg:w="457587"/><text x="95.2859%" y="1103.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::{{closure}} (457,587 samples, 0.09%)</title><rect x="95.0359%" y="1077" width="0.0890%" height="15" fill="rgb(237,141,10)" fg:x="488529564" fg:w="457587"/><text x="95.2859%" y="1087.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (457,587 samples, 0.09%)</title><rect x="95.0359%" y="1061" width="0.0890%" height="15" fill="rgb(234,156,12)" fg:x="488529564" fg:w="457587"/><text x="95.2859%" y="1071.50"></text></g><g><title>sharded_slab::Pack::from_packed (457,587 samples, 0.09%)</title><rect x="95.0359%" y="1045" width="0.0890%" height="15" fill="rgb(243,224,36)" fg:x="488529564" fg:w="457587"/><text x="95.2859%" y="1055.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (55,740,937 samples, 10.84%)</title><rect x="84.3860%" y="1317" width="10.8435%" height="15" fill="rgb(205,229,51)" fg:x="433784303" fg:w="55740937"/><text x="84.6360%" y="1327.50">&lt;tracing::instru..</text></g><g><title>&lt;rmcp::transport::streamable_http_server::session::local::LocalSessionWorker as rmcp::transport::worker::Worker&gt;::run::{{closure}} (55,131,287 samples, 10.72%)</title><rect x="84.5046%" y="1301" width="10.7249%" height="15" fill="rgb(223,189,4)" fg:x="434393953" fg:w="55131287"/><text x="84.7546%" y="1311.50">&lt;rmcp::transport..</text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (55,131,287 samples, 10.72%)</title><rect x="84.5046%" y="1285" width="10.7249%" height="15" fill="rgb(249,167,54)" fg:x="434393953" fg:w="55131287"/><text x="84.7546%" y="1295.50">&lt;tracing::instru..</text></g><g><title>tracing::span::Span::enter (1,617,718 samples, 0.31%)</title><rect x="94.9149%" y="1269" width="0.3147%" height="15" fill="rgb(218,34,28)" fg:x="487907522" fg:w="1617718"/><text x="95.1649%" y="1279.50"></text></g><g><title>tracing::span::Span::do_enter (1,617,718 samples, 0.31%)</title><rect x="94.9149%" y="1253" width="0.3147%" height="15" fill="rgb(232,109,42)" fg:x="487907522" fg:w="1617718"/><text x="95.1649%" y="1263.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::enter (995,676 samples, 0.19%)</title><rect x="95.0359%" y="1237" width="0.1937%" height="15" fill="rgb(248,214,46)" fg:x="488529564" fg:w="995676"/><text x="95.2859%" y="1247.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (995,676 samples, 0.19%)</title><rect x="95.0359%" y="1221" width="0.1937%" height="15" fill="rgb(244,216,40)" fg:x="488529564" fg:w="995676"/><text x="95.2859%" y="1231.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (995,676 samples, 0.19%)</title><rect x="95.0359%" y="1205" width="0.1937%" height="15" fill="rgb(231,226,31)" fg:x="488529564" fg:w="995676"/><text x="95.2859%" y="1215.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (538,089 samples, 0.10%)</title><rect x="95.1249%" y="1189" width="0.1047%" height="15" fill="rgb(238,38,43)" fg:x="488987151" fg:w="538089"/><text x="95.3749%" y="1199.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or_default (538,089 samples, 0.10%)</title><rect x="95.1249%" y="1173" width="0.1047%" height="15" fill="rgb(208,88,43)" fg:x="488987151" fg:w="538089"/><text x="95.3749%" y="1183.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or (538,089 samples, 0.10%)</title><rect x="95.1249%" y="1157" width="0.1047%" height="15" fill="rgb(205,136,37)" fg:x="488987151" fg:w="538089"/><text x="95.3749%" y="1167.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or_try (538,089 samples, 0.10%)</title><rect x="95.1249%" y="1141" width="0.1047%" height="15" fill="rgb(237,34,14)" fg:x="488987151" fg:w="538089"/><text x="95.3749%" y="1151.50"></text></g><g><title>thread_local::thread_id::get (538,089 samples, 0.10%)</title><rect x="95.1249%" y="1125" width="0.1047%" height="15" fill="rgb(236,193,44)" fg:x="488987151" fg:w="538089"/><text x="95.3749%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (538,089 samples, 0.10%)</title><rect x="95.1249%" y="1109" width="0.1047%" height="15" fill="rgb(231,48,10)" fg:x="488987151" fg:w="538089"/><text x="95.3749%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (538,089 samples, 0.10%)</title><rect x="95.1249%" y="1093" width="0.1047%" height="15" fill="rgb(213,141,34)" fg:x="488987151" fg:w="538089"/><text x="95.3749%" y="1103.50"></text></g><g><title>thread_local::thread_id::get::{{closure}} (538,089 samples, 0.10%)</title><rect x="95.1249%" y="1077" width="0.1047%" height="15" fill="rgb(249,130,34)" fg:x="488987151" fg:w="538089"/><text x="95.3749%" y="1087.50"></text></g><g><title>rmcp::transport::worker::WorkerTransport&lt;W&gt;::spawn_with_ct::{{closure}} (57,987,041 samples, 11.28%)</title><rect x="84.0376%" y="1333" width="11.2805%" height="15" fill="rgb(219,42,41)" fg:x="431992907" fg:w="57987041"/><text x="84.2876%" y="1343.50">rmcp::transport::..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (454,708 samples, 0.09%)</title><rect x="95.2296%" y="1317" width="0.0885%" height="15" fill="rgb(224,100,54)" fg:x="489525240" fg:w="454708"/><text x="95.4796%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (454,708 samples, 0.09%)</title><rect x="95.2296%" y="1301" width="0.0885%" height="15" fill="rgb(229,200,27)" fg:x="489525240" fg:w="454708"/><text x="95.4796%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (454,708 samples, 0.09%)</title><rect x="95.2296%" y="1285" width="0.0885%" height="15" fill="rgb(217,118,10)" fg:x="489525240" fg:w="454708"/><text x="95.4796%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (454,708 samples, 0.09%)</title><rect x="95.2296%" y="1269" width="0.0885%" height="15" fill="rgb(206,22,3)" fg:x="489525240" fg:w="454708"/><text x="95.4796%" y="1279.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (454,708 samples, 0.09%)</title><rect x="95.2296%" y="1253" width="0.0885%" height="15" fill="rgb(232,163,46)" fg:x="489525240" fg:w="454708"/><text x="95.4796%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (454,708 samples, 0.09%)</title><rect x="95.2296%" y="1237" width="0.0885%" height="15" fill="rgb(206,95,13)" fg:x="489525240" fg:w="454708"/><text x="95.4796%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (454,708 samples, 0.09%)</title><rect x="95.2296%" y="1221" width="0.0885%" height="15" fill="rgb(253,154,18)" fg:x="489525240" fg:w="454708"/><text x="95.4796%" y="1231.50"></text></g><g><title>alloc::alloc::dealloc (454,708 samples, 0.09%)</title><rect x="95.2296%" y="1205" width="0.0885%" height="15" fill="rgb(219,32,23)" fg:x="489525240" fg:w="454708"/><text x="95.4796%" y="1215.50"></text></g><g><title>__free (454,708 samples, 0.09%)</title><rect x="95.2296%" y="1189" width="0.0885%" height="15" fill="rgb(230,191,45)" fg:x="489525240" fg:w="454708"/><text x="95.4796%" y="1199.50"></text></g><g><title>_int_free (454,708 samples, 0.09%)</title><rect x="95.2296%" y="1173" width="0.0885%" height="15" fill="rgb(229,64,36)" fg:x="489525240" fg:w="454708"/><text x="95.4796%" y="1183.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (443,011,102 samples, 86.18%)</title><rect x="9.2278%" y="1365" width="86.1810%" height="15" fill="rgb(205,129,25)" fg:x="47435053" fg:w="443011102"/><text x="9.4778%" y="1375.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (443,011,102 samples, 86.18%)</title><rect x="9.2278%" y="1349" width="86.1810%" height="15" fill="rgb(254,112,7)" fg:x="47435053" fg:w="443011102"/><text x="9.4778%" y="1359.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (466,207 samples, 0.09%)</title><rect x="95.3180%" y="1333" width="0.0907%" height="15" fill="rgb(226,53,48)" fg:x="489979948" fg:w="466207"/><text x="95.5680%" y="1343.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_inner (1,643,079 samples, 0.32%)</title><rect x="95.6619%" y="1109" width="0.3196%" height="15" fill="rgb(214,153,38)" fg:x="491747321" fg:w="1643079"/><text x="95.9119%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (2,102,043 samples, 0.41%)</title><rect x="95.6619%" y="1237" width="0.4089%" height="15" fill="rgb(243,101,7)" fg:x="491747321" fg:w="2102043"/><text x="95.9119%" y="1247.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (2,102,043 samples, 0.41%)</title><rect x="95.6619%" y="1221" width="0.4089%" height="15" fill="rgb(240,140,22)" fg:x="491747321" fg:w="2102043"/><text x="95.9119%" y="1231.50"></text></g><g><title>tracing::span::Span::do_exit (2,102,043 samples, 0.41%)</title><rect x="95.6619%" y="1205" width="0.4089%" height="15" fill="rgb(235,114,2)" fg:x="491747321" fg:w="2102043"/><text x="95.9119%" y="1215.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::exit (2,102,043 samples, 0.41%)</title><rect x="95.6619%" y="1189" width="0.4089%" height="15" fill="rgb(242,59,12)" fg:x="491747321" fg:w="2102043"/><text x="95.9119%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (2,102,043 samples, 0.41%)</title><rect x="95.6619%" y="1173" width="0.4089%" height="15" fill="rgb(252,134,9)" fg:x="491747321" fg:w="2102043"/><text x="95.9119%" y="1183.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (2,102,043 samples, 0.41%)</title><rect x="95.6619%" y="1157" width="0.4089%" height="15" fill="rgb(236,4,44)" fg:x="491747321" fg:w="2102043"/><text x="95.9119%" y="1167.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (2,102,043 samples, 0.41%)</title><rect x="95.6619%" y="1141" width="0.4089%" height="15" fill="rgb(254,172,41)" fg:x="491747321" fg:w="2102043"/><text x="95.9119%" y="1151.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (2,102,043 samples, 0.41%)</title><rect x="95.6619%" y="1125" width="0.4089%" height="15" fill="rgb(244,63,20)" fg:x="491747321" fg:w="2102043"/><text x="95.9119%" y="1135.50"></text></g><g><title>thread_local::thread_id::get (458,964 samples, 0.09%)</title><rect x="95.9815%" y="1109" width="0.0893%" height="15" fill="rgb(250,73,31)" fg:x="493390400" fg:w="458964"/><text x="96.2315%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (458,964 samples, 0.09%)</title><rect x="95.9815%" y="1093" width="0.0893%" height="15" fill="rgb(241,38,36)" fg:x="493390400" fg:w="458964"/><text x="96.2315%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (458,964 samples, 0.09%)</title><rect x="95.9815%" y="1077" width="0.0893%" height="15" fill="rgb(245,211,2)" fg:x="493390400" fg:w="458964"/><text x="96.2315%" y="1087.50"></text></g><g><title>thread_local::thread_id::get::{{closure}} (458,964 samples, 0.09%)</title><rect x="95.9815%" y="1061" width="0.0893%" height="15" fill="rgb(206,120,28)" fg:x="493390400" fg:w="458964"/><text x="96.2315%" y="1071.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3,851,576 samples, 0.75%)</title><rect x="95.4087%" y="1333" width="0.7493%" height="15" fill="rgb(211,59,34)" fg:x="490446155" fg:w="3851576"/><text x="95.6587%" y="1343.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (3,851,576 samples, 0.75%)</title><rect x="95.4087%" y="1317" width="0.7493%" height="15" fill="rgb(233,168,5)" fg:x="490446155" fg:w="3851576"/><text x="95.6587%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;tracing::instrument::Instrumented&lt;rmcp::service::serve_inner&lt;rmcp::service::server::RoleServer,keipes_ai_mcp::server::mcp::NexusServer,rmcp::transport::worker::WorkerTransport&lt;rmcp::transport::streamable_http_server::session::local::LocalSessionWorker&gt;&gt;::{{closure}}::{{closure}}&gt;&gt;&gt; (3,851,576 samples, 0.75%)</title><rect x="95.4087%" y="1301" width="0.7493%" height="15" fill="rgb(234,33,13)" fg:x="490446155" fg:w="3851576"/><text x="95.6587%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::instrument::Instrumented&lt;rmcp::service::serve_inner&lt;rmcp::service::server::RoleServer,keipes_ai_mcp::server::mcp::NexusServer,rmcp::transport::worker::WorkerTransport&lt;rmcp::transport::streamable_http_server::session::local::LocalSessionWorker&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (3,177,095 samples, 0.62%)</title><rect x="95.5399%" y="1285" width="0.6181%" height="15" fill="rgb(231,150,26)" fg:x="491120636" fg:w="3177095"/><text x="95.7899%" y="1295.50"></text></g><g><title>tracing::instrument::_::&lt;impl core::ops::drop::Drop for tracing::instrument::Instrumented&lt;T&gt;&gt;::drop (3,177,095 samples, 0.62%)</title><rect x="95.5399%" y="1269" width="0.6181%" height="15" fill="rgb(217,191,4)" fg:x="491120636" fg:w="3177095"/><text x="95.7899%" y="1279.50"></text></g><g><title>tracing::instrument::_::&lt;impl core::ops::drop::Drop for tracing::instrument::Instrumented&lt;T&gt;&gt;::drop::__drop_inner (2,550,410 samples, 0.50%)</title><rect x="95.6619%" y="1253" width="0.4961%" height="15" fill="rgb(246,198,38)" fg:x="491747321" fg:w="2550410"/><text x="95.9119%" y="1263.50"></text></g><g><title>tracing::span::Span::enter (448,367 samples, 0.09%)</title><rect x="96.0708%" y="1237" width="0.0872%" height="15" fill="rgb(245,64,37)" fg:x="493849364" fg:w="448367"/><text x="96.3208%" y="1247.50"></text></g><g><title>tracing::span::Span::do_enter (448,367 samples, 0.09%)</title><rect x="96.0708%" y="1221" width="0.0872%" height="15" fill="rgb(250,30,36)" fg:x="493849364" fg:w="448367"/><text x="96.3208%" y="1231.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::enter (448,367 samples, 0.09%)</title><rect x="96.0708%" y="1205" width="0.0872%" height="15" fill="rgb(217,86,53)" fg:x="493849364" fg:w="448367"/><text x="96.3208%" y="1215.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (448,367 samples, 0.09%)</title><rect x="96.0708%" y="1189" width="0.0872%" height="15" fill="rgb(228,157,16)" fg:x="493849364" fg:w="448367"/><text x="96.3208%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (448,367 samples, 0.09%)</title><rect x="96.0708%" y="1173" width="0.0872%" height="15" fill="rgb(217,59,31)" fg:x="493849364" fg:w="448367"/><text x="96.3208%" y="1183.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (448,367 samples, 0.09%)</title><rect x="96.0708%" y="1157" width="0.0872%" height="15" fill="rgb(237,138,41)" fg:x="493849364" fg:w="448367"/><text x="96.3208%" y="1167.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or_default (448,367 samples, 0.09%)</title><rect x="96.0708%" y="1141" width="0.0872%" height="15" fill="rgb(227,91,49)" fg:x="493849364" fg:w="448367"/><text x="96.3208%" y="1151.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or (448,367 samples, 0.09%)</title><rect x="96.0708%" y="1125" width="0.0872%" height="15" fill="rgb(247,21,44)" fg:x="493849364" fg:w="448367"/><text x="96.3208%" y="1135.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or_try (448,367 samples, 0.09%)</title><rect x="96.0708%" y="1109" width="0.0872%" height="15" fill="rgb(219,210,51)" fg:x="493849364" fg:w="448367"/><text x="96.3208%" y="1119.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (448,336,563 samples, 87.22%)</title><rect x="9.0534%" y="1381" width="87.2170%" height="15" fill="rgb(209,140,6)" fg:x="46538984" fg:w="448336563"/><text x="9.3034%" y="1391.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (4,429,392 samples, 0.86%)</title><rect x="95.4087%" y="1365" width="0.8617%" height="15" fill="rgb(221,188,24)" fg:x="490446155" fg:w="4429392"/><text x="95.6587%" y="1375.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (4,429,392 samples, 0.86%)</title><rect x="95.4087%" y="1349" width="0.8617%" height="15" fill="rgb(232,154,20)" fg:x="490446155" fg:w="4429392"/><text x="95.6587%" y="1359.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (577,816 samples, 0.11%)</title><rect x="96.1580%" y="1333" width="0.1124%" height="15" fill="rgb(244,137,50)" fg:x="494297731" fg:w="577816"/><text x="96.4080%" y="1343.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (577,816 samples, 0.11%)</title><rect x="96.1580%" y="1317" width="0.1124%" height="15" fill="rgb(225,185,43)" fg:x="494297731" fg:w="577816"/><text x="96.4080%" y="1327.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (577,816 samples, 0.11%)</title><rect x="96.1580%" y="1301" width="0.1124%" height="15" fill="rgb(213,205,38)" fg:x="494297731" fg:w="577816"/><text x="96.4080%" y="1311.50"></text></g><g><title>core::ops::function::FnOnce::call_once (577,816 samples, 0.11%)</title><rect x="96.1580%" y="1285" width="0.1124%" height="15" fill="rgb(236,73,12)" fg:x="494297731" fg:w="577816"/><text x="96.4080%" y="1295.50"></text></g><g><title>tokio::runtime::context::CONTEXT::{{constant}}::{{closure}} (577,816 samples, 0.11%)</title><rect x="96.1580%" y="1269" width="0.1124%" height="15" fill="rgb(235,219,13)" fg:x="494297731" fg:w="577816"/><text x="96.4080%" y="1279.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (577,816 samples, 0.11%)</title><rect x="96.1580%" y="1253" width="0.1124%" height="15" fill="rgb(218,59,36)" fg:x="494297731" fg:w="577816"/><text x="96.4080%" y="1263.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (450,199,454 samples, 87.58%)</title><rect x="9.0534%" y="1477" width="87.5794%" height="15" fill="rgb(205,110,39)" fg:x="46538984" fg:w="450199454"/><text x="9.3034%" y="1487.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (450,199,454 samples, 87.58%)</title><rect x="9.0534%" y="1461" width="87.5794%" height="15" fill="rgb(218,206,42)" fg:x="46538984" fg:w="450199454"/><text x="9.3034%" y="1471.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (450,199,454 samples, 87.58%)</title><rect x="9.0534%" y="1445" width="87.5794%" height="15" fill="rgb(248,125,24)" fg:x="46538984" fg:w="450199454"/><text x="9.3034%" y="1455.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (450,199,454 samples, 87.58%)</title><rect x="9.0534%" y="1429" width="87.5794%" height="15" fill="rgb(242,28,27)" fg:x="46538984" fg:w="450199454"/><text x="9.3034%" y="1439.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (450,199,454 samples, 87.58%)</title><rect x="9.0534%" y="1413" width="87.5794%" height="15" fill="rgb(216,228,15)" fg:x="46538984" fg:w="450199454"/><text x="9.3034%" y="1423.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (450,199,454 samples, 87.58%)</title><rect x="9.0534%" y="1397" width="87.5794%" height="15" fill="rgb(235,116,46)" fg:x="46538984" fg:w="450199454"/><text x="9.3034%" y="1407.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::store_output (1,862,891 samples, 0.36%)</title><rect x="96.2704%" y="1381" width="0.3624%" height="15" fill="rgb(224,18,32)" fg:x="494875547" fg:w="1862891"/><text x="96.5204%" y="1391.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (1,862,891 samples, 0.36%)</title><rect x="96.2704%" y="1365" width="0.3624%" height="15" fill="rgb(252,5,12)" fg:x="494875547" fg:w="1862891"/><text x="96.5204%" y="1375.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,862,891 samples, 0.36%)</title><rect x="96.2704%" y="1349" width="0.3624%" height="15" fill="rgb(251,36,5)" fg:x="494875547" fg:w="1862891"/><text x="96.5204%" y="1359.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (1,862,891 samples, 0.36%)</title><rect x="96.2704%" y="1333" width="0.3624%" height="15" fill="rgb(217,53,14)" fg:x="494875547" fg:w="1862891"/><text x="96.5204%" y="1343.50"></text></g><g><title>__GI___memcpy_simd (1,862,891 samples, 0.36%)</title><rect x="96.2704%" y="1317" width="0.3624%" height="15" fill="rgb(215,86,45)" fg:x="494875547" fg:w="1862891"/><text x="96.5204%" y="1327.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (2,320,792 samples, 0.45%)</title><rect x="96.6328%" y="1477" width="0.4515%" height="15" fill="rgb(242,169,11)" fg:x="496738438" fg:w="2320792"/><text x="96.8828%" y="1487.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1,971,104 samples, 0.38%)</title><rect x="96.7008%" y="1461" width="0.3834%" height="15" fill="rgb(211,213,45)" fg:x="497088126" fg:w="1971104"/><text x="96.9508%" y="1471.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,971,104 samples, 0.38%)</title><rect x="96.7008%" y="1445" width="0.3834%" height="15" fill="rgb(205,88,11)" fg:x="497088126" fg:w="1971104"/><text x="96.9508%" y="1455.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,971,104 samples, 0.38%)</title><rect x="96.7008%" y="1429" width="0.3834%" height="15" fill="rgb(252,69,26)" fg:x="497088126" fg:w="1971104"/><text x="96.9508%" y="1439.50"></text></g><g><title>__aarch64_cas8_acq_rel (1,971,104 samples, 0.38%)</title><rect x="96.7008%" y="1413" width="0.3834%" height="15" fill="rgb(246,123,37)" fg:x="497088126" fg:w="1971104"/><text x="96.9508%" y="1423.50"></text></g><g><title>el0t_64_irq_handler (1,971,104 samples, 0.38%)</title><rect x="96.7008%" y="1397" width="0.3834%" height="15" fill="rgb(212,205,5)" fg:x="497088126" fg:w="1971104"/><text x="96.9508%" y="1407.50"></text></g><g><title>__el0_irq_handler_common (1,971,104 samples, 0.38%)</title><rect x="96.7008%" y="1381" width="0.3834%" height="15" fill="rgb(253,148,0)" fg:x="497088126" fg:w="1971104"/><text x="96.9508%" y="1391.50"></text></g><g><title>el0_interrupt (1,971,104 samples, 0.38%)</title><rect x="96.7008%" y="1365" width="0.3834%" height="15" fill="rgb(239,22,4)" fg:x="497088126" fg:w="1971104"/><text x="96.9508%" y="1375.50"></text></g><g><title>irq_exit_rcu (1,971,104 samples, 0.38%)</title><rect x="96.7008%" y="1349" width="0.3834%" height="15" fill="rgb(226,26,53)" fg:x="497088126" fg:w="1971104"/><text x="96.9508%" y="1359.50"></text></g><g><title>__irq_exit_rcu (1,971,104 samples, 0.38%)</title><rect x="96.7008%" y="1333" width="0.3834%" height="15" fill="rgb(225,229,45)" fg:x="497088126" fg:w="1971104"/><text x="96.9508%" y="1343.50"></text></g><g><title>do_softirq_own_stack (1,971,104 samples, 0.38%)</title><rect x="96.7008%" y="1317" width="0.3834%" height="15" fill="rgb(220,60,37)" fg:x="497088126" fg:w="1971104"/><text x="96.9508%" y="1327.50"></text></g><g><title>call_on_irq_stack (1,971,104 samples, 0.38%)</title><rect x="96.7008%" y="1301" width="0.3834%" height="15" fill="rgb(217,180,35)" fg:x="497088126" fg:w="1971104"/><text x="96.9508%" y="1311.50"></text></g><g><title>____do_softirq (1,971,104 samples, 0.38%)</title><rect x="96.7008%" y="1285" width="0.3834%" height="15" fill="rgb(229,7,53)" fg:x="497088126" fg:w="1971104"/><text x="96.9508%" y="1295.50"></text></g><g><title>__softirqentry_text_start (1,971,104 samples, 0.38%)</title><rect x="96.7008%" y="1269" width="0.3834%" height="15" fill="rgb(254,137,3)" fg:x="497088126" fg:w="1971104"/><text x="96.9508%" y="1279.50"></text></g><g><title>handle_softirqs (1,971,104 samples, 0.38%)</title><rect x="96.7008%" y="1253" width="0.3834%" height="15" fill="rgb(215,140,41)" fg:x="497088126" fg:w="1971104"/><text x="96.9508%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,040,241 samples, 0.20%)</title><rect x="97.3339%" y="1445" width="0.2024%" height="15" fill="rgb(250,80,15)" fg:x="500342336" fg:w="1040241"/><text x="97.5839%" y="1455.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,040,241 samples, 0.20%)</title><rect x="97.3339%" y="1429" width="0.2024%" height="15" fill="rgb(252,191,6)" fg:x="500342336" fg:w="1040241"/><text x="97.5839%" y="1439.50"></text></g><g><title>__aarch64_cas8_acq_rel (1,040,241 samples, 0.20%)</title><rect x="97.3339%" y="1413" width="0.2024%" height="15" fill="rgb(246,217,18)" fg:x="500342336" fg:w="1040241"/><text x="97.5839%" y="1423.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (458,965,043 samples, 89.28%)</title><rect x="8.3684%" y="1509" width="89.2846%" height="15" fill="rgb(223,93,7)" fg:x="43017296" fg:w="458965043"/><text x="8.6184%" y="1519.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (455,443,355 samples, 88.60%)</title><rect x="9.0534%" y="1493" width="88.5995%" height="15" fill="rgb(225,55,52)" fg:x="46538984" fg:w="455443355"/><text x="9.3034%" y="1503.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (2,923,109 samples, 0.57%)</title><rect x="97.0843%" y="1477" width="0.5686%" height="15" fill="rgb(240,31,24)" fg:x="499059230" fg:w="2923109"/><text x="97.3343%" y="1487.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1,640,003 samples, 0.32%)</title><rect x="97.3339%" y="1461" width="0.3190%" height="15" fill="rgb(205,56,52)" fg:x="500342336" fg:w="1640003"/><text x="97.5839%" y="1471.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running::{{closure}} (599,762 samples, 0.12%)</title><rect x="97.5362%" y="1445" width="0.1167%" height="15" fill="rgb(246,146,12)" fg:x="501382577" fg:w="599762"/><text x="97.7862%" y="1455.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::unset_notified (599,762 samples, 0.12%)</title><rect x="97.5362%" y="1429" width="0.1167%" height="15" fill="rgb(239,84,36)" fg:x="501382577" fg:w="599762"/><text x="97.7862%" y="1439.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (346,788 samples, 0.07%)</title><rect x="97.6529%" y="1509" width="0.0675%" height="15" fill="rgb(207,41,40)" fg:x="501982339" fg:w="346788"/><text x="97.9029%" y="1519.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (463,853,134 samples, 90.24%)</title><rect x="8.1665%" y="1621" width="90.2355%" height="15" fill="rgb(241,179,25)" fg:x="41979491" fg:w="463853134"/><text x="8.4165%" y="1631.50">tokio::runtime::scheduler::current_thread::Context::run_task</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (463,205,364 samples, 90.11%)</title><rect x="8.2925%" y="1605" width="90.1095%" height="15" fill="rgb(210,0,34)" fg:x="42627261" fg:w="463205364"/><text x="8.5425%" y="1615.50">tokio::runtime::scheduler::current_thread::Context::enter</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task::{{closure}} (463,205,364 samples, 90.11%)</title><rect x="8.2925%" y="1589" width="90.1095%" height="15" fill="rgb(225,217,29)" fg:x="42627261" fg:w="463205364"/><text x="8.5425%" y="1599.50">tokio::runtime::scheduler::current_thread::Context::run_task::{{closure}}</text></g><g><title>tokio::task::coop::budget (463,205,364 samples, 90.11%)</title><rect x="8.2925%" y="1573" width="90.1095%" height="15" fill="rgb(216,191,38)" fg:x="42627261" fg:w="463205364"/><text x="8.5425%" y="1583.50">tokio::task::coop::budget</text></g><g><title>tokio::task::coop::with_budget (463,205,364 samples, 90.11%)</title><rect x="8.2925%" y="1557" width="90.1095%" height="15" fill="rgb(232,140,52)" fg:x="42627261" fg:w="463205364"/><text x="8.5425%" y="1567.50">tokio::task::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::{{closure}}::{{closure}} (462,815,329 samples, 90.03%)</title><rect x="8.3684%" y="1541" width="90.0336%" height="15" fill="rgb(223,158,51)" fg:x="43017296" fg:w="462815329"/><text x="8.6184%" y="1551.50">tokio::runtime::scheduler::current_thread::CoreGuard::block_on::{{closure}}::{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (462,815,329 samples, 90.03%)</title><rect x="8.3684%" y="1525" width="90.0336%" height="15" fill="rgb(235,29,51)" fg:x="43017296" fg:w="462815329"/><text x="8.6184%" y="1535.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::poll (3,503,498 samples, 0.68%)</title><rect x="97.7204%" y="1509" width="0.6816%" height="15" fill="rgb(215,181,18)" fg:x="502329127" fg:w="3503498"/><text x="97.9704%" y="1519.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::is_empty (630,161 samples, 0.12%)</title><rect x="98.4019%" y="1621" width="0.1226%" height="15" fill="rgb(227,125,34)" fg:x="505832625" fg:w="630161"/><text x="98.6519%" y="1631.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (630,161 samples, 0.12%)</title><rect x="98.4019%" y="1605" width="0.1226%" height="15" fill="rgb(230,197,49)" fg:x="505832625" fg:w="630161"/><text x="98.6519%" y="1615.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (630,161 samples, 0.12%)</title><rect x="98.4019%" y="1589" width="0.1226%" height="15" fill="rgb(239,141,16)" fg:x="505832625" fg:w="630161"/><text x="98.6519%" y="1599.50"></text></g><g><title>core::cell::BorrowRef::new (630,161 samples, 0.12%)</title><rect x="98.4019%" y="1573" width="0.1226%" height="15" fill="rgb(225,105,43)" fg:x="505832625" fg:w="630161"/><text x="98.6519%" y="1583.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (630,161 samples, 0.12%)</title><rect x="98.4019%" y="1557" width="0.1226%" height="15" fill="rgb(214,131,14)" fg:x="505832625" fg:w="630161"/><text x="98.6519%" y="1567.50"></text></g><g><title>_start (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="2133" width="96.9162%" height="15" fill="rgb(229,177,11)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="2143.50">_start</text></g><g><title>_start (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="2117" width="96.9162%" height="15" fill="rgb(231,180,14)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="2127.50">_start</text></g><g><title>__libc_start_main_alias_2 (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="2101" width="96.9162%" height="15" fill="rgb(232,88,2)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="2111.50">__libc_start_main_alias_2</text></g><g><title>__libc_start_call_main (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="2085" width="96.9162%" height="15" fill="rgb(205,220,8)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="2095.50">__libc_start_call_main</text></g><g><title>main (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="2069" width="96.9162%" height="15" fill="rgb(225,23,53)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="2079.50">main</text></g><g><title>std::rt::lang_start_internal (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="2053" width="96.9162%" height="15" fill="rgb(213,62,29)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="2063.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="2037" width="96.9162%" height="15" fill="rgb(227,75,7)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="2047.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="2021" width="96.9162%" height="15" fill="rgb(207,105,14)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="2031.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="2005" width="96.9162%" height="15" fill="rgb(245,62,29)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="2015.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1989" width="96.9162%" height="15" fill="rgb(236,202,4)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1999.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1973" width="96.9162%" height="15" fill="rgb(250,67,1)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1983.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1957" width="96.9162%" height="15" fill="rgb(253,115,44)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1967.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1941" width="96.9162%" height="15" fill="rgb(251,139,18)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1951.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1925" width="96.9162%" height="15" fill="rgb(218,22,32)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1935.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1909" width="96.9162%" height="15" fill="rgb(243,53,5)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1919.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1893" width="96.9162%" height="15" fill="rgb(227,56,16)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1903.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1877" width="96.9162%" height="15" fill="rgb(245,53,0)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1887.50">core::ops::function::FnOnce::call_once</text></g><g><title>main::main (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1861" width="96.9162%" height="15" fill="rgb(216,170,35)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1871.50">main::main</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1845" width="96.9162%" height="15" fill="rgb(211,200,8)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1855.50">tokio::runtime::runtime::Runtime::block_on</text></g><g><title>tokio::runtime::runtime::Runtime::block_on_inner (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1829" width="96.9162%" height="15" fill="rgb(228,204,44)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1839.50">tokio::runtime::runtime::Runtime::block_on_inner</text></g><g><title>tokio::runtime::scheduler::current_thread::CurrentThread::block_on (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1813" width="96.9162%" height="15" fill="rgb(214,121,17)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1823.50">tokio::runtime::scheduler::current_thread::CurrentThread::block_on</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1797" width="96.9162%" height="15" fill="rgb(233,64,38)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1807.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::current_thread::CurrentThread::block_on::{{closure}} (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1781" width="96.9162%" height="15" fill="rgb(253,54,19)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1791.50">tokio::runtime::scheduler::current_thread::CurrentThread::block_on::{{closure}}</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1765" width="96.9162%" height="15" fill="rgb(253,94,18)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1775.50">tokio::runtime::scheduler::current_thread::CoreGuard::block_on</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::enter (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1749" width="96.9162%" height="15" fill="rgb(227,57,52)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1759.50">tokio::runtime::scheduler::current_thread::CoreGuard::enter</text></g><g><title>tokio::runtime::context::set_scheduler (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1733" width="96.9162%" height="15" fill="rgb(230,228,50)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1743.50">tokio::runtime::context::set_scheduler</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1717" width="96.9162%" height="15" fill="rgb(217,205,27)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1727.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1701" width="96.9162%" height="15" fill="rgb(252,71,50)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1711.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1685" width="96.9162%" height="15" fill="rgb(209,86,4)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1695.50">tokio::runtime::context::set_scheduler::{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1669" width="96.9162%" height="15" fill="rgb(229,94,0)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1679.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::enter::{{closure}} (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1653" width="96.9162%" height="15" fill="rgb(252,223,21)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1663.50">tokio::runtime::scheduler::current_thread::CoreGuard::enter::{{closure}}</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::{{closure}} (498,195,173 samples, 96.92%)</title><rect x="1.8164%" y="1637" width="96.9162%" height="15" fill="rgb(230,210,4)" fg:x="9336945" fg:w="498195173"/><text x="2.0664%" y="1647.50">tokio::runtime::scheduler::current_thread::CoreGuard::block_on::{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::task_meta (1,069,332 samples, 0.21%)</title><rect x="98.5245%" y="1621" width="0.2080%" height="15" fill="rgb(240,149,38)" fg:x="506462786" fg:w="1069332"/><text x="98.7745%" y="1631.50"></text></g><g><title>tokio::runtime::task::Task&lt;S&gt;::task_meta (1,069,332 samples, 0.21%)</title><rect x="98.5245%" y="1605" width="0.2080%" height="15" fill="rgb(254,105,20)" fg:x="506462786" fg:w="1069332"/><text x="98.7745%" y="1615.50"></text></g><g><title>tokio::runtime::task::Task&lt;S&gt;::id (1,069,332 samples, 0.21%)</title><rect x="98.5245%" y="1589" width="0.2080%" height="15" fill="rgb(253,87,46)" fg:x="506462786" fg:w="1069332"/><text x="98.7745%" y="1599.50"></text></g><g><title>tokio::runtime::task::core::Header::get_id (1,069,332 samples, 0.21%)</title><rect x="98.5245%" y="1573" width="0.2080%" height="15" fill="rgb(253,116,33)" fg:x="506462786" fg:w="1069332"/><text x="98.7745%" y="1583.50"></text></g><g><title>core::hash::BuildHasher::hash_one (406,892 samples, 0.08%)</title><rect x="98.7325%" y="2133" width="0.0792%" height="15" fill="rgb(229,198,5)" fg:x="507532118" fg:w="406892"/><text x="98.9825%" y="2143.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (406,892 samples, 0.08%)</title><rect x="98.7325%" y="2117" width="0.0792%" height="15" fill="rgb(242,38,37)" fg:x="507532118" fg:w="406892"/><text x="98.9825%" y="2127.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (406,892 samples, 0.08%)</title><rect x="98.7325%" y="2101" width="0.0792%" height="15" fill="rgb(242,69,53)" fg:x="507532118" fg:w="406892"/><text x="98.9825%" y="2111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (406,892 samples, 0.08%)</title><rect x="98.7325%" y="2085" width="0.0792%" height="15" fill="rgb(249,80,16)" fg:x="507532118" fg:w="406892"/><text x="98.9825%" y="2095.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (406,892 samples, 0.08%)</title><rect x="98.7325%" y="2069" width="0.0792%" height="15" fill="rgb(206,128,11)" fg:x="507532118" fg:w="406892"/><text x="98.9825%" y="2079.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (406,892 samples, 0.08%)</title><rect x="98.7325%" y="2053" width="0.0792%" height="15" fill="rgb(212,35,20)" fg:x="507532118" fg:w="406892"/><text x="98.9825%" y="2063.50"></text></g><g><title>ring::aead::aes_gcm::open (1,900,868 samples, 0.37%)</title><rect x="98.8117%" y="2133" width="0.3698%" height="15" fill="rgb(236,79,13)" fg:x="507939010" fg:w="1900868"/><text x="99.0617%" y="2143.50"></text></g><g><title>ring::aead::aes_gcm::open_whole_partial (1,900,868 samples, 0.37%)</title><rect x="98.8117%" y="2117" width="0.3698%" height="15" fill="rgb(233,123,3)" fg:x="507939010" fg:w="1900868"/><text x="99.0617%" y="2127.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,900,868 samples, 0.37%)</title><rect x="98.8117%" y="2101" width="0.3698%" height="15" fill="rgb(214,93,52)" fg:x="507939010" fg:w="1900868"/><text x="99.0617%" y="2111.50"></text></g><g><title>ring::aead::aes_gcm::aarch64::open_whole (1,900,868 samples, 0.37%)</title><rect x="98.8117%" y="2085" width="0.3698%" height="15" fill="rgb(251,37,40)" fg:x="507939010" fg:w="1900868"/><text x="99.0617%" y="2095.50"></text></g><g><title>ring::aead::overlapping::base::Overlapping&lt;T&gt;::with_input_output_len (1,900,868 samples, 0.37%)</title><rect x="98.8117%" y="2069" width="0.3698%" height="15" fill="rgb(227,80,54)" fg:x="507939010" fg:w="1900868"/><text x="99.0617%" y="2079.50"></text></g><g><title>ring::aead::aes_gcm::aarch64::open_whole::{{closure}} (1,900,868 samples, 0.37%)</title><rect x="98.8117%" y="2053" width="0.3698%" height="15" fill="rgb(254,48,11)" fg:x="507939010" fg:w="1900868"/><text x="99.0617%" y="2063.50"></text></g><g><title>ring_core_0_17_14__aes_gcm_dec_kernel (1,900,868 samples, 0.37%)</title><rect x="98.8117%" y="2037" width="0.3698%" height="15" fill="rgb(235,193,26)" fg:x="507939010" fg:w="1900868"/><text x="99.0617%" y="2047.50"></text></g><g><title>ring::aead::aes_gcm::seal (2,008,039 samples, 0.39%)</title><rect x="99.1815%" y="2133" width="0.3906%" height="15" fill="rgb(229,99,21)" fg:x="509839878" fg:w="2008039"/><text x="99.4315%" y="2143.50"></text></g><g><title>ring::aead::aes_gcm::seal_whole_partial (2,008,039 samples, 0.39%)</title><rect x="99.1815%" y="2117" width="0.3906%" height="15" fill="rgb(211,140,41)" fg:x="509839878" fg:w="2008039"/><text x="99.4315%" y="2127.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2,008,039 samples, 0.39%)</title><rect x="99.1815%" y="2101" width="0.3906%" height="15" fill="rgb(240,227,30)" fg:x="509839878" fg:w="2008039"/><text x="99.4315%" y="2111.50"></text></g><g><title>ring::aead::aes_gcm::aarch64::seal_whole (2,008,039 samples, 0.39%)</title><rect x="99.1815%" y="2085" width="0.3906%" height="15" fill="rgb(215,224,45)" fg:x="509839878" fg:w="2008039"/><text x="99.4315%" y="2095.50"></text></g><g><title>ring_core_0_17_14__aes_gcm_enc_kernel (2,008,039 samples, 0.39%)</title><rect x="99.1815%" y="2069" width="0.3906%" height="15" fill="rgb(206,123,31)" fg:x="509839878" fg:w="2008039"/><text x="99.4315%" y="2079.50"></text></g><g><title>ring::digest::dynstate::sha512_block_data_order (1,189,424 samples, 0.23%)</title><rect x="99.5721%" y="2133" width="0.2314%" height="15" fill="rgb(210,138,16)" fg:x="511847917" fg:w="1189424"/><text x="99.8221%" y="2143.50"></text></g><g><title>ring::digest::sha2::sha2_64::block_data_order_64 (1,189,424 samples, 0.23%)</title><rect x="99.5721%" y="2117" width="0.2314%" height="15" fill="rgb(228,57,28)" fg:x="511847917" fg:w="1189424"/><text x="99.8221%" y="2127.50"></text></g><g><title>ring::digest::sha2::ffi::sha2_ffi (1,189,424 samples, 0.23%)</title><rect x="99.5721%" y="2101" width="0.2314%" height="15" fill="rgb(242,170,10)" fg:x="511847917" fg:w="1189424"/><text x="99.8221%" y="2111.50"></text></g><g><title>[main] (1,189,424 samples, 0.23%)</title><rect x="99.5721%" y="2085" width="0.2314%" height="15" fill="rgb(228,214,39)" fg:x="511847917" fg:w="1189424"/><text x="99.8221%" y="2095.50"></text></g><g><title>ring_core_0_17_14__sha512_block_data_order_nohw (1,189,424 samples, 0.23%)</title><rect x="99.5721%" y="2069" width="0.2314%" height="15" fill="rgb(218,179,33)" fg:x="511847917" fg:w="1189424"/><text x="99.8221%" y="2079.50"></text></g><g><title>all (514,047,462 samples, 100%)</title><rect x="0.0000%" y="2165" width="100.0000%" height="15" fill="rgb(235,193,39)" fg:x="0" fg:w="514047462"/><text x="0.2500%" y="2175.50"></text></g><g><title>main (514,047,462 samples, 100.00%)</title><rect x="0.0000%" y="2149" width="100.0000%" height="15" fill="rgb(219,221,36)" fg:x="0" fg:w="514047462"/><text x="0.2500%" y="2159.50">main</text></g><g><title>ring_core_0_17_14__p256_point_mul_base (1,010,121 samples, 0.20%)</title><rect x="99.8035%" y="2133" width="0.1965%" height="15" fill="rgb(248,218,19)" fg:x="513037341" fg:w="1010121"/><text x="100.0535%" y="2143.50"></text></g><g><title>ring_core_0_17_14__p256_point_add_affine (1,010,121 samples, 0.20%)</title><rect x="99.8035%" y="2117" width="0.1965%" height="15" fill="rgb(205,50,9)" fg:x="513037341" fg:w="1010121"/><text x="100.0535%" y="2127.50"></text></g><g><title>__ecp_nistz256_mul_mont (1,010,121 samples, 0.20%)</title><rect x="99.8035%" y="2101" width="0.1965%" height="15" fill="rgb(238,81,28)" fg:x="513037341" fg:w="1010121"/><text x="100.0535%" y="2111.50"></text></g></svg></svg>